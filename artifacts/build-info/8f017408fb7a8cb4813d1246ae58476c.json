{
	"id": "8f017408fb7a8cb4813d1246ae58476c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"BurnManger.sol": {
				"content": "// contracts/BurnManager.sol\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\n\r\ninterface IERC721Burnable {\r\n    function burn(uint256 tokenId) external;\r\n    function ownerOf(uint256 tokenId) external view returns (address);\r\n}\r\n\r\n/**\r\n * @title BurnManager\r\n * @dev Contract for managing NFT burns with payment system\r\n * Uses OpenZeppelin standards for security and access control\r\n */\r\ncontract BurnManager is Ownable, ReentrancyGuard, Pausable {\r\n    using Address for address payable;\r\n\r\n    address public immutable nftContract;\r\n    uint256 private burnFee = 0.1 gwei;\r\n    uint16 public burnAmount = 10;\r\n    \r\n    mapping(uint32 => bool) private isBurned;\r\n    mapping(uint32 => bool) private isUpdated;\r\n    \r\n    uint256 private constant MAX_BURN_FEE = 1 ether;\r\n\r\n    event TokensBurned(address indexed burner, uint32[] tokenIds, uint256 totalFee, uint32 indexed updateId);\r\n    event BurnFeeUpdated(uint256 oldFee, uint256 newFee);\r\n    event FundsWithdrawn(address indexed owner, uint256 amount);\r\n\r\n    error InvalidTokenId();\r\n    error InsufficientPayment();\r\n    error TokenAlreadyBurned();\r\n    error NotTokenOwner();\r\n    error FeeExceedsMaximum();\r\n    error FeeUnchanged();\r\n    error NoFundsToWithdraw();\r\n    error WithdrawalFailed();\r\n\r\n    modifier validTokenId(uint256 tokenId) {\r\n        if (tokenId == 0) revert InvalidTokenId();\r\n        _;\r\n    }\r\n\r\n    constructor(address _nftContract) Ownable(msg.sender) {\r\n        if (_nftContract == address(0)) revert InvalidTokenId();\r\n        nftContract = _nftContract;\r\n    }\r\n\r\n    function createPremium(uint32[] calldata tokenIds, uint32 updateId)\r\n        external\r\n        payable\r\n        nonReentrant\r\n        whenNotPaused\r\n    {\r\n        _validateInput(tokenIds, updateId);\r\n        _processBurn(tokenIds, updateId);\r\n        _refundExcess();\r\n    }\r\n\r\n    function _validateInput(uint32[] calldata tokenIds, uint32 updateId) private view {\r\n        uint32 tokenCount = uint32(tokenIds.length);\r\n        if (tokenCount == 0) revert(\"No tokens provided\");\r\n        if (tokenCount != burnAmount) revert(\"Burn the required token amount\");\r\n\r\n        if (msg.value < burnFee) revert(\"Insufficient payment\");\r\n\r\n        IERC721Burnable nft = IERC721Burnable(nftContract);\r\n\r\n        if (nft.ownerOf(updateId) != msg.sender) revert(\"Not token owner\");\r\n        if (isBurned[updateId]) revert(\"Token already burned\");\r\n        if (isUpdated[updateId]) revert(\"Token already updated\");\r\n\r\n        for (uint32 i = 0; i < tokenCount; i++) {\r\n            uint32 tokenId = tokenIds[i];\r\n            if (tokenId == updateId) revert(\"updateId cannot be among tokenIds\");\r\n            if (isBurned[tokenId]) revert(\"Token already burned\");\r\n            if (nft.ownerOf(tokenId) != msg.sender) revert(\"Not token owner\");\r\n        }\r\n    }\r\n\r\n    function _processBurn(uint32[] calldata tokenIds, uint32 updateId) private {\r\n        IERC721Burnable nft = IERC721Burnable(nftContract);\r\n\r\n        isUpdated[updateId] = true;\r\n        for (uint32 i = 0; i < tokenIds.length; i++) {\r\n            uint32 tokenId = tokenIds[i];\r\n            isBurned[tokenId] = true;\r\n            nft.burn(tokenId);\r\n        }\r\n\r\n        emit TokensBurned(msg.sender, tokenIds, burnFee, updateId);\r\n    }\r\n\r\n    function _refundExcess() private {\r\n        uint256 excess = msg.value - burnFee;\r\n        if (excess > 0) {\r\n            (bool success, ) = payable(msg.sender).call{value: excess}(\"\");\r\n            if (!success) revert(\"Refund failed\");\r\n        }\r\n    }\r\n\r\n    function setBurnAmount(uint16 amount) external onlyOwner {\r\n        require(amount > 0, \"Minimum must be > 0\");\r\n        burnAmount = amount;\r\n    }\r\n\r\n    function isTokenBurned(uint32 tokenId) \r\n        external \r\n        view \r\n        validTokenId(tokenId) \r\n        returns (bool) \r\n    {\r\n        return isBurned[tokenId];\r\n    }\r\n\r\n    function isUpdatedToken(uint32 tokenId) \r\n        external \r\n        view \r\n        validTokenId(tokenId) \r\n        returns (bool) \r\n    {\r\n        return isUpdated[tokenId];\r\n    }\r\n\r\n    function setBurnFee(uint256 _newFee) external onlyOwner {\r\n        if (_newFee > MAX_BURN_FEE) revert FeeExceedsMaximum();\r\n        \r\n        uint256 oldFee = burnFee;\r\n        burnFee = _newFee;\r\n        emit BurnFeeUpdated(oldFee, _newFee);\r\n    }\r\n\r\n    function _withdrawFunds(uint256 _amount) private nonReentrant {\r\n        if (_amount == 0 || _amount > address(this).balance) revert NoFundsToWithdraw();\r\n\r\n        payable(owner()).sendValue(_amount);\r\n        emit FundsWithdrawn(owner(), _amount);\r\n    }\r\n\r\n    function withdrawFunds() external onlyOwner {\r\n        _withdrawFunds(address(this).balance);\r\n    }\r\n\r\n    function withdrawPartialFunds(uint256 _amount) external onlyOwner {\r\n        _withdrawFunds(_amount);\r\n    }\r\n\r\n    function pause() external onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() external onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    function getContractBalance() external view returns (uint256) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    function getBurnFee() external view returns (uint256) {\r\n        return burnFee;\r\n    }\r\n    \r\n    function getMaxBurnFee() external pure returns (uint256) {\r\n        return MAX_BURN_FEE;\r\n    }\r\n\r\n    // Prevent accidental ETH sends\r\n    receive() external payable {\r\n        revert(\"Direct ETH transfers not allowed\");\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                revert(add(returndata, 0x20), mload(returndata))\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 266,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:5995  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:5995  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220a81a666fd9bb593eddcd5d46cdd479bdca10eb216201ec12d3a05dc20bc3592264736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220a81a666fd9bb593eddcd5d46cdd479bdca10eb216201ec12d3a05dc20bc3592264736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 BYTE PUSH7 0x6FD9BB593EDDCD TSTORE CHAINID 0xCD 0xD4 PUSH26 0xBDCA10EB216201EC12D3A05DC20BC3592264736F6C634300081C STOP CALLER ",
							"sourceMap": "233:5762:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;233:5762:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220a81a666fd9bb593eddcd5d46cdd479bdca10eb216201ec12d3a05dc20bc3592264736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 BYTE PUSH7 0x6FD9BB593EDDCD TSTORE CHAINID 0xCD 0xD4 PUSH26 0xBDCA10EB216201EC12D3A05DC20BC3592264736F6C634300081C STOP CALLER ",
							"sourceMap": "233:5762:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 5995,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 233,
									"end": 5995,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a81a666fd9bb593eddcd5d46cdd479bdca10eb216201ec12d3a05dc20bc3592264736f6c634300081c0033",
									".code": [
										{
											"begin": 233,
											"end": 5995,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 233,
											"end": 5995,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 233,
											"end": 5995,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 233,
											"end": 5995,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 5995,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 5995,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 233,
											"end": 5995,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 5995,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 5995,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"BurnManger.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212209e4da8aa5333ac8d389d2e409b786095cfb5076699894c42d09ca4aa483d24be64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212209e4da8aa5333ac8d389d2e409b786095cfb5076699894c42d09ca4aa483d24be64736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0x4D 0xA8 0xAA MSTORE8 CALLER 0xAC DUP14 CODESIZE SWAP14 0x2E BLOCKHASH SWAP12 PUSH25 0x6095CFB5076699894C42D09CA4AA483D24BE64736F6C634300 ADDMOD SHR STOP CALLER ",
							"sourceMap": "411:484:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;411:484:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212209e4da8aa5333ac8d389d2e409b786095cfb5076699894c42d09ca4aa483d24be64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0x4D 0xA8 0xAA MSTORE8 CALLER 0xAC DUP14 CODESIZE SWAP14 0x2E BLOCKHASH SWAP12 PUSH25 0x6095CFB5076699894C42D09CA4AA483D24BE64736F6C634300 ADDMOD SHR STOP CALLER ",
							"sourceMap": "411:484:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209e4da8aa5333ac8d389d2e409b786095cfb5076699894c42d09ca4aa483d24be64736f6c634300081c0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"BurnManger.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BurnManger.sol": {
				"BurnManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftContract",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FeeExceedsMaximum",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FeeUnchanged",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientPayment",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidTokenId",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NoFundsToWithdraw",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotTokenOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokenAlreadyBurned",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "WithdrawalFailed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newFee",
									"type": "uint256"
								}
							],
							"name": "BurnFeeUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "FundsWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "burner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint32[]",
									"name": "tokenIds",
									"type": "uint32[]"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalFee",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "updateId",
									"type": "uint32"
								}
							],
							"name": "TokensBurned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "burnAmount",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "tokenIds",
									"type": "uint32[]"
								},
								{
									"internalType": "uint32",
									"name": "updateId",
									"type": "uint32"
								}
							],
							"name": "createPremium",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBurnFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getContractBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMaxBurnFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "tokenId",
									"type": "uint32"
								}
							],
							"name": "isTokenBurned",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "tokenId",
									"type": "uint32"
								}
							],
							"name": "isUpdatedToken",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "amount",
									"type": "uint16"
								}
							],
							"name": "setBurnAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newFee",
									"type": "uint256"
								}
							],
							"name": "setBurnFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdrawPartialFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "Contract for managing NFT burns with payment system Uses OpenZeppelin standards for security and access control",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "BurnManager",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BurnManger.sol\":631:5632  contract BurnManager is Ownable, ReentrancyGuard, Pausable {... */\n  mstore(0x40, 0xa0)\n    /* \"BurnManger.sol\":808:816  0.1 gwei */\n  0x05f5e100\n    /* \"BurnManger.sol\":782:816  uint256 private burnFee = 0.1 gwei */\n  0x03\n  sstore\n    /* \"BurnManger.sol\":823:852  uint16 public burnAmount = 10 */\n  0x04\n  dup1\n  sload\n  not(0xffff)\n  and\n    /* \"BurnManger.sol\":850:852  10 */\n  0x0a\n    /* \"BurnManger.sol\":823:852  uint16 public burnAmount = 10 */\n  or\n  swap1\n  sstore\n    /* \"BurnManger.sol\":1627:1792  constructor(address _nftContract) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"BurnManger.sol\":1669:1679  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":455:506   */\n  mstore\n    /* \"#utility.yul\":428:446   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup1\n  sstore\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x02\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"BurnManger.sol\":1696:1722  _nftContract == address(0) */\n  dup2\n  and\n    /* \"BurnManger.sol\":1692:1747  if (_nftContract == address(0)) revert InvalidTokenId() */\n  tag_17\n  jumpi\n    /* \"BurnManger.sol\":1731:1747  InvalidTokenId() */\n  mload(0x40)\n  shl(0xe3, 0x07ed98ed)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"BurnManger.sol\":1692:1747  if (_nftContract == address(0)) revert InvalidTokenId() */\ntag_17:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"BurnManger.sol\":1758:1784  nftContract = _nftContract */\n  and\n  0x80\n  mstore\n    /* \"BurnManger.sol\":631:5632  contract BurnManager is Ownable, ReentrancyGuard, Pausable {... */\n  jump(tag_20)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  0x00\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_22:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  0x00\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_23:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:512   */\ntag_20:\n    /* \"BurnManger.sol\":631:5632  contract BurnManager is Ownable, ReentrancyGuard, Pausable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x3ed49036aa79101305a3bfa1070275a6dbad22810edfdc0e3caad458e4a9b16b\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"BurnManger.sol\":631:5632  contract BurnManager is Ownable, ReentrancyGuard, Pausable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6f9fb98a\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xaa4b10d1\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xaa4b10d1\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc3d93ecd\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd4e0ed2e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd56d229d\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      revert(0x00, 0x00)\n    tag_22:\n      dup1\n      0x6f9fb98a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      revert(0x00, 0x00)\n    tag_21:\n      dup1\n      0x41989bef\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x41989bef\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x486a7e6b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4bf2c7c9\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x576aee51\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_11\n      jumpi\n      revert(0x00, 0x00)\n    tag_23:\n      dup1\n      0x1deedfb5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1df8473d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x24600fc3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_6\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"BurnManger.sol\":5579:5621  revert(\"Direct ETH transfers not allowed\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":216:218   */\n      0x20\n        /* \"BurnManger.sol\":5579:5621  revert(\"Direct ETH transfers not allowed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":198:219   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":235:253   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":228:258   */\n      mstore\n        /* \"#utility.yul\":294:328   */\n      0x44697265637420455448207472616e7366657273206e6f7420616c6c6f776564\n        /* \"#utility.yul\":274:292   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":267:329   */\n      mstore\n        /* \"#utility.yul\":346:364   */\n      0x64\n      add\n        /* \"BurnManger.sol\":5579:5621  revert(\"Direct ETH transfers not allowed\") */\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"BurnManger.sol\":631:5632  contract BurnManager is Ownable, ReentrancyGuard, Pausable {... */\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"BurnManger.sol\":3762:3910  function setBurnAmount(uint16 amount) external onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      revert(0x00, 0x00)\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"BurnManger.sol\":4105:4286  function isUpdatedToken(uint32 tokenId) ... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      revert(0x00, 0x00)\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":1174:1188   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1167:1189   */\n      iszero\n        /* \"#utility.yul\":1149:1190   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1137:1139   */\n      0x20\n        /* \"#utility.yul\":1122:1140   */\n      add\n        /* \"BurnManger.sol\":4105:4286  function isUpdatedToken(uint32 tokenId) ... */\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BurnManger.sol\":4815:4915  function withdrawFunds() external onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      revert(0x00, 0x00)\n    tag_40:\n      pop\n      tag_29\n      tag_42\n      jump\t// in\n        /* \"BurnManger.sol\":5110:5177  function unpause() external onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      revert(0x00, 0x00)\n    tag_43:\n      pop\n      tag_29\n      tag_45\n      jump\t// in\n        /* \"BurnManger.sol\":1800:2075  function createPremium(uint32[] calldata tokenIds, uint32 updateId)... */\n    tag_7:\n      tag_29\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n        /* \"BurnManger.sol\":823:852  uint16 public burnAmount = 10 */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      revert(0x00, 0x00)\n    tag_50:\n      pop\n      sload(0x04)\n      tag_51\n      swap1\n      0xffff\n      and\n      dup2\n      jump\n    tag_51:\n      mload(0x40)\n        /* \"#utility.yul\":2067:2073   */\n      0xffff\n        /* \"#utility.yul\":2055:2074   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2037:2075   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2025:2027   */\n      0x20\n        /* \"#utility.yul\":2010:2028   */\n      add\n        /* \"BurnManger.sol\":823:852  uint16 public burnAmount = 10 */\n      tag_38\n        /* \"#utility.yul\":1893:2081   */\n      jump\n        /* \"BurnManger.sol\":4294:4543  function setBurnFee(uint256 _newFee) external onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      revert(0x00, 0x00)\n    tag_55:\n      pop\n      tag_29\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n        /* \"BurnManger.sol\":5401:5496  function getMaxBurnFee() external pure returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      revert(0x00, 0x00)\n    tag_60:\n      pop\n        /* \"BurnManger.sol\":1006:1013  1 ether */\n      0x0de0b6b3a7640000\n        /* \"BurnManger.sol\":5401:5496  function getMaxBurnFee() external pure returns (uint256) {... */\n    tag_61:\n      mload(0x40)\n        /* \"#utility.yul\":2417:2442   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2405:2407   */\n      0x20\n        /* \"#utility.yul\":2390:2408   */\n      add\n        /* \"BurnManger.sol\":5401:5496  function getMaxBurnFee() external pure returns (uint256) {... */\n      tag_38\n        /* \"#utility.yul\":2271:2448   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      revert(0x00, 0x00)\n    tag_65:\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      and(0xff, sload(0x02))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      jump(tag_34)\n        /* \"BurnManger.sol\":5185:5294  function getContractBalance() external view returns (uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      revert(0x00, 0x00)\n    tag_69:\n      pop\n        /* \"BurnManger.sol\":5265:5286  address(this).balance */\n      selfbalance\n        /* \"BurnManger.sol\":5185:5294  function getContractBalance() external view returns (uint256) {... */\n      jump(tag_61)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      revert(0x00, 0x00)\n    tag_73:\n      pop\n      tag_29\n      tag_75\n      jump\t// in\n        /* \"BurnManger.sol\":5039:5102  function pause() external onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      revert(0x00, 0x00)\n    tag_76:\n      pop\n      tag_29\n      tag_78\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      revert(0x00, 0x00)\n    tag_79:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_80:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2617:2649   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2599:2650   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2587:2589   */\n      0x20\n        /* \"#utility.yul\":2572:2590   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_38\n        /* \"#utility.yul\":2453:2656   */\n      jump\n        /* \"BurnManger.sol\":5302:5389  function getBurnFee() external view returns (uint256) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      revert(0x00, 0x00)\n    tag_84:\n      pop\n        /* \"BurnManger.sol\":5374:5381  burnFee */\n      sload(0x03)\n        /* \"BurnManger.sol\":5302:5389  function getBurnFee() external view returns (uint256) {... */\n      jump(tag_61)\n        /* \"BurnManger.sol\":3918:4097  function isTokenBurned(uint32 tokenId) ... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      revert(0x00, 0x00)\n    tag_88:\n      pop\n      tag_34\n      tag_90\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n        /* \"BurnManger.sol\":4923:5031  function withdrawPartialFunds(uint256 _amount) external onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      revert(0x00, 0x00)\n    tag_93:\n      pop\n      tag_29\n      tag_95\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n        /* \"BurnManger.sol\":739:775  address public immutable nftContract */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_97\n      jumpi\n      revert(0x00, 0x00)\n    tag_97:\n      pop\n      tag_80\n      immutable(\"0x3ed49036aa79101305a3bfa1070275a6dbad22810edfdc0e3caad458e4a9b16b\")\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      revert(0x00, 0x00)\n    tag_101:\n      pop\n      tag_29\n      tag_103\n      calldatasize\n      0x04\n      tag_104\n      jump\t// in\n    tag_103:\n      tag_105\n      jump\t// in\n        /* \"BurnManger.sol\":3762:3910  function setBurnAmount(uint16 amount) external onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_107:\n        /* \"BurnManger.sol\":3847:3848  0 */\n      0x00\n        /* \"BurnManger.sol\":3838:3844  amount */\n      dup2\n        /* \"BurnManger.sol\":3838:3848  amount > 0 */\n      0xffff\n      and\n      gt\n        /* \"BurnManger.sol\":3830:3872  require(amount > 0, \"Minimum must be > 0\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3251:3253   */\n      0x20\n        /* \"BurnManger.sol\":3830:3872  require(amount > 0, \"Minimum must be > 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3233:3254   */\n      mstore\n        /* \"#utility.yul\":3290:3292   */\n      0x13\n        /* \"#utility.yul\":3270:3288   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3263:3293   */\n      mstore\n      shl(0x6c, 0x04d696e696d756d206d757374206265203e203)\n        /* \"#utility.yul\":3309:3327   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3302:3351   */\n      mstore\n        /* \"#utility.yul\":3368:3386   */\n      0x64\n      add\n        /* \"BurnManger.sol\":3830:3872  require(amount > 0, \"Minimum must be > 0\") */\n      tag_26\n        /* \"#utility.yul\":3049:3392   */\n      jump\n        /* \"BurnManger.sol\":3830:3872  require(amount > 0, \"Minimum must be > 0\") */\n    tag_110:\n        /* \"BurnManger.sol\":3883:3893  burnAmount */\n      0x04\n        /* \"BurnManger.sol\":3883:3902  burnAmount = amount */\n      dup1\n      sload\n      not(0xffff)\n      and\n      0xffff\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"BurnManger.sol\":3762:3910  function setBurnAmount(uint16 amount) external onlyOwner {... */\n      jump\t// out\n        /* \"BurnManger.sol\":4105:4286  function isUpdatedToken(uint32 tokenId) ... */\n    tag_37:\n        /* \"BurnManger.sol\":4230:4234  bool */\n      0x00\n        /* \"BurnManger.sol\":4202:4209  tokenId */\n      dup2\n        /* \"BurnManger.sol\":1508:1619  modifier validTokenId(uint256 tokenId) {... */\n      0xffffffff\n      and\n        /* \"BurnManger.sol\":1562:1569  tokenId */\n      dup1\n        /* \"BurnManger.sol\":1573:1574  0 */\n      0x00\n        /* \"BurnManger.sol\":1562:1574  tokenId == 0 */\n      sub\n        /* \"BurnManger.sol\":1558:1599  if (tokenId == 0) revert InvalidTokenId() */\n      tag_114\n      jumpi\n        /* \"BurnManger.sol\":1583:1599  InvalidTokenId() */\n      mload(0x40)\n      shl(0xe3, 0x07ed98ed)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"BurnManger.sol\":1558:1599  if (tokenId == 0) revert InvalidTokenId() */\n    tag_114:\n      pop\n      pop\n        /* \"BurnManger.sol\":4260:4278  isUpdated[tokenId] */\n      0xffffffff\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BurnManger.sol\":4260:4269  isUpdated */\n      0x06\n        /* \"BurnManger.sol\":4260:4278  isUpdated[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"BurnManger.sol\":4105:4286  function isUpdatedToken(uint32 tokenId) ... */\n      jump\t// out\n        /* \"BurnManger.sol\":4815:4915  function withdrawFunds() external onlyOwner {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_117:\n        /* \"BurnManger.sol\":4870:4907  _withdrawFunds(address(this).balance) */\n      tag_119\n        /* \"BurnManger.sol\":4885:4906  address(this).balance */\n      selfbalance\n        /* \"BurnManger.sol\":4870:4884  _withdrawFunds */\n      tag_120\n        /* \"BurnManger.sol\":4870:4907  _withdrawFunds(address(this).balance) */\n      jump\t// in\n    tag_119:\n        /* \"BurnManger.sol\":4815:4915  function withdrawFunds() external onlyOwner {... */\n      jump\t// out\n        /* \"BurnManger.sol\":5110:5177  function unpause() external onlyOwner {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_122:\n        /* \"BurnManger.sol\":5159:5169  _unpause() */\n      tag_119\n        /* \"BurnManger.sol\":5159:5167  _unpause */\n      tag_125\n        /* \"BurnManger.sol\":5159:5169  _unpause() */\n      jump\t// in\n        /* \"BurnManger.sol\":1800:2075  function createPremium(uint32[] calldata tokenIds, uint32 updateId)... */\n    tag_49:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_127\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_128\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_130\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_131\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_130:\n        /* \"BurnManger.sol\":1964:1998  _validateInput(tokenIds, updateId) */\n      tag_133\n        /* \"BurnManger.sol\":1979:1987  tokenIds */\n      dup4\n      dup4\n        /* \"BurnManger.sol\":1989:1997  updateId */\n      dup4\n        /* \"BurnManger.sol\":1964:1978  _validateInput */\n      tag_134\n        /* \"BurnManger.sol\":1964:1998  _validateInput(tokenIds, updateId) */\n      jump\t// in\n    tag_133:\n        /* \"BurnManger.sol\":2009:2041  _processBurn(tokenIds, updateId) */\n      tag_135\n        /* \"BurnManger.sol\":2022:2030  tokenIds */\n      dup4\n      dup4\n        /* \"BurnManger.sol\":2032:2040  updateId */\n      dup4\n        /* \"BurnManger.sol\":2009:2021  _processBurn */\n      tag_136\n        /* \"BurnManger.sol\":2009:2041  _processBurn(tokenIds, updateId) */\n      jump\t// in\n    tag_135:\n        /* \"BurnManger.sol\":2052:2067  _refundExcess() */\n      tag_137\n        /* \"BurnManger.sol\":2052:2065  _refundExcess */\n      tag_138\n        /* \"BurnManger.sol\":2052:2067  _refundExcess() */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_139\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_139:\n        /* \"BurnManger.sol\":1800:2075  function createPremium(uint32[] calldata tokenIds, uint32 updateId)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BurnManger.sol\":4294:4543  function setBurnFee(uint256 _newFee) external onlyOwner {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_142:\n        /* \"BurnManger.sol\":1006:1013  1 ether */\n      0x0de0b6b3a7640000\n        /* \"BurnManger.sol\":4365:4372  _newFee */\n      dup2\n        /* \"BurnManger.sol\":4365:4387  _newFee > MAX_BURN_FEE */\n      gt\n        /* \"BurnManger.sol\":4361:4415  if (_newFee > MAX_BURN_FEE) revert FeeExceedsMaximum() */\n      iszero\n      tag_144\n      jumpi\n        /* \"BurnManger.sol\":4396:4415  FeeExceedsMaximum() */\n      mload(0x40)\n      shl(0xe2, 0x2be70877)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"BurnManger.sol\":4361:4415  if (_newFee > MAX_BURN_FEE) revert FeeExceedsMaximum() */\n    tag_144:\n        /* \"BurnManger.sol\":4453:4460  burnFee */\n      0x03\n      dup1\n      sload\n        /* \"BurnManger.sol\":4471:4488  burnFee = _newFee */\n      swap1\n      dup3\n      swap1\n      sstore\n        /* \"BurnManger.sol\":4504:4535  BurnFeeUpdated(oldFee, _newFee) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3571:3596   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":3627:3629   */\n      0x20\n        /* \"#utility.yul\":3612:3630   */\n      dup2\n      add\n        /* \"#utility.yul\":3605:3639   */\n      dup5\n      swap1\n      mstore\n        /* \"BurnManger.sol\":4504:4535  BurnFeeUpdated(oldFee, _newFee) */\n      0x78f1461296bad7bd716a7673aa3e659cc091c348a7ed4cfef7ce452c3052f2fb\n      swap2\n        /* \"#utility.yul\":3544:3562   */\n      add\n        /* \"BurnManger.sol\":4504:4535  BurnFeeUpdated(oldFee, _newFee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"BurnManger.sol\":4350:4543  {... */\n      pop\n        /* \"BurnManger.sol\":4294:4543  function setBurnFee(uint256 _newFee) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"BurnManger.sol\":5039:5102  function pause() external onlyOwner {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_156:\n        /* \"BurnManger.sol\":5086:5094  _pause() */\n      tag_119\n        /* \"BurnManger.sol\":5086:5092  _pause */\n      tag_159\n        /* \"BurnManger.sol\":5086:5094  _pause() */\n      jump\t// in\n        /* \"BurnManger.sol\":3918:4097  function isTokenBurned(uint32 tokenId) ... */\n    tag_91:\n        /* \"BurnManger.sol\":4042:4046  bool */\n      0x00\n        /* \"BurnManger.sol\":4014:4021  tokenId */\n      dup2\n        /* \"BurnManger.sol\":1508:1619  modifier validTokenId(uint256 tokenId) {... */\n      0xffffffff\n      and\n        /* \"BurnManger.sol\":1562:1569  tokenId */\n      dup1\n        /* \"BurnManger.sol\":1573:1574  0 */\n      0x00\n        /* \"BurnManger.sol\":1562:1574  tokenId == 0 */\n      sub\n        /* \"BurnManger.sol\":1558:1599  if (tokenId == 0) revert InvalidTokenId() */\n      tag_163\n      jumpi\n        /* \"BurnManger.sol\":1583:1599  InvalidTokenId() */\n      mload(0x40)\n      shl(0xe3, 0x07ed98ed)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"BurnManger.sol\":1558:1599  if (tokenId == 0) revert InvalidTokenId() */\n    tag_163:\n      pop\n      pop\n        /* \"BurnManger.sol\":4072:4089  isBurned[tokenId] */\n      0xffffffff\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BurnManger.sol\":4072:4080  isBurned */\n      0x05\n        /* \"BurnManger.sol\":4072:4089  isBurned[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"BurnManger.sol\":3918:4097  function isTokenBurned(uint32 tokenId) ... */\n      jump\t// out\n        /* \"BurnManger.sol\":4923:5031  function withdrawPartialFunds(uint256 _amount) external onlyOwner {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_166:\n        /* \"BurnManger.sol\":5000:5023  _withdrawFunds(_amount) */\n      tag_168\n        /* \"BurnManger.sol\":5015:5022  _amount */\n      dup2\n        /* \"BurnManger.sol\":5000:5014  _withdrawFunds */\n      tag_120\n        /* \"BurnManger.sol\":5000:5023  _withdrawFunds(_amount) */\n      jump\t// in\n    tag_168:\n        /* \"BurnManger.sol\":4923:5031  function withdrawPartialFunds(uint256 _amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2599:2650   */\n      mstore\n        /* \"#utility.yul\":2572:2590   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_26\n        /* \"#utility.yul\":2453:2656   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_119\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2599:2650   */\n      mstore\n        /* \"#utility.yul\":2572:2590   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_26\n        /* \"#utility.yul\":2453:2656   */\n      jump\n        /* \"BurnManger.sol\":4551:4807  function _withdrawFunds(uint256 _amount) private nonReentrant {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_183\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_128\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_183:\n        /* \"BurnManger.sol\":4628:4640  _amount == 0 */\n      dup1\n      iszero\n      dup1\n        /* \"BurnManger.sol\":4628:4675  _amount == 0 || _amount > address(this).balance */\n      tag_185\n      jumpi\n      pop\n        /* \"BurnManger.sol\":4654:4675  address(this).balance */\n      selfbalance\n        /* \"BurnManger.sol\":4644:4651  _amount */\n      dup2\n        /* \"BurnManger.sol\":4644:4675  _amount > address(this).balance */\n      gt\n        /* \"BurnManger.sol\":4628:4675  _amount == 0 || _amount > address(this).balance */\n    tag_185:\n        /* \"BurnManger.sol\":4624:4703  if (_amount == 0 || _amount > address(this).balance) revert NoFundsToWithdraw() */\n      iszero\n      tag_186\n      jumpi\n        /* \"BurnManger.sol\":4684:4703  NoFundsToWithdraw() */\n      mload(0x40)\n      shl(0xe0, 0x67e3990d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"BurnManger.sol\":4624:4703  if (_amount == 0 || _amount > address(this).balance) revert NoFundsToWithdraw() */\n    tag_186:\n        /* \"BurnManger.sol\":4716:4751  payable(owner()).sendValue(_amount) */\n      tag_187\n        /* \"BurnManger.sol\":4743:4750  _amount */\n      dup2\n        /* \"BurnManger.sol\":4724:4731  owner() */\n      tag_188\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"BurnManger.sol\":4724:4731  owner() */\n    tag_188:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BurnManger.sol\":4716:4742  payable(owner()).sendValue */\n      and\n      swap1\n      tag_189\n        /* \"BurnManger.sol\":4716:4751  payable(owner()).sendValue(_amount) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BurnManger.sol\":4767:4799  FundsWithdrawn(owner(), _amount) */\n      and\n      0xeaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d\n        /* \"BurnManger.sol\":4791:4798  _amount */\n      dup3\n        /* \"BurnManger.sol\":4767:4799  FundsWithdrawn(owner(), _amount) */\n      mload(0x40)\n      tag_191\n      swap2\n        /* \"#utility.yul\":2417:2442   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2405:2407   */\n      0x20\n        /* \"#utility.yul\":2390:2408   */\n      add\n      swap1\n        /* \"#utility.yul\":2271:2448   */\n      jump\n        /* \"BurnManger.sol\":4767:4799  FundsWithdrawn(owner(), _amount) */\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_168\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_194\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_195\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x02\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n    tag_197:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2617:2649   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2599:2650   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2587:2589   */\n      0x20\n        /* \"#utility.yul\":2572:2590   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3852:3854   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3834:3855   */\n      mstore\n        /* \"#utility.yul\":3891:3893   */\n      0x1f\n        /* \"#utility.yul\":3871:3889   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3864:3894   */\n      mstore\n        /* \"#utility.yul\":3930:3963   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":3910:3928   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3903:3964   */\n      mstore\n        /* \"#utility.yul\":3981:3999   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_26\n        /* \"#utility.yul\":3650:4005   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_200:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      and(0xff, sload(0x02))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4212:4214   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4194:4215   */\n      mstore\n        /* \"#utility.yul\":4251:4253   */\n      0x10\n        /* \"#utility.yul\":4231:4249   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4224:4254   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":4270:4288   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4263:4309   */\n      mstore\n        /* \"#utility.yul\":4326:4344   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_26\n        /* \"#utility.yul\":4010:4350   */\n      jump\n        /* \"BurnManger.sol\":2083:3048  function _validateInput(uint32[] calldata tokenIds, uint32 updateId) private view {... */\n    tag_134:\n        /* \"BurnManger.sol\":2203:2211  tokenIds */\n      dup2\n        /* \"BurnManger.sol\":2234:2249  tokenCount == 0 */\n      0xffffffff\n      dup2\n      and\n        /* \"BurnManger.sol\":2176:2193  uint32 tokenCount */\n      0x00\n        /* \"BurnManger.sol\":2234:2249  tokenCount == 0 */\n      sub\n        /* \"BurnManger.sol\":2230:2279  if (tokenCount == 0) revert(\"No tokens provided\") */\n      tag_209\n      jumpi\n        /* \"BurnManger.sol\":2251:2279  revert(\"No tokens provided\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4557:4559   */\n      0x20\n        /* \"BurnManger.sol\":2251:2279  revert(\"No tokens provided\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4539:4560   */\n      mstore\n        /* \"#utility.yul\":4596:4598   */\n      0x12\n        /* \"#utility.yul\":4576:4594   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4569:4599   */\n      mstore\n      shl(0x72, 0x139bc81d1bdad95b9cc81c1c9bdd9a591959)\n        /* \"#utility.yul\":4615:4633   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4608:4656   */\n      mstore\n        /* \"#utility.yul\":4673:4691   */\n      0x64\n      add\n        /* \"BurnManger.sol\":2251:2279  revert(\"No tokens provided\") */\n      tag_26\n        /* \"#utility.yul\":4355:4697   */\n      jump\n        /* \"BurnManger.sol\":2230:2279  if (tokenCount == 0) revert(\"No tokens provided\") */\n    tag_209:\n        /* \"BurnManger.sol\":2308:2318  burnAmount */\n      and(0xffff, sload(0x04))\n        /* \"BurnManger.sol\":2294:2318  tokenCount != burnAmount */\n      0xffffffff\n      dup3\n      and\n      eq\n        /* \"BurnManger.sol\":2290:2360  if (tokenCount != burnAmount) revert(\"Burn the required token amount\") */\n      tag_212\n      jumpi\n        /* \"BurnManger.sol\":2320:2360  revert(\"Burn the required token amount\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4904:4906   */\n      0x20\n        /* \"BurnManger.sol\":2320:2360  revert(\"Burn the required token amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4886:4907   */\n      mstore\n        /* \"#utility.yul\":4943:4945   */\n      0x1e\n        /* \"#utility.yul\":4923:4941   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4916:4946   */\n      mstore\n        /* \"#utility.yul\":4982:5014   */\n      0x4275726e2074686520726571756972656420746f6b656e20616d6f756e740000\n        /* \"#utility.yul\":4962:4980   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4955:5015   */\n      mstore\n        /* \"#utility.yul\":5032:5050   */\n      0x64\n      add\n        /* \"BurnManger.sol\":2320:2360  revert(\"Burn the required token amount\") */\n      tag_26\n        /* \"#utility.yul\":4702:5056   */\n      jump\n        /* \"BurnManger.sol\":2290:2360  if (tokenCount != burnAmount) revert(\"Burn the required token amount\") */\n    tag_212:\n        /* \"BurnManger.sol\":2389:2396  burnFee */\n      sload(0x03)\n        /* \"BurnManger.sol\":2377:2386  msg.value */\n      callvalue\n        /* \"BurnManger.sol\":2377:2396  msg.value < burnFee */\n      lt\n        /* \"BurnManger.sol\":2373:2428  if (msg.value < burnFee) revert(\"Insufficient payment\") */\n      iszero\n      tag_215\n      jumpi\n        /* \"BurnManger.sol\":2398:2428  revert(\"Insufficient payment\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5263:5265   */\n      0x20\n        /* \"BurnManger.sol\":2398:2428  revert(\"Insufficient payment\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5245:5266   */\n      mstore\n        /* \"#utility.yul\":5302:5304   */\n      0x14\n        /* \"#utility.yul\":5282:5300   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5275:5305   */\n      mstore\n      shl(0x62, 0x125b9cdd59999a58da595b9d081c185e5b595b9d)\n        /* \"#utility.yul\":5321:5339   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5314:5364   */\n      mstore\n        /* \"#utility.yul\":5381:5399   */\n      0x64\n      add\n        /* \"BurnManger.sol\":2398:2428  revert(\"Insufficient payment\") */\n      tag_26\n        /* \"#utility.yul\":5061:5405   */\n      jump\n        /* \"BurnManger.sol\":2373:2428  if (msg.value < burnFee) revert(\"Insufficient payment\") */\n    tag_215:\n        /* \"BurnManger.sol\":2508:2529  nft.ownerOf(updateId) */\n      mload(0x40)\n      shl(0xe1, 0x31a9108f)\n      dup2\n      mstore\n        /* \"#utility.yul\":5585:5595   */\n      0xffffffff\n        /* \"#utility.yul\":5573:5596   */\n      dup4\n      and\n        /* \"BurnManger.sol\":2508:2529  nft.ownerOf(updateId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5555:5597   */\n      mstore\n        /* \"BurnManger.sol\":2479:2490  nftContract */\n      immutable(\"0x3ed49036aa79101305a3bfa1070275a6dbad22810edfdc0e3caad458e4a9b16b\")\n      swap1\n        /* \"BurnManger.sol\":2533:2543  msg.sender */\n      caller\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BurnManger.sol\":2508:2519  nft.ownerOf */\n      dup4\n      and\n      swap1\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":5528:5546   */\n      0x24\n      add\n        /* \"BurnManger.sol\":2508:2529  nft.ownerOf(updateId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_221\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_221:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_222\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BurnManger.sol\":2508:2543  nft.ownerOf(updateId) != msg.sender */\n      and\n      eq\n        /* \"BurnManger.sol\":2504:2570  if (nft.ownerOf(updateId) != msg.sender) revert(\"Not token owner\") */\n      tag_224\n      jumpi\n        /* \"BurnManger.sol\":2545:2570  revert(\"Not token owner\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6066:6068   */\n      0x20\n        /* \"BurnManger.sol\":2545:2570  revert(\"Not token owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6048:6069   */\n      mstore\n        /* \"#utility.yul\":6105:6107   */\n      0x0f\n        /* \"#utility.yul\":6085:6103   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6078:6108   */\n      mstore\n      shl(0x89, 0x2737ba103a37b5b2b71037bbb732b9)\n        /* \"#utility.yul\":6124:6142   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6117:6162   */\n      mstore\n        /* \"#utility.yul\":6179:6197   */\n      0x64\n      add\n        /* \"BurnManger.sol\":2545:2570  revert(\"Not token owner\") */\n      tag_26\n        /* \"#utility.yul\":5864:6203   */\n      jump\n        /* \"BurnManger.sol\":2504:2570  if (nft.ownerOf(updateId) != msg.sender) revert(\"Not token owner\") */\n    tag_224:\n        /* \"BurnManger.sol\":2585:2603  isBurned[updateId] */\n      0xffffffff\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BurnManger.sol\":2585:2593  isBurned */\n      0x05\n        /* \"BurnManger.sol\":2585:2603  isBurned[updateId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"BurnManger.sol\":2581:2635  if (isBurned[updateId]) revert(\"Token already burned\") */\n      iszero\n      tag_227\n      jumpi\n        /* \"BurnManger.sol\":2605:2635  revert(\"Token already burned\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6410:6412   */\n      0x20\n        /* \"BurnManger.sol\":2605:2635  revert(\"Token already burned\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6392:6413   */\n      mstore\n        /* \"#utility.yul\":6449:6451   */\n      0x14\n        /* \"#utility.yul\":6429:6447   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6422:6452   */\n      mstore\n      shl(0x62, 0x151bdad95b88185b1c9958591e48189d5c9b9959)\n        /* \"#utility.yul\":6468:6486   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6461:6511   */\n      mstore\n        /* \"#utility.yul\":6528:6546   */\n      0x64\n      add\n        /* \"BurnManger.sol\":2605:2635  revert(\"Token already burned\") */\n      tag_26\n        /* \"#utility.yul\":6208:6552   */\n      jump\n        /* \"BurnManger.sol\":2581:2635  if (isBurned[updateId]) revert(\"Token already burned\") */\n    tag_227:\n        /* \"BurnManger.sol\":2650:2669  isUpdated[updateId] */\n      0xffffffff\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BurnManger.sol\":2650:2659  isUpdated */\n      0x06\n        /* \"BurnManger.sol\":2650:2669  isUpdated[updateId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"BurnManger.sol\":2646:2702  if (isUpdated[updateId]) revert(\"Token already updated\") */\n      iszero\n      tag_230\n      jumpi\n        /* \"BurnManger.sol\":2671:2702  revert(\"Token already updated\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6759:6761   */\n      0x20\n        /* \"BurnManger.sol\":2671:2702  revert(\"Token already updated\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6741:6762   */\n      mstore\n        /* \"#utility.yul\":6798:6800   */\n      0x15\n        /* \"#utility.yul\":6778:6796   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6771:6801   */\n      mstore\n      shl(0x5a, 0x151bdad95b88185b1c9958591e481d5c19185d1959)\n        /* \"#utility.yul\":6817:6835   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6810:6861   */\n      mstore\n        /* \"#utility.yul\":6878:6896   */\n      0x64\n      add\n        /* \"BurnManger.sol\":2671:2702  revert(\"Token already updated\") */\n      tag_26\n        /* \"#utility.yul\":6557:6902   */\n      jump\n        /* \"BurnManger.sol\":2646:2702  if (isUpdated[updateId]) revert(\"Token already updated\") */\n    tag_230:\n        /* \"BurnManger.sol\":2720:2728  uint32 i */\n      0x00\n        /* \"BurnManger.sol\":2715:3041  for (uint32 i = 0; i < tokenCount; i++) {... */\n    tag_233:\n        /* \"BurnManger.sol\":2738:2748  tokenCount */\n      dup3\n        /* \"BurnManger.sol\":2734:2748  i < tokenCount */\n      0xffffffff\n      and\n        /* \"BurnManger.sol\":2734:2735  i */\n      dup2\n        /* \"BurnManger.sol\":2734:2748  i < tokenCount */\n      0xffffffff\n      and\n      lt\n        /* \"BurnManger.sol\":2715:3041  for (uint32 i = 0; i < tokenCount; i++) {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"BurnManger.sol\":2770:2784  uint32 tokenId */\n      0x00\n        /* \"BurnManger.sol\":2787:2795  tokenIds */\n      dup7\n      dup7\n        /* \"BurnManger.sol\":2796:2797  i */\n      dup4\n        /* \"BurnManger.sol\":2787:2798  tokenIds[i] */\n      0xffffffff\n      and\n      dup2\n      dup2\n      lt\n      tag_237\n      jumpi\n      tag_237\n      tag_238\n      jump\t// in\n    tag_237:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_239\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_239:\n        /* \"BurnManger.sol\":2770:2798  uint32 tokenId = tokenIds[i] */\n      swap1\n      pop\n        /* \"BurnManger.sol\":2828:2836  updateId */\n      dup5\n        /* \"BurnManger.sol\":2817:2836  tokenId == updateId */\n      0xffffffff\n      and\n        /* \"BurnManger.sol\":2817:2824  tokenId */\n      dup2\n        /* \"BurnManger.sol\":2817:2836  tokenId == updateId */\n      0xffffffff\n      and\n      sub\n        /* \"BurnManger.sol\":2813:2881  if (tokenId == updateId) revert(\"updateId cannot be among tokenIds\") */\n      tag_240\n      jumpi\n        /* \"BurnManger.sol\":2838:2881  revert(\"updateId cannot be among tokenIds\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7241:7243   */\n      0x20\n        /* \"BurnManger.sol\":2838:2881  revert(\"updateId cannot be among tokenIds\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7223:7244   */\n      mstore\n        /* \"#utility.yul\":7280:7282   */\n      0x21\n        /* \"#utility.yul\":7260:7278   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7253:7283   */\n      mstore\n        /* \"#utility.yul\":7319:7353   */\n      0x75706461746549642063616e6e6f7420626520616d6f6e6720746f6b656e4964\n        /* \"#utility.yul\":7299:7317   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7292:7354   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":7370:7388   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7363:7394   */\n      mstore\n        /* \"#utility.yul\":7411:7430   */\n      0x84\n      add\n        /* \"BurnManger.sol\":2838:2881  revert(\"updateId cannot be among tokenIds\") */\n      tag_26\n        /* \"#utility.yul\":7039:7436   */\n      jump\n        /* \"BurnManger.sol\":2813:2881  if (tokenId == updateId) revert(\"updateId cannot be among tokenIds\") */\n    tag_240:\n        /* \"BurnManger.sol\":2900:2917  isBurned[tokenId] */\n      0xffffffff\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BurnManger.sol\":2900:2908  isBurned */\n      0x05\n        /* \"BurnManger.sol\":2900:2917  isBurned[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"BurnManger.sol\":2896:2949  if (isBurned[tokenId]) revert(\"Token already burned\") */\n      iszero\n      tag_243\n      jumpi\n        /* \"BurnManger.sol\":2919:2949  revert(\"Token already burned\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6410:6412   */\n      0x20\n        /* \"BurnManger.sol\":2919:2949  revert(\"Token already burned\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6392:6413   */\n      mstore\n        /* \"#utility.yul\":6449:6451   */\n      0x14\n        /* \"#utility.yul\":6429:6447   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6422:6452   */\n      mstore\n      shl(0x62, 0x151bdad95b88185b1c9958591e48189d5c9b9959)\n        /* \"#utility.yul\":6468:6486   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6461:6511   */\n      mstore\n        /* \"#utility.yul\":6528:6546   */\n      0x64\n      add\n        /* \"BurnManger.sol\":2919:2949  revert(\"Token already burned\") */\n      tag_26\n        /* \"#utility.yul\":6208:6552   */\n      jump\n        /* \"BurnManger.sol\":2896:2949  if (isBurned[tokenId]) revert(\"Token already burned\") */\n    tag_243:\n        /* \"BurnManger.sol\":2968:2988  nft.ownerOf(tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x31a9108f)\n      dup2\n      mstore\n        /* \"#utility.yul\":5585:5595   */\n      0xffffffff\n        /* \"#utility.yul\":5573:5596   */\n      dup3\n      and\n        /* \"BurnManger.sol\":2968:2988  nft.ownerOf(tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5555:5597   */\n      mstore\n        /* \"BurnManger.sol\":2992:3002  msg.sender */\n      caller\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BurnManger.sol\":2968:2979  nft.ownerOf */\n      dup6\n      and\n      swap1\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":5528:5546   */\n      0x24\n      add\n        /* \"BurnManger.sol\":2968:2988  nft.ownerOf(tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_247\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_247:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_248\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_248:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BurnManger.sol\":2968:3002  nft.ownerOf(tokenId) != msg.sender */\n      and\n      eq\n        /* \"BurnManger.sol\":2964:3029  if (nft.ownerOf(tokenId) != msg.sender) revert(\"Not token owner\") */\n      tag_249\n      jumpi\n        /* \"BurnManger.sol\":3004:3029  revert(\"Not token owner\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6066:6068   */\n      0x20\n        /* \"BurnManger.sol\":3004:3029  revert(\"Not token owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6048:6069   */\n      mstore\n        /* \"#utility.yul\":6105:6107   */\n      0x0f\n        /* \"#utility.yul\":6085:6103   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6078:6108   */\n      mstore\n      shl(0x89, 0x2737ba103a37b5b2b71037bbb732b9)\n        /* \"#utility.yul\":6124:6142   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6117:6162   */\n      mstore\n        /* \"#utility.yul\":6179:6197   */\n      0x64\n      add\n        /* \"BurnManger.sol\":3004:3029  revert(\"Not token owner\") */\n      tag_26\n        /* \"#utility.yul\":5864:6203   */\n      jump\n        /* \"BurnManger.sol\":2964:3029  if (nft.ownerOf(tokenId) != msg.sender) revert(\"Not token owner\") */\n    tag_249:\n      pop\n        /* \"BurnManger.sol\":2750:2753  i++ */\n      0x01\n      add\n        /* \"BurnManger.sol\":2715:3041  for (uint32 i = 0; i < tokenCount; i++) {... */\n      jump(tag_233)\n    tag_234:\n      pop\n        /* \"BurnManger.sol\":2165:3048  {... */\n      pop\n      pop\n        /* \"BurnManger.sol\":2083:3048  function _validateInput(uint32[] calldata tokenIds, uint32 updateId) private view {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BurnManger.sol\":3056:3491  function _processBurn(uint32[] calldata tokenIds, uint32 updateId) private {... */\n    tag_136:\n        /* \"BurnManger.sol\":3205:3224  isUpdated[updateId] */\n      0xffffffff\n      dup2\n      and\n        /* \"BurnManger.sol\":3142:3161  IERC721Burnable nft */\n      0x00\n        /* \"BurnManger.sol\":3205:3224  isUpdated[updateId] */\n      swap1\n      dup2\n      mstore\n        /* \"BurnManger.sol\":3205:3214  isUpdated */\n      0x06\n        /* \"BurnManger.sol\":3205:3224  isUpdated[updateId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"BurnManger.sol\":3205:3231  isUpdated[updateId] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"BurnManger.sol\":3227:3231  true */\n      0x01\n        /* \"BurnManger.sol\":3205:3231  isUpdated[updateId] = true */\n      or\n      swap1\n      sstore\n        /* \"BurnManger.sol\":3180:3191  nftContract */\n      immutable(\"0x3ed49036aa79101305a3bfa1070275a6dbad22810edfdc0e3caad458e4a9b16b\")\n      swap1\n        /* \"BurnManger.sol\":3242:3413  for (uint32 i = 0; i < tokenIds.length; i++) {... */\n    tag_252:\n        /* \"BurnManger.sol\":3261:3280  i < tokenIds.length */\n      0xffffffff\n      dup2\n      and\n      dup5\n      gt\n        /* \"BurnManger.sol\":3242:3413  for (uint32 i = 0; i < tokenIds.length; i++) {... */\n      iszero\n      tag_253\n      jumpi\n        /* \"BurnManger.sol\":3302:3316  uint32 tokenId */\n      0x00\n        /* \"BurnManger.sol\":3319:3327  tokenIds */\n      dup6\n      dup6\n        /* \"BurnManger.sol\":3328:3329  i */\n      dup4\n        /* \"BurnManger.sol\":3319:3330  tokenIds[i] */\n      0xffffffff\n      and\n      dup2\n      dup2\n      lt\n      tag_256\n      jumpi\n      tag_256\n      tag_238\n      jump\t// in\n    tag_256:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_257\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_257:\n        /* \"BurnManger.sol\":3345:3362  isBurned[tokenId] */\n      0xffffffff\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"BurnManger.sol\":3345:3353  isBurned */\n      0x05\n        /* \"BurnManger.sol\":3345:3362  isBurned[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"BurnManger.sol\":3345:3369  isBurned[tokenId] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"BurnManger.sol\":3365:3369  true */\n      0x01\n        /* \"BurnManger.sol\":3345:3369  isBurned[tokenId] = true */\n      or\n      swap1\n      sstore\n        /* \"BurnManger.sol\":3384:3401  nft.burn(tokenId) */\n      mload\n      shl(0xe3, 0x0852cd8d)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":5555:5597   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"BurnManger.sol\":3345:3362  isBurned[tokenId] */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BurnManger.sol\":3384:3392  nft.burn */\n      dup5\n      and\n      swap1\n      0x42966c68\n      swap1\n        /* \"#utility.yul\":5528:5546   */\n      0x24\n      add\n        /* \"BurnManger.sol\":3384:3401  nft.burn(tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_259\n      jumpi\n      revert(0x00, 0x00)\n    tag_259:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_261\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_261:\n      pop\n      pop\n      pop\n      pop\n        /* \"BurnManger.sol\":3287:3413  {... */\n      pop\n        /* \"BurnManger.sol\":3282:3285  i++ */\n      dup1\n      dup1\n      tag_262\n      swap1\n      tag_263\n      jump\t// in\n    tag_262:\n      swap2\n      pop\n      pop\n        /* \"BurnManger.sol\":3242:3413  for (uint32 i = 0; i < tokenIds.length; i++) {... */\n      jump(tag_252)\n    tag_253:\n      pop\n        /* \"BurnManger.sol\":3474:3482  updateId */\n      dup2\n        /* \"BurnManger.sol\":3430:3483  TokensBurned(msg.sender, tokenIds, burnFee, updateId) */\n      0xffffffff\n      and\n        /* \"BurnManger.sol\":3443:3453  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BurnManger.sol\":3430:3483  TokensBurned(msg.sender, tokenIds, burnFee, updateId) */\n      and\n      0x26ccc16f7fcb4f9c2582bcba8e2aa8bfc16139ad280d11913ccfb99777825ee0\n        /* \"BurnManger.sol\":3455:3463  tokenIds */\n      dup7\n      dup7\n        /* \"BurnManger.sol\":3465:3472  burnFee */\n      sload(0x03)\n        /* \"BurnManger.sol\":3430:3483  TokensBurned(msg.sender, tokenIds, burnFee, updateId) */\n      mload(0x40)\n      tag_264\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_265\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BurnManger.sol\":3131:3491  {... */\n      pop\n        /* \"BurnManger.sol\":3056:3491  function _processBurn(uint32[] calldata tokenIds, uint32 updateId) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BurnManger.sol\":3499:3754  function _refundExcess() private {... */\n    tag_138:\n        /* \"BurnManger.sol\":3543:3557  uint256 excess */\n      0x00\n        /* \"BurnManger.sol\":3572:3579  burnFee */\n      sload(0x03)\n        /* \"BurnManger.sol\":3560:3569  msg.value */\n      callvalue\n        /* \"BurnManger.sol\":3560:3579  msg.value - burnFee */\n      tag_267\n      swap2\n      swap1\n      tag_268\n      jump\t// in\n    tag_267:\n        /* \"BurnManger.sol\":3543:3579  uint256 excess = msg.value - burnFee */\n      swap1\n      pop\n        /* \"BurnManger.sol\":3594:3604  excess > 0 */\n      dup1\n      iszero\n        /* \"BurnManger.sol\":3590:3747  if (excess > 0) {... */\n      tag_168\n      jumpi\n        /* \"BurnManger.sol\":3640:3683  payable(msg.sender).call{value: excess}(\"\") */\n      mload(0x40)\n        /* \"BurnManger.sol\":3622:3634  bool success */\n      0x00\n      swap1\n        /* \"BurnManger.sol\":3648:3658  msg.sender */\n      caller\n      swap1\n        /* \"BurnManger.sol\":3672:3678  excess */\n      dup4\n      swap1\n        /* \"BurnManger.sol\":3622:3634  bool success */\n      dup4\n        /* \"BurnManger.sol\":3640:3683  payable(msg.sender).call{value: excess}(\"\") */\n      dup2\n        /* \"BurnManger.sol\":3622:3634  bool success */\n      dup2\n        /* \"BurnManger.sol\":3640:3683  payable(msg.sender).call{value: excess}(\"\") */\n      dup2\n        /* \"BurnManger.sol\":3672:3678  excess */\n      dup6\n        /* \"BurnManger.sol\":3648:3658  msg.sender */\n      dup8\n        /* \"BurnManger.sol\":3640:3683  payable(msg.sender).call{value: excess}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_274\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_273)\n    tag_274:\n      0x60\n      swap2\n      pop\n    tag_273:\n      pop\n        /* \"BurnManger.sol\":3621:3683  (bool success, ) = payable(msg.sender).call{value: excess}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"BurnManger.sol\":3703:3710  success */\n      dup1\n        /* \"BurnManger.sol\":3698:3735  if (!success) revert(\"Refund failed\") */\n      tag_275\n      jumpi\n        /* \"BurnManger.sol\":3712:3735  revert(\"Refund failed\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8996:8998   */\n      0x20\n        /* \"BurnManger.sol\":3712:3735  revert(\"Refund failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8978:8999   */\n      mstore\n        /* \"#utility.yul\":9035:9037   */\n      0x0d\n        /* \"#utility.yul\":9015:9033   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9008:9038   */\n      mstore\n      shl(0x9a, 0x1499599d5b990819985a5b1959)\n        /* \"#utility.yul\":9054:9072   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9047:9090   */\n      mstore\n        /* \"#utility.yul\":9107:9125   */\n      0x64\n      add\n        /* \"BurnManger.sol\":3712:3735  revert(\"Refund failed\") */\n      tag_26\n        /* \"#utility.yul\":8794:9131   */\n      jump\n        /* \"BurnManger.sol\":3698:3735  if (!success) revert(\"Refund failed\") */\n    tag_275:\n        /* \"BurnManger.sol\":3606:3747  {... */\n      pop\n        /* \"BurnManger.sol\":3532:3754  {... */\n      pop\n        /* \"BurnManger.sol\":3499:3754  function _refundExcess() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_281\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_131\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x02\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_197\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1290:1655  function sendValue(address payable recipient, uint256 amount) internal {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1399:1405  amount */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1375:1396  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1375:1405  address(this).balance < amount */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1371:1496  if (address(this).balance < amount) {... */\n      iszero\n      tag_287\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1428:1485  Errors.InsufficientBalance(address(this).balance, amount) */\n      mload(0x40)\n      shl(0xe0, 0xcf479181)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1455:1476  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1428:1485  Errors.InsufficientBalance(address(this).balance, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3571:3596   */\n      mstore\n        /* \"#utility.yul\":3612:3630   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3605:3639   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3544:3562   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1428:1485  Errors.InsufficientBalance(address(this).balance, amount) */\n      tag_26\n        /* \"#utility.yul\":3397:3645   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1371:1496  if (address(this).balance < amount) {... */\n    tag_287:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1507:1519  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1521:1544  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1548:1557  recipient */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1548:1562  recipient.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1570:1576  amount */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1548:1581  recipient.call{value: amount}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_292\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_291)\n    tag_292:\n      0x60\n      swap2\n      pop\n    tag_291:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1506:1581  (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\") */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1596:1603  success */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1591:1649  if (!success) {... */\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1619:1638  _revert(returndata) */\n      tag_294\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1627:1637  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1619:1626  _revert */\n      tag_295\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1619:1638  _revert(returndata) */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1361:1655  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1290:1655  function sendValue(address payable recipient, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      and(0xff, sload(0x02))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9338:9340   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9320:9341   */\n      mstore\n        /* \"#utility.yul\":9377:9379   */\n      0x14\n        /* \"#utility.yul\":9357:9375   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9350:9380   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":9396:9414   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9389:9439   */\n      mstore\n        /* \"#utility.yul\":9456:9474   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_26\n        /* \"#utility.yul\":9136:9480   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5559:5993  function _revert(bytes memory returndata) private pure {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5707  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5711  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:5987  if (returndata.length > 0) {... */\n      tag_302\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5904  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5888:5905  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5881:5885  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5869:5879  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5865:5886  add(returndata, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5858:5906  revert(add(returndata, 0x20), mload(returndata)) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:5987  if (returndata.length > 0) {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5957:5976  Errors.FailedCall() */\n      mload(0x40)\n      shl(0xe0, 0xd6bda275)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":375:647   */\n    tag_31:\n        /* \"#utility.yul\":433:439   */\n      0x00\n        /* \"#utility.yul\":486:488   */\n      0x20\n        /* \"#utility.yul\":474:483   */\n      dup3\n        /* \"#utility.yul\":465:472   */\n      dup5\n        /* \"#utility.yul\":461:484   */\n      sub\n        /* \"#utility.yul\":457:489   */\n      slt\n        /* \"#utility.yul\":454:506   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":502:503   */\n      0x00\n        /* \"#utility.yul\":499:500   */\n      0x00\n        /* \"#utility.yul\":492:504   */\n      revert\n        /* \"#utility.yul\":454:506   */\n    tag_310:\n        /* \"#utility.yul\":541:550   */\n      dup2\n        /* \"#utility.yul\":528:551   */\n      calldataload\n        /* \"#utility.yul\":591:597   */\n      0xffff\n        /* \"#utility.yul\":584:589   */\n      dup2\n        /* \"#utility.yul\":580:598   */\n      and\n        /* \"#utility.yul\":573:578   */\n      dup2\n        /* \"#utility.yul\":570:599   */\n      eq\n        /* \"#utility.yul\":560:617   */\n      tag_311\n      jumpi\n        /* \"#utility.yul\":613:614   */\n      0x00\n        /* \"#utility.yul\":610:611   */\n      0x00\n        /* \"#utility.yul\":603:615   */\n      revert\n        /* \"#utility.yul\":560:617   */\n    tag_311:\n        /* \"#utility.yul\":636:641   */\n      swap4\n        /* \"#utility.yul\":375:647   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":652:815   */\n    tag_304:\n        /* \"#utility.yul\":719:739   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":779:789   */\n      0xffffffff\n        /* \"#utility.yul\":768:790   */\n      dup2\n      and\n        /* \"#utility.yul\":758:791   */\n      dup2\n      eq\n        /* \"#utility.yul\":748:809   */\n      tag_313\n      jumpi\n        /* \"#utility.yul\":805:806   */\n      0x00\n        /* \"#utility.yul\":802:803   */\n      0x00\n        /* \"#utility.yul\":795:807   */\n      revert\n        /* \"#utility.yul\":748:809   */\n    tag_313:\n        /* \"#utility.yul\":652:815   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":820:1004   */\n    tag_36:\n        /* \"#utility.yul\":878:884   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":919:928   */\n      dup3\n        /* \"#utility.yul\":910:917   */\n      dup5\n        /* \"#utility.yul\":906:929   */\n      sub\n        /* \"#utility.yul\":902:934   */\n      slt\n        /* \"#utility.yul\":899:951   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":947:948   */\n      0x00\n        /* \"#utility.yul\":944:945   */\n      0x00\n        /* \"#utility.yul\":937:949   */\n      revert\n        /* \"#utility.yul\":899:951   */\n    tag_315:\n        /* \"#utility.yul\":970:998   */\n      tag_311\n        /* \"#utility.yul\":988:997   */\n      dup3\n        /* \"#utility.yul\":970:998   */\n      tag_304\n      jump\t// in\n        /* \"#utility.yul\":1201:1888   */\n    tag_48:\n        /* \"#utility.yul\":1294:1300   */\n      0x00\n        /* \"#utility.yul\":1302:1308   */\n      0x00\n        /* \"#utility.yul\":1310:1316   */\n      0x00\n        /* \"#utility.yul\":1363:1365   */\n      0x40\n        /* \"#utility.yul\":1351:1360   */\n      dup5\n        /* \"#utility.yul\":1342:1349   */\n      dup7\n        /* \"#utility.yul\":1338:1361   */\n      sub\n        /* \"#utility.yul\":1334:1366   */\n      slt\n        /* \"#utility.yul\":1331:1383   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":1379:1380   */\n      0x00\n        /* \"#utility.yul\":1376:1377   */\n      0x00\n        /* \"#utility.yul\":1369:1381   */\n      revert\n        /* \"#utility.yul\":1331:1383   */\n    tag_319:\n        /* \"#utility.yul\":1419:1428   */\n      dup4\n        /* \"#utility.yul\":1406:1429   */\n      calldataload\n        /* \"#utility.yul\":1452:1470   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1444:1450   */\n      dup2\n        /* \"#utility.yul\":1441:1471   */\n      gt\n        /* \"#utility.yul\":1438:1488   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":1484:1485   */\n      0x00\n        /* \"#utility.yul\":1481:1482   */\n      0x00\n        /* \"#utility.yul\":1474:1486   */\n      revert\n        /* \"#utility.yul\":1438:1488   */\n    tag_320:\n        /* \"#utility.yul\":1507:1529   */\n      dup5\n      add\n        /* \"#utility.yul\":1560:1564   */\n      0x1f\n        /* \"#utility.yul\":1552:1565   */\n      dup2\n      add\n        /* \"#utility.yul\":1548:1575   */\n      dup7\n      sgt\n        /* \"#utility.yul\":1538:1593   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      0x00\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1538:1593   */\n    tag_321:\n        /* \"#utility.yul\":1629:1631   */\n      dup1\n        /* \"#utility.yul\":1616:1632   */\n      calldataload\n        /* \"#utility.yul\":1655:1673   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1647:1653   */\n      dup2\n        /* \"#utility.yul\":1644:1674   */\n      gt\n        /* \"#utility.yul\":1641:1691   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":1687:1688   */\n      0x00\n        /* \"#utility.yul\":1684:1685   */\n      0x00\n        /* \"#utility.yul\":1677:1689   */\n      revert\n        /* \"#utility.yul\":1641:1691   */\n    tag_322:\n        /* \"#utility.yul\":1742:1749   */\n      dup7\n        /* \"#utility.yul\":1735:1739   */\n      0x20\n        /* \"#utility.yul\":1725:1731   */\n      dup3\n        /* \"#utility.yul\":1722:1723   */\n      0x05\n        /* \"#utility.yul\":1718:1732   */\n      shl\n        /* \"#utility.yul\":1714:1716   */\n      dup5\n        /* \"#utility.yul\":1710:1733   */\n      add\n        /* \"#utility.yul\":1706:1740   */\n      add\n        /* \"#utility.yul\":1703:1750   */\n      gt\n        /* \"#utility.yul\":1700:1767   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":1763:1764   */\n      0x00\n        /* \"#utility.yul\":1760:1761   */\n      0x00\n        /* \"#utility.yul\":1753:1765   */\n      revert\n        /* \"#utility.yul\":1700:1767   */\n    tag_323:\n        /* \"#utility.yul\":1794:1798   */\n      0x20\n        /* \"#utility.yul\":1786:1799   */\n      swap2\n      dup3\n      add\n      swap5\n      pop\n        /* \"#utility.yul\":1818:1824   */\n      swap3\n      pop\n        /* \"#utility.yul\":1843:1882   */\n      tag_324\n      swap1\n        /* \"#utility.yul\":1861:1881   */\n      dup6\n      add\n        /* \"#utility.yul\":1843:1882   */\n      tag_304\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":1833:1882   */\n      swap1\n      pop\n        /* \"#utility.yul\":1201:1888   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2086:2266   */\n    tag_58:\n        /* \"#utility.yul\":2145:2151   */\n      0x00\n        /* \"#utility.yul\":2198:2200   */\n      0x20\n        /* \"#utility.yul\":2186:2195   */\n      dup3\n        /* \"#utility.yul\":2177:2184   */\n      dup5\n        /* \"#utility.yul\":2173:2196   */\n      sub\n        /* \"#utility.yul\":2169:2201   */\n      slt\n        /* \"#utility.yul\":2166:2218   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":2214:2215   */\n      0x00\n        /* \"#utility.yul\":2211:2212   */\n      0x00\n        /* \"#utility.yul\":2204:2216   */\n      revert\n        /* \"#utility.yul\":2166:2218   */\n    tag_327:\n      pop\n        /* \"#utility.yul\":2237:2260   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2086:2266   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2661:2792   */\n    tag_305:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2736:2767   */\n      dup2\n      and\n        /* \"#utility.yul\":2726:2768   */\n      dup2\n      eq\n        /* \"#utility.yul\":2716:2786   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2782:2783   */\n      0x00\n        /* \"#utility.yul\":2779:2780   */\n      0x00\n        /* \"#utility.yul\":2772:2784   */\n      revert\n        /* \"#utility.yul\":2797:3044   */\n    tag_104:\n        /* \"#utility.yul\":2856:2862   */\n      0x00\n        /* \"#utility.yul\":2909:2911   */\n      0x20\n        /* \"#utility.yul\":2897:2906   */\n      dup3\n        /* \"#utility.yul\":2888:2895   */\n      dup5\n        /* \"#utility.yul\":2884:2907   */\n      sub\n        /* \"#utility.yul\":2880:2912   */\n      slt\n        /* \"#utility.yul\":2877:2929   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":2925:2926   */\n      0x00\n        /* \"#utility.yul\":2922:2923   */\n      0x00\n        /* \"#utility.yul\":2915:2927   */\n      revert\n        /* \"#utility.yul\":2877:2929   */\n    tag_333:\n        /* \"#utility.yul\":2964:2973   */\n      dup2\n        /* \"#utility.yul\":2951:2974   */\n      calldataload\n        /* \"#utility.yul\":2983:3014   */\n      tag_311\n        /* \"#utility.yul\":3008:3013   */\n      dup2\n        /* \"#utility.yul\":2983:3014   */\n      tag_305\n      jump\t// in\n        /* \"#utility.yul\":5608:5859   */\n    tag_223:\n        /* \"#utility.yul\":5678:5684   */\n      0x00\n        /* \"#utility.yul\":5731:5733   */\n      0x20\n        /* \"#utility.yul\":5719:5728   */\n      dup3\n        /* \"#utility.yul\":5710:5717   */\n      dup5\n        /* \"#utility.yul\":5706:5729   */\n      sub\n        /* \"#utility.yul\":5702:5734   */\n      slt\n        /* \"#utility.yul\":5699:5751   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":5747:5748   */\n      0x00\n        /* \"#utility.yul\":5744:5745   */\n      0x00\n        /* \"#utility.yul\":5737:5749   */\n      revert\n        /* \"#utility.yul\":5699:5751   */\n    tag_344:\n        /* \"#utility.yul\":5779:5788   */\n      dup2\n        /* \"#utility.yul\":5773:5789   */\n      mload\n        /* \"#utility.yul\":5798:5829   */\n      tag_311\n        /* \"#utility.yul\":5823:5828   */\n      dup2\n        /* \"#utility.yul\":5798:5829   */\n      tag_305\n      jump\t// in\n        /* \"#utility.yul\":6907:7034   */\n    tag_238:\n        /* \"#utility.yul\":6968:6978   */\n      0x4e487b71\n        /* \"#utility.yul\":6963:6966   */\n      0xe0\n        /* \"#utility.yul\":6959:6979   */\n      shl\n        /* \"#utility.yul\":6956:6957   */\n      0x00\n        /* \"#utility.yul\":6949:6980   */\n      mstore\n        /* \"#utility.yul\":6999:7003   */\n      0x32\n        /* \"#utility.yul\":6996:6997   */\n      0x04\n        /* \"#utility.yul\":6989:7004   */\n      mstore\n        /* \"#utility.yul\":7023:7027   */\n      0x24\n        /* \"#utility.yul\":7020:7021   */\n      0x00\n        /* \"#utility.yul\":7013:7028   */\n      revert\n        /* \"#utility.yul\":7441:7568   */\n    tag_306:\n        /* \"#utility.yul\":7502:7512   */\n      0x4e487b71\n        /* \"#utility.yul\":7497:7500   */\n      0xe0\n        /* \"#utility.yul\":7493:7513   */\n      shl\n        /* \"#utility.yul\":7490:7491   */\n      0x00\n        /* \"#utility.yul\":7483:7514   */\n      mstore\n        /* \"#utility.yul\":7533:7537   */\n      0x11\n        /* \"#utility.yul\":7530:7531   */\n      0x04\n        /* \"#utility.yul\":7523:7538   */\n      mstore\n        /* \"#utility.yul\":7557:7561   */\n      0x24\n        /* \"#utility.yul\":7554:7555   */\n      0x00\n        /* \"#utility.yul\":7547:7562   */\n      revert\n        /* \"#utility.yul\":7573:7761   */\n    tag_263:\n        /* \"#utility.yul\":7611:7614   */\n      0x00\n        /* \"#utility.yul\":7655:7665   */\n      0xffffffff\n        /* \"#utility.yul\":7648:7653   */\n      dup3\n        /* \"#utility.yul\":7644:7666   */\n      and\n        /* \"#utility.yul\":7690:7700   */\n      0xffffffff\n        /* \"#utility.yul\":7681:7688   */\n      dup2\n        /* \"#utility.yul\":7678:7701   */\n      sub\n        /* \"#utility.yul\":7675:7724   */\n      tag_354\n      jumpi\n        /* \"#utility.yul\":7704:7722   */\n      tag_354\n      tag_306\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":7753:7754   */\n      0x01\n        /* \"#utility.yul\":7740:7755   */\n      add\n      swap3\n        /* \"#utility.yul\":7573:7761   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7766:8446   */\n    tag_265:\n        /* \"#utility.yul\":7992:7994   */\n      0x40\n        /* \"#utility.yul\":8004:8025   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7977:7995   */\n      dup2\n      add\n        /* \"#utility.yul\":8060:8082   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":7944:7948   */\n      0x00\n        /* \"#utility.yul\":8139:8145   */\n      dup5\n        /* \"#utility.yul\":8113:8115   */\n      0x60\n        /* \"#utility.yul\":8098:8116   */\n      dup4\n      add\n        /* \"#utility.yul\":7944:7948   */\n      dup3\n        /* \"#utility.yul\":8173:8375   */\n    tag_356:\n        /* \"#utility.yul\":8187:8193   */\n      dup7\n        /* \"#utility.yul\":8184:8185   */\n      dup2\n        /* \"#utility.yul\":8181:8194   */\n      lt\n        /* \"#utility.yul\":8173:8375   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":8279:8289   */\n      0xffffffff\n        /* \"#utility.yul\":8252:8277   */\n      tag_359\n        /* \"#utility.yul\":8270:8276   */\n      dup5\n        /* \"#utility.yul\":8252:8277   */\n      tag_304\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":8248:8290   */\n      and\n        /* \"#utility.yul\":8236:8291   */\n      dup3\n      mstore\n        /* \"#utility.yul\":8320:8324   */\n      0x20\n        /* \"#utility.yul\":8348:8365   */\n      swap3\n      dup4\n      add\n      swap3\n        /* \"#utility.yul\":8311:8325   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":8209:8210   */\n      0x01\n        /* \"#utility.yul\":8202:8211   */\n      add\n        /* \"#utility.yul\":8173:8375   */\n      jump(tag_356)\n    tag_358:\n      pop\n        /* \"#utility.yul\":8426:8430   */\n      0x20\n        /* \"#utility.yul\":8411:8431   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":8404:8440   */\n      swap4\n      swap1\n      swap4\n      mstore\n      pop\n        /* \"#utility.yul\":8392:8395   */\n      swap4\n        /* \"#utility.yul\":7766:8446   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8451:8579   */\n    tag_268:\n        /* \"#utility.yul\":8518:8527   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":8539:8550   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":8536:8573   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":8553:8571   */\n      tag_362\n      tag_306\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":8451:8579   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220affdd975c57c432a97826f176d931698d65c25556e1a1a6ba659a23a4d42758564736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_174": {
									"entryPoint": null,
									"id": 174,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_274": {
									"entryPoint": null,
									"id": 274,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_756": {
									"entryPoint": null,
									"id": 756,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 185,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:514:7",
										"nodeType": "YulBlock",
										"src": "0:514:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:7",
													"nodeType": "YulBlock",
													"src": "95:209:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:7",
																"nodeType": "YulBlock",
																"src": "141:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:7",
																					"nodeType": "YulLiteral",
																					"src": "150:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:7",
																					"nodeType": "YulLiteral",
																					"src": "153:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:7"
																			},
																			"nativeSrc": "143:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:7"
																		},
																		"nativeSrc": "143:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:7"
																		},
																		"nativeSrc": "112:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:7",
																		"nodeType": "YulLiteral",
																		"src": "137:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:7"
																},
																"nativeSrc": "108:32:7",
																"nodeType": "YulFunctionCall",
																"src": "108:32:7"
															},
															"nativeSrc": "105:52:7",
															"nodeType": "YulIf",
															"src": "105:52:7"
														},
														{
															"nativeSrc": "166:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:7"
																},
																"nativeSrc": "179:16:7",
																"nodeType": "YulFunctionCall",
																"src": "179:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:7",
																	"nodeType": "YulTypedName",
																	"src": "170:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:7",
																"nodeType": "YulBlock",
																"src": "258:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:7",
																					"nodeType": "YulLiteral",
																					"src": "267:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:7",
																					"nodeType": "YulLiteral",
																					"src": "270:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:7"
																			},
																			"nativeSrc": "260:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:7"
																		},
																		"nativeSrc": "260:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:7",
																										"nodeType": "YulLiteral",
																										"src": "243:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:7",
																										"nodeType": "YulLiteral",
																										"src": "248:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:7"
																								},
																								"nativeSrc": "239:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:7",
																								"nodeType": "YulLiteral",
																								"src": "252:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:7"
																						},
																						"nativeSrc": "235:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:7"
																				},
																				"nativeSrc": "224:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:7"
																		},
																		"nativeSrc": "214:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:7"
																},
																"nativeSrc": "207:50:7",
																"nodeType": "YulFunctionCall",
																"src": "207:50:7"
															},
															"nativeSrc": "204:70:7",
															"nodeType": "YulIf",
															"src": "204:70:7"
														},
														{
															"nativeSrc": "283:15:7",
															"nodeType": "YulAssignment",
															"src": "283:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:7",
																"nodeType": "YulIdentifier",
																"src": "293:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:7",
														"nodeType": "YulTypedName",
														"src": "61:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:7",
														"nodeType": "YulTypedName",
														"src": "72:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:7",
														"nodeType": "YulTypedName",
														"src": "84:6:7",
														"type": ""
													}
												],
												"src": "14:290:7"
											},
											{
												"body": {
													"nativeSrc": "410:102:7",
													"nodeType": "YulBlock",
													"src": "410:102:7",
													"statements": [
														{
															"nativeSrc": "420:26:7",
															"nodeType": "YulAssignment",
															"src": "420:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "432:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "432:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:2:7",
																		"nodeType": "YulLiteral",
																		"src": "443:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "428:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "428:3:7"
																},
																"nativeSrc": "428:18:7",
																"nodeType": "YulFunctionCall",
																"src": "428:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "420:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "420:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "462:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "477:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "477:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "493:3:7",
																								"nodeType": "YulLiteral",
																								"src": "493:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "498:1:7",
																								"nodeType": "YulLiteral",
																								"src": "498:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "489:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "489:3:7"
																						},
																						"nativeSrc": "489:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "489:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "502:1:7",
																						"nodeType": "YulLiteral",
																						"src": "502:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "485:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "485:3:7"
																				},
																				"nativeSrc": "485:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "485:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "473:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:7"
																		},
																		"nativeSrc": "473:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "473:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "455:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "455:6:7"
																},
																"nativeSrc": "455:51:7",
																"nodeType": "YulFunctionCall",
																"src": "455:51:7"
															},
															"nativeSrc": "455:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "455:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "309:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "379:9:7",
														"nodeType": "YulTypedName",
														"src": "379:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "390:6:7",
														"nodeType": "YulTypedName",
														"src": "390:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "401:4:7",
														"nodeType": "YulTypedName",
														"src": "401:4:7",
														"type": ""
													}
												],
												"src": "309:203:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH4 0x5F5E100 PUSH1 0x3 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH1 0xA OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x25 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x12DC CODESIZE SUB DUP1 PUSH2 0x12DC DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x44 SWAP2 PUSH2 0x108 JUMP JUMPDEST CALLER DUP1 PUSH2 0x69 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x72 DUP2 PUSH2 0xB9 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7ED98ED PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH2 0x135 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x118 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12E JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1181 PUSH2 0x15B PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x342 ADD MSTORE DUP2 DUP2 PUSH2 0x88B ADD MSTORE PUSH2 0xBF0 ADD MSTORE PUSH2 0x1181 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x108 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F9FB98A GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xAA4B10D1 GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xAA4B10D1 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xC3D93ECD EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xD4E0ED2E EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0xD56D229D EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x364 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2AF JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x41989BEF GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0x41989BEF EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x486A7E6B EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x4BF2C7C9 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x576AEE51 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x25E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x1DEEDFB5 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x1DF8473D EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x24600FC3 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1C7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST CALLDATASIZE PUSH2 0x15A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44697265637420455448207472616E7366657273206E6F7420616C6C6F776564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x169 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0xF5D JUMP JUMPDEST PUSH2 0x383 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x19E PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0xF9D JUMP JUMPDEST PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x430 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x443 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB6 JUMP JUMPDEST PUSH2 0x453 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x208 SWAP1 PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x226 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0x1035 JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH8 0xDE0B6B3A7640000 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x19E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP SELFBALANCE PUSH2 0x250 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x505 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x516 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x250 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x19E PUSH2 0x30D CALLDATASIZE PUSH1 0x4 PUSH2 0xF9D JUMP JUMPDEST PUSH2 0x526 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x1035 JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C7 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x1060 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH2 0x38B PUSH2 0x5B8 JUMP JUMPDEST PUSH0 DUP2 PUSH2 0xFFFF AND GT PUSH2 0x3D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4D696E696D756D206D757374206265203E203 PUSH1 0x6C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP2 PUSH4 0xFFFFFFFF AND DUP1 PUSH0 SUB PUSH2 0x414 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7ED98ED PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH4 0xFFFFFFFF AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x438 PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x441 SELFBALANCE PUSH2 0x5E4 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x44B PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x441 PUSH2 0x690 JUMP JUMPDEST PUSH2 0x45B PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0x463 PUSH2 0x73B JUMP JUMPDEST PUSH2 0x46E DUP4 DUP4 DUP4 PUSH2 0x781 JUMP JUMPDEST PUSH2 0x479 DUP4 DUP4 DUP4 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0x481 PUSH2 0xD2E JUMP JUMPDEST PUSH2 0x48A PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x497 PUSH2 0x5B8 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 GT ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BE70877 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x78F1461296BAD7BD716A7673AA3E659CC091C348A7ED4CFEF7CE452C3052F2FB SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x50D PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x441 PUSH0 PUSH2 0xDCE JUMP JUMPDEST PUSH2 0x51E PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x441 PUSH2 0xE1D JUMP JUMPDEST PUSH0 DUP2 PUSH4 0xFFFFFFFF AND DUP1 PUSH0 SUB PUSH2 0x54E JUMPI PUSH1 0x40 MLOAD PUSH4 0x7ED98ED PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH4 0xFFFFFFFF AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x572 PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x57B DUP2 PUSH2 0x5E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x586 PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5AF JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x57B DUP2 PUSH2 0xDCE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x5EC PUSH2 0x6E2 JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x5F8 JUMPI POP SELFBALANCE DUP2 GT JUMPDEST ISZERO PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67E3990D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x63A DUP2 PUSH2 0x62B PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0xE5A JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xEAFF4B37086828766AD3268786972C0CD24259D4C87A80F9D3963A3C3D999B0D DUP3 PUSH1 0x40 MLOAD PUSH2 0x67F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x57B PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x698 PUSH2 0xEEC JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x734 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST DUP2 PUSH4 0xFFFFFFFF DUP2 AND PUSH0 SUB PUSH2 0x7CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BC81D1BDAD95B9CC81C1C9BDD9A591959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xFFFF AND PUSH4 0xFFFFFFFF DUP3 AND EQ PUSH2 0x827 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4275726E2074686520726571756972656420746F6B656E20616D6F756E740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x3 SLOAD CALLVALUE LT ISZERO PUSH2 0x870 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9CDD59999A58DA595B9D081C185E5B595B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8DC JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x900 SWAP2 SWAP1 PUSH2 0x107B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x948 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2737BA103A37B5B2B71037BBB732B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x9A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88185B1C9958591E48189D5C9B9959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B88185B1C9958591E481D5C19185D1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0xBC7 JUMPI PUSH0 DUP7 DUP7 DUP4 PUSH4 0xFFFFFFFF AND DUP2 DUP2 LT PUSH2 0xA30 JUMPI PUSH2 0xA30 PUSH2 0x1096 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA45 SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST SWAP1 POP DUP5 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND SUB PUSH2 0xAAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x75706461746549642063616E6E6F7420626520616D6F6E6720746F6B656E4964 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x151 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88185B1C9958591E48189D5C9B9959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB52 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB76 SWAP2 SWAP1 PUSH2 0x107B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2737BA103A37B5B2B71037BBB732B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xA03 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x0 SWAP1 JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND DUP5 GT ISZERO PUSH2 0xCD9 JUMPI PUSH0 DUP6 DUP6 DUP4 PUSH4 0xFFFFFFFF AND DUP2 DUP2 LT PUSH2 0xC38 JUMPI PUSH2 0xC38 PUSH2 0x1096 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xC4D SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x42966C68 SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCAF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCC1 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP DUP1 DUP1 PUSH2 0xCD1 SWAP1 PUSH2 0x10BE JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC11 JUMP JUMPDEST POP DUP2 PUSH4 0xFFFFFFFF AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x26CCC16F7FCB4F9C2582BCBA8E2AA8BFC16139AD280D11913CCFB99777825EE0 DUP7 DUP7 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH2 0xD20 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD CALLVALUE PUSH2 0xD3D SWAP2 SWAP1 PUSH2 0x1132 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x57B JUMPI PUSH1 0x40 MLOAD PUSH0 SWAP1 CALLER SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xD84 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xDCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1499599D5B990819985A5B1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xE25 PUSH2 0x73B JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x6C5 CALLER SWAP1 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0xE84 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCF479181 PUSH1 0xE0 SHL DUP2 MSTORE SELFBALANCE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x151 JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xECE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xEE6 JUMPI PUSH2 0xEE6 DUP2 PUSH2 0xF35 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xF44 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF6D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0xF7E JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xF98 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFAD JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xF7E DUP3 PUSH2 0xF85 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFC8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFDE JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0xFEE JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1004 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x1018 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 SWAP2 DUP3 ADD SWAP5 POP SWAP3 POP PUSH2 0x102C SWAP1 DUP6 ADD PUSH2 0xF85 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1045 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x57B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1070 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF7E DUP2 PUSH2 0x104C JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x108B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF7E DUP2 PUSH2 0x104C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND PUSH4 0xFFFFFFFF DUP2 SUB PUSH2 0x10D9 JUMPI PUSH2 0x10D9 PUSH2 0x10AA JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP5 PUSH1 0x60 DUP4 ADD DUP3 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x111F JUMPI PUSH4 0xFFFFFFFF PUSH2 0x110A DUP5 PUSH2 0xF85 JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x10F4 JUMP JUMPDEST POP PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1145 JUMPI PUSH2 0x1145 PUSH2 0x10AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF REVERT 0xD9 PUSH22 0xC57C432A97826F176D931698D65C25556E1A1A6BA659 LOG2 GASPRICE 0x4D TIMESTAMP PUSH22 0x8564736F6C634300081C003300000000000000000000 ",
							"sourceMap": "631:5001:6:-:0;;;808:8;782:34;;823:29;;;-1:-1:-1;;823:29:6;850:2;823:29;;;1627:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1669:10;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;455:51:7;428:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1716:1:2;1821:22;;996:7:1;:15;;-1:-1:-1;;996:15:1;;;-1:-1:-1;;;;;1696:26:6;::::1;1692:55;;1731:16;;-1:-1:-1::0;;;1731:16:6::1;;;;;;;;;;;1692:55;-1:-1:-1::0;;;;;1758:26:6::1;;::::0;631:5001;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:290:7:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:7;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:7:o;309:203::-;631:5001:6;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1197": {
									"entryPoint": null,
									"id": 1197,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1464,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_592": {
									"entryPoint": null,
									"id": 592,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_300": {
									"entryPoint": 1762,
									"id": 300,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_238": {
									"entryPoint": 3613,
									"id": 238,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_processBurn_966": {
									"entryPoint": 3023,
									"id": 966,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_refundExcess_1002": {
									"entryPoint": 3374,
									"id": 1002,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_211": {
									"entryPoint": 1851,
									"id": 211,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_222": {
									"entryPoint": 3820,
									"id": 222,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_579": {
									"entryPoint": 3893,
									"id": 579,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3534,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_254": {
									"entryPoint": 1680,
									"id": 254,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_validateInput_905": {
									"entryPoint": 1921,
									"id": 905,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_withdrawFunds_1117": {
									"entryPoint": 1508,
									"id": 1117,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@burnAmount_669": {
									"entryPoint": null,
									"id": 669,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@createPremium_782": {
									"entryPoint": 1107,
									"id": 782,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@getBurnFee_1181": {
									"entryPoint": null,
									"id": 1181,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getContractBalance_1173": {
									"entryPoint": null,
									"id": 1173,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMaxBurnFee_1189": {
									"entryPoint": null,
									"id": 1189,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isTokenBurned_1036": {
									"entryPoint": 1318,
									"id": 1036,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isUpdatedToken_1051": {
									"entryPoint": 1004,
									"id": 1051,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@nftContract_663": {
									"entryPoint": null,
									"id": 663,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1152": {
									"entryPoint": 1302,
									"id": 1152,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_199": {
									"entryPoint": null,
									"id": 199,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1285,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sendValue_378": {
									"entryPoint": 3674,
									"id": 378,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setBurnAmount_1021": {
									"entryPoint": 899,
									"id": 1021,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setBurnFee_1079": {
									"entryPoint": 1167,
									"id": 1079,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1406,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_1161": {
									"entryPoint": 1091,
									"id": 1161,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawFunds_1131": {
									"entryPoint": 1072,
									"id": 1131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawPartialFunds_1143": {
									"entryPoint": 1386,
									"id": 1143,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 4219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint32_$dyn_calldata_ptrt_uint32": {
									"entryPoint": 4022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint16": {
									"entryPoint": 3933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint32": {
									"entryPoint": 3997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint32": {
									"entryPoint": 3973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint32_$dyn_calldata_ptr_t_uint256__to_t_array$_t_uint32_$dyn_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 4322,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24bddfde50391b9c9f52e9161fdb92836f1da21891ff53d457ef97ee9e32327d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_296c31b8d75dcbb151b5b7b7df75fae073a14e0dff11ea168e3e7c6fa83de361__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_399aaf7f4daf27dd91b93a997a9fe9880d262fa5c6e087f0fedfe596870eef95__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8b1731c71736a845ad3041fdec37ddb41deee5212938764b403c4acee99e6a45__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8b2e460ec12bad3db599997f4ef354a4c31ee38cb51f196f6c072efc7afa3095__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_abee60a9266ba180a9a15fddac68e515f5c78c8ee3804b19f9c01b0dfcbad70c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f6f4cde9a6ae098de50dff215f37676e659bec035067467783e3012b7ecab905__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint32": {
									"entryPoint": 4286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4266,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4246,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 4172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9482:7",
										"nodeType": "YulBlock",
										"src": "0:9482:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "188:182:7",
													"nodeType": "YulBlock",
													"src": "188:182:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "205:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "216:2:7",
																		"nodeType": "YulLiteral",
																		"src": "216:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "198:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:7"
																},
																"nativeSrc": "198:21:7",
																"nodeType": "YulFunctionCall",
																"src": "198:21:7"
															},
															"nativeSrc": "198:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "198:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "239:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "250:2:7",
																				"nodeType": "YulLiteral",
																				"src": "250:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "235:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:7"
																		},
																		"nativeSrc": "235:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "255:2:7",
																		"nodeType": "YulLiteral",
																		"src": "255:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "228:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:7"
																},
																"nativeSrc": "228:30:7",
																"nodeType": "YulFunctionCall",
																"src": "228:30:7"
															},
															"nativeSrc": "228:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "228:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "278:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "289:2:7",
																				"nodeType": "YulLiteral",
																				"src": "289:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "274:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:7"
																		},
																		"nativeSrc": "274:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:7"
																	},
																	{
																		"hexValue": "44697265637420455448207472616e7366657273206e6f7420616c6c6f776564",
																		"kind": "string",
																		"nativeSrc": "294:34:7",
																		"nodeType": "YulLiteral",
																		"src": "294:34:7",
																		"type": "",
																		"value": "Direct ETH transfers not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "267:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:7"
																},
																"nativeSrc": "267:62:7",
																"nodeType": "YulFunctionCall",
																"src": "267:62:7"
															},
															"nativeSrc": "267:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "267:62:7"
														},
														{
															"nativeSrc": "338:26:7",
															"nodeType": "YulAssignment",
															"src": "338:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "350:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "350:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "361:2:7",
																		"nodeType": "YulLiteral",
																		"src": "361:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "346:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "346:3:7"
																},
																"nativeSrc": "346:18:7",
																"nodeType": "YulFunctionCall",
																"src": "346:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "338:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "338:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_399aaf7f4daf27dd91b93a997a9fe9880d262fa5c6e087f0fedfe596870eef95__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:356:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "165:9:7",
														"nodeType": "YulTypedName",
														"src": "165:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "179:4:7",
														"nodeType": "YulTypedName",
														"src": "179:4:7",
														"type": ""
													}
												],
												"src": "14:356:7"
											},
											{
												"body": {
													"nativeSrc": "444:203:7",
													"nodeType": "YulBlock",
													"src": "444:203:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "490:16:7",
																"nodeType": "YulBlock",
																"src": "490:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "499:1:7",
																					"nodeType": "YulLiteral",
																					"src": "499:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:7",
																					"nodeType": "YulLiteral",
																					"src": "502:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "492:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "492:6:7"
																			},
																			"nativeSrc": "492:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "492:12:7"
																		},
																		"nativeSrc": "492:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "492:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "465:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "465:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "474:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "474:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "461:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "461:3:7"
																		},
																		"nativeSrc": "461:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "461:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "486:2:7",
																		"nodeType": "YulLiteral",
																		"src": "486:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "457:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "457:3:7"
																},
																"nativeSrc": "457:32:7",
																"nodeType": "YulFunctionCall",
																"src": "457:32:7"
															},
															"nativeSrc": "454:52:7",
															"nodeType": "YulIf",
															"src": "454:52:7"
														},
														{
															"nativeSrc": "515:36:7",
															"nodeType": "YulVariableDeclaration",
															"src": "515:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "541:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "541:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "528:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "528:12:7"
																},
																"nativeSrc": "528:23:7",
																"nodeType": "YulFunctionCall",
																"src": "528:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "519:5:7",
																	"nodeType": "YulTypedName",
																	"src": "519:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "601:16:7",
																"nodeType": "YulBlock",
																"src": "601:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "610:1:7",
																					"nodeType": "YulLiteral",
																					"src": "610:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "613:1:7",
																					"nodeType": "YulLiteral",
																					"src": "613:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "603:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "603:6:7"
																			},
																			"nativeSrc": "603:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "603:12:7"
																		},
																		"nativeSrc": "603:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "603:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "573:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "573:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "584:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "584:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "591:6:7",
																						"nodeType": "YulLiteral",
																						"src": "591:6:7",
																						"type": "",
																						"value": "0xffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "580:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "580:3:7"
																				},
																				"nativeSrc": "580:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "580:18:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "570:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "570:2:7"
																		},
																		"nativeSrc": "570:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "570:29:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "563:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:7"
																},
																"nativeSrc": "563:37:7",
																"nodeType": "YulFunctionCall",
																"src": "563:37:7"
															},
															"nativeSrc": "560:57:7",
															"nodeType": "YulIf",
															"src": "560:57:7"
														},
														{
															"nativeSrc": "626:15:7",
															"nodeType": "YulAssignment",
															"src": "626:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "636:5:7",
																"nodeType": "YulIdentifier",
																"src": "636:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "626:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint16",
												"nativeSrc": "375:272:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "410:9:7",
														"nodeType": "YulTypedName",
														"src": "410:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "421:7:7",
														"nodeType": "YulTypedName",
														"src": "421:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "433:6:7",
														"nodeType": "YulTypedName",
														"src": "433:6:7",
														"type": ""
													}
												],
												"src": "375:272:7"
											},
											{
												"body": {
													"nativeSrc": "700:115:7",
													"nodeType": "YulBlock",
													"src": "700:115:7",
													"statements": [
														{
															"nativeSrc": "710:29:7",
															"nodeType": "YulAssignment",
															"src": "710:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "732:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "732:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "719:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "719:12:7"
																},
																"nativeSrc": "719:20:7",
																"nodeType": "YulFunctionCall",
																"src": "719:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "710:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "710:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "793:16:7",
																"nodeType": "YulBlock",
																"src": "793:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "802:1:7",
																					"nodeType": "YulLiteral",
																					"src": "802:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "805:1:7",
																					"nodeType": "YulLiteral",
																					"src": "805:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "795:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "795:6:7"
																			},
																			"nativeSrc": "795:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "795:12:7"
																		},
																		"nativeSrc": "795:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "795:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "761:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "761:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "772:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "772:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "779:10:7",
																						"nodeType": "YulLiteral",
																						"src": "779:10:7",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "768:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "768:3:7"
																				},
																				"nativeSrc": "768:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "768:22:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "758:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "758:2:7"
																		},
																		"nativeSrc": "758:33:7",
																		"nodeType": "YulFunctionCall",
																		"src": "758:33:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "751:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:7"
																},
																"nativeSrc": "751:41:7",
																"nodeType": "YulFunctionCall",
																"src": "751:41:7"
															},
															"nativeSrc": "748:61:7",
															"nodeType": "YulIf",
															"src": "748:61:7"
														}
													]
												},
												"name": "abi_decode_uint32",
												"nativeSrc": "652:163:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "679:6:7",
														"nodeType": "YulTypedName",
														"src": "679:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "690:5:7",
														"nodeType": "YulTypedName",
														"src": "690:5:7",
														"type": ""
													}
												],
												"src": "652:163:7"
											},
											{
												"body": {
													"nativeSrc": "889:115:7",
													"nodeType": "YulBlock",
													"src": "889:115:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "935:16:7",
																"nodeType": "YulBlock",
																"src": "935:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "944:1:7",
																					"nodeType": "YulLiteral",
																					"src": "944:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "947:1:7",
																					"nodeType": "YulLiteral",
																					"src": "947:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "937:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "937:6:7"
																			},
																			"nativeSrc": "937:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "937:12:7"
																		},
																		"nativeSrc": "937:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "937:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "910:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "910:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "919:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "919:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "906:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "906:3:7"
																		},
																		"nativeSrc": "906:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "906:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "931:2:7",
																		"nodeType": "YulLiteral",
																		"src": "931:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "902:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "902:3:7"
																},
																"nativeSrc": "902:32:7",
																"nodeType": "YulFunctionCall",
																"src": "902:32:7"
															},
															"nativeSrc": "899:52:7",
															"nodeType": "YulIf",
															"src": "899:52:7"
														},
														{
															"nativeSrc": "960:38:7",
															"nodeType": "YulAssignment",
															"src": "960:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "988:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "988:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint32",
																	"nativeSrc": "970:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "970:17:7"
																},
																"nativeSrc": "970:28:7",
																"nodeType": "YulFunctionCall",
																"src": "970:28:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "960:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "960:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint32",
												"nativeSrc": "820:184:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "855:9:7",
														"nodeType": "YulTypedName",
														"src": "855:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "866:7:7",
														"nodeType": "YulTypedName",
														"src": "866:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "878:6:7",
														"nodeType": "YulTypedName",
														"src": "878:6:7",
														"type": ""
													}
												],
												"src": "820:184:7"
											},
											{
												"body": {
													"nativeSrc": "1104:92:7",
													"nodeType": "YulBlock",
													"src": "1104:92:7",
													"statements": [
														{
															"nativeSrc": "1114:26:7",
															"nodeType": "YulAssignment",
															"src": "1114:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1126:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1126:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1137:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1137:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1122:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:7"
																},
																"nativeSrc": "1122:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1122:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1114:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1114:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1156:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1156:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1181:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1181:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1174:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1174:6:7"
																				},
																				"nativeSrc": "1174:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1174:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1167:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1167:6:7"
																		},
																		"nativeSrc": "1167:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1167:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1149:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1149:6:7"
																},
																"nativeSrc": "1149:41:7",
																"nodeType": "YulFunctionCall",
																"src": "1149:41:7"
															},
															"nativeSrc": "1149:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "1149:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1009:187:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1073:9:7",
														"nodeType": "YulTypedName",
														"src": "1073:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1084:6:7",
														"nodeType": "YulTypedName",
														"src": "1084:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1095:4:7",
														"nodeType": "YulTypedName",
														"src": "1095:4:7",
														"type": ""
													}
												],
												"src": "1009:187:7"
											},
											{
												"body": {
													"nativeSrc": "1321:567:7",
													"nodeType": "YulBlock",
													"src": "1321:567:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1367:16:7",
																"nodeType": "YulBlock",
																"src": "1367:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1376:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1376:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1379:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1379:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1369:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1369:6:7"
																			},
																			"nativeSrc": "1369:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1369:12:7"
																		},
																		"nativeSrc": "1369:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1369:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1342:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1342:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1351:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1351:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1338:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:7"
																		},
																		"nativeSrc": "1338:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1338:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1363:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1363:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1334:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1334:3:7"
																},
																"nativeSrc": "1334:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1334:32:7"
															},
															"nativeSrc": "1331:52:7",
															"nodeType": "YulIf",
															"src": "1331:52:7"
														},
														{
															"nativeSrc": "1392:37:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1392:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1419:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1419:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1406:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1406:12:7"
																},
																"nativeSrc": "1406:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1406:23:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1396:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1396:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1472:16:7",
																"nodeType": "YulBlock",
																"src": "1472:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1481:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1481:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1484:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1484:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1474:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1474:6:7"
																			},
																			"nativeSrc": "1474:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1474:12:7"
																		},
																		"nativeSrc": "1474:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1474:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1444:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1444:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:18:7",
																		"nodeType": "YulLiteral",
																		"src": "1452:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1441:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1441:2:7"
																},
																"nativeSrc": "1441:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1441:30:7"
															},
															"nativeSrc": "1438:50:7",
															"nodeType": "YulIf",
															"src": "1438:50:7"
														},
														{
															"nativeSrc": "1497:32:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1497:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1511:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1511:9:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "1522:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1522:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1507:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1507:3:7"
																},
																"nativeSrc": "1507:22:7",
																"nodeType": "YulFunctionCall",
																"src": "1507:22:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1501:2:7",
																	"nodeType": "YulTypedName",
																	"src": "1501:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1577:16:7",
																"nodeType": "YulBlock",
																"src": "1577:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1586:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1589:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1579:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:7"
																			},
																			"nativeSrc": "1579:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:7"
																		},
																		"nativeSrc": "1579:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1556:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "1556:2:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1560:4:7",
																						"nodeType": "YulLiteral",
																						"src": "1560:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1552:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1552:3:7"
																				},
																				"nativeSrc": "1552:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1552:13:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1567:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1567:7:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1548:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:7"
																		},
																		"nativeSrc": "1548:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1548:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1541:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1541:6:7"
																},
																"nativeSrc": "1541:35:7",
																"nodeType": "YulFunctionCall",
																"src": "1541:35:7"
															},
															"nativeSrc": "1538:55:7",
															"nodeType": "YulIf",
															"src": "1538:55:7"
														},
														{
															"nativeSrc": "1602:30:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1602:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1629:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "1629:2:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1616:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1616:12:7"
																},
																"nativeSrc": "1616:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1616:16:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1606:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1606:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1675:16:7",
																"nodeType": "YulBlock",
																"src": "1675:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1684:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1684:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1687:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1687:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1677:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1677:6:7"
																			},
																			"nativeSrc": "1677:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1677:12:7"
																		},
																		"nativeSrc": "1677:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1677:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1647:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1647:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1655:18:7",
																		"nodeType": "YulLiteral",
																		"src": "1655:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1644:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1644:2:7"
																},
																"nativeSrc": "1644:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1644:30:7"
															},
															"nativeSrc": "1641:50:7",
															"nodeType": "YulIf",
															"src": "1641:50:7"
														},
														{
															"body": {
																"nativeSrc": "1751:16:7",
																"nodeType": "YulBlock",
																"src": "1751:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1760:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1760:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1763:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1763:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1753:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1753:6:7"
																			},
																			"nativeSrc": "1753:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1753:12:7"
																		},
																		"nativeSrc": "1753:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1753:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1714:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "1714:2:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1722:1:7",
																								"nodeType": "YulLiteral",
																								"src": "1722:1:7",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nativeSrc": "1725:6:7",
																								"nodeType": "YulIdentifier",
																								"src": "1725:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1718:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1718:3:7"
																						},
																						"nativeSrc": "1718:14:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1718:14:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1710:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1710:3:7"
																				},
																				"nativeSrc": "1710:23:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1710:23:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1735:4:7",
																				"nodeType": "YulLiteral",
																				"src": "1735:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1706:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1706:3:7"
																		},
																		"nativeSrc": "1706:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1706:34:7"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1742:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "1742:7:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1703:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1703:2:7"
																},
																"nativeSrc": "1703:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1703:47:7"
															},
															"nativeSrc": "1700:67:7",
															"nodeType": "YulIf",
															"src": "1700:67:7"
														},
														{
															"nativeSrc": "1776:23:7",
															"nodeType": "YulAssignment",
															"src": "1776:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1790:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "1790:2:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1794:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1794:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1786:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1786:3:7"
																},
																"nativeSrc": "1786:13:7",
																"nodeType": "YulFunctionCall",
																"src": "1786:13:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1776:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1776:6:7"
																}
															]
														},
														{
															"nativeSrc": "1808:16:7",
															"nodeType": "YulAssignment",
															"src": "1808:16:7",
															"value": {
																"name": "length",
																"nativeSrc": "1818:6:7",
																"nodeType": "YulIdentifier",
																"src": "1818:6:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1808:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:7"
																}
															]
														},
														{
															"nativeSrc": "1833:49:7",
															"nodeType": "YulAssignment",
															"src": "1833:49:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1865:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1865:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1876:4:7",
																				"nodeType": "YulLiteral",
																				"src": "1876:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1861:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1861:3:7"
																		},
																		"nativeSrc": "1861:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1861:20:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint32",
																	"nativeSrc": "1843:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1843:17:7"
																},
																"nativeSrc": "1843:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1843:39:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1833:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1833:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint32_$dyn_calldata_ptrt_uint32",
												"nativeSrc": "1201:687:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1271:9:7",
														"nodeType": "YulTypedName",
														"src": "1271:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1282:7:7",
														"nodeType": "YulTypedName",
														"src": "1282:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1294:6:7",
														"nodeType": "YulTypedName",
														"src": "1294:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1302:6:7",
														"nodeType": "YulTypedName",
														"src": "1302:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1310:6:7",
														"nodeType": "YulTypedName",
														"src": "1310:6:7",
														"type": ""
													}
												],
												"src": "1201:687:7"
											},
											{
												"body": {
													"nativeSrc": "1992:89:7",
													"nodeType": "YulBlock",
													"src": "1992:89:7",
													"statements": [
														{
															"nativeSrc": "2002:26:7",
															"nodeType": "YulAssignment",
															"src": "2002:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2014:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2014:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2025:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2025:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2010:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2010:3:7"
																},
																"nativeSrc": "2010:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2010:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2002:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2002:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2044:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2044:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2059:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2059:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2067:6:7",
																				"nodeType": "YulLiteral",
																				"src": "2067:6:7",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2055:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2055:3:7"
																		},
																		"nativeSrc": "2055:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2055:19:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2037:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2037:6:7"
																},
																"nativeSrc": "2037:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2037:38:7"
															},
															"nativeSrc": "2037:38:7",
															"nodeType": "YulExpressionStatement",
															"src": "2037:38:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
												"nativeSrc": "1893:188:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1961:9:7",
														"nodeType": "YulTypedName",
														"src": "1961:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1972:6:7",
														"nodeType": "YulTypedName",
														"src": "1972:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1983:4:7",
														"nodeType": "YulTypedName",
														"src": "1983:4:7",
														"type": ""
													}
												],
												"src": "1893:188:7"
											},
											{
												"body": {
													"nativeSrc": "2156:110:7",
													"nodeType": "YulBlock",
													"src": "2156:110:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2202:16:7",
																"nodeType": "YulBlock",
																"src": "2202:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2211:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2211:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2214:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2214:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2204:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2204:6:7"
																			},
																			"nativeSrc": "2204:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2204:12:7"
																		},
																		"nativeSrc": "2204:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2204:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2177:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2177:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2186:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2186:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2173:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2173:3:7"
																		},
																		"nativeSrc": "2173:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2173:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2198:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2198:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2169:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2169:3:7"
																},
																"nativeSrc": "2169:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2169:32:7"
															},
															"nativeSrc": "2166:52:7",
															"nodeType": "YulIf",
															"src": "2166:52:7"
														},
														{
															"nativeSrc": "2227:33:7",
															"nodeType": "YulAssignment",
															"src": "2227:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2250:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2250:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2237:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2237:12:7"
																},
																"nativeSrc": "2237:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2237:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2227:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2227:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2086:180:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2122:9:7",
														"nodeType": "YulTypedName",
														"src": "2122:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2133:7:7",
														"nodeType": "YulTypedName",
														"src": "2133:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2145:6:7",
														"nodeType": "YulTypedName",
														"src": "2145:6:7",
														"type": ""
													}
												],
												"src": "2086:180:7"
											},
											{
												"body": {
													"nativeSrc": "2372:76:7",
													"nodeType": "YulBlock",
													"src": "2372:76:7",
													"statements": [
														{
															"nativeSrc": "2382:26:7",
															"nodeType": "YulAssignment",
															"src": "2382:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2394:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2394:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2405:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2405:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2390:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2390:3:7"
																},
																"nativeSrc": "2390:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2390:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2382:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2382:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2424:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2424:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2435:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2435:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2417:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2417:6:7"
																},
																"nativeSrc": "2417:25:7",
																"nodeType": "YulFunctionCall",
																"src": "2417:25:7"
															},
															"nativeSrc": "2417:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "2417:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2271:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2341:9:7",
														"nodeType": "YulTypedName",
														"src": "2341:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2352:6:7",
														"nodeType": "YulTypedName",
														"src": "2352:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2363:4:7",
														"nodeType": "YulTypedName",
														"src": "2363:4:7",
														"type": ""
													}
												],
												"src": "2271:177:7"
											},
											{
												"body": {
													"nativeSrc": "2554:102:7",
													"nodeType": "YulBlock",
													"src": "2554:102:7",
													"statements": [
														{
															"nativeSrc": "2564:26:7",
															"nodeType": "YulAssignment",
															"src": "2564:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2576:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2576:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2587:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2587:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2572:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2572:3:7"
																},
																"nativeSrc": "2572:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2572:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2564:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2564:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2606:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2606:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2621:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2621:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2637:3:7",
																								"nodeType": "YulLiteral",
																								"src": "2637:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2642:1:7",
																								"nodeType": "YulLiteral",
																								"src": "2642:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2633:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2633:3:7"
																						},
																						"nativeSrc": "2633:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2633:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2646:1:7",
																						"nodeType": "YulLiteral",
																						"src": "2646:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2629:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2629:3:7"
																				},
																				"nativeSrc": "2629:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2629:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2617:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2617:3:7"
																		},
																		"nativeSrc": "2617:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2617:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2599:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2599:6:7"
																},
																"nativeSrc": "2599:51:7",
																"nodeType": "YulFunctionCall",
																"src": "2599:51:7"
															},
															"nativeSrc": "2599:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "2599:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2453:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2523:9:7",
														"nodeType": "YulTypedName",
														"src": "2523:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2534:6:7",
														"nodeType": "YulTypedName",
														"src": "2534:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2545:4:7",
														"nodeType": "YulTypedName",
														"src": "2545:4:7",
														"type": ""
													}
												],
												"src": "2453:203:7"
											},
											{
												"body": {
													"nativeSrc": "2706:86:7",
													"nodeType": "YulBlock",
													"src": "2706:86:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2770:16:7",
																"nodeType": "YulBlock",
																"src": "2770:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2779:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2779:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2782:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2782:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2772:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2772:6:7"
																			},
																			"nativeSrc": "2772:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2772:12:7"
																		},
																		"nativeSrc": "2772:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2772:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2729:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2729:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2740:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2740:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2755:3:7",
																										"nodeType": "YulLiteral",
																										"src": "2755:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2760:1:7",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2751:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2751:3:7"
																								},
																								"nativeSrc": "2751:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2751:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2764:1:7",
																								"nodeType": "YulLiteral",
																								"src": "2764:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "2747:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2747:3:7"
																						},
																						"nativeSrc": "2747:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2747:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2736:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2736:3:7"
																				},
																				"nativeSrc": "2736:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2736:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2726:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2726:2:7"
																		},
																		"nativeSrc": "2726:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2726:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2719:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2719:6:7"
																},
																"nativeSrc": "2719:50:7",
																"nodeType": "YulFunctionCall",
																"src": "2719:50:7"
															},
															"nativeSrc": "2716:70:7",
															"nodeType": "YulIf",
															"src": "2716:70:7"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "2661:131:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2695:5:7",
														"nodeType": "YulTypedName",
														"src": "2695:5:7",
														"type": ""
													}
												],
												"src": "2661:131:7"
											},
											{
												"body": {
													"nativeSrc": "2867:177:7",
													"nodeType": "YulBlock",
													"src": "2867:177:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2913:16:7",
																"nodeType": "YulBlock",
																"src": "2913:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2922:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2922:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2925:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2925:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2915:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2915:6:7"
																			},
																			"nativeSrc": "2915:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2915:12:7"
																		},
																		"nativeSrc": "2915:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2915:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2888:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2888:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2897:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2897:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2884:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2884:3:7"
																		},
																		"nativeSrc": "2884:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2884:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2909:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2909:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2880:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2880:3:7"
																},
																"nativeSrc": "2880:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2880:32:7"
															},
															"nativeSrc": "2877:52:7",
															"nodeType": "YulIf",
															"src": "2877:52:7"
														},
														{
															"nativeSrc": "2938:36:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2938:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2964:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2964:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2951:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2951:12:7"
																},
																"nativeSrc": "2951:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2951:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2942:5:7",
																	"nodeType": "YulTypedName",
																	"src": "2942:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3008:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3008:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2983:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "2983:24:7"
																},
																"nativeSrc": "2983:31:7",
																"nodeType": "YulFunctionCall",
																"src": "2983:31:7"
															},
															"nativeSrc": "2983:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "2983:31:7"
														},
														{
															"nativeSrc": "3023:15:7",
															"nodeType": "YulAssignment",
															"src": "3023:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "3033:5:7",
																"nodeType": "YulIdentifier",
																"src": "3033:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3023:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3023:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2797:247:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2833:9:7",
														"nodeType": "YulTypedName",
														"src": "2833:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2844:7:7",
														"nodeType": "YulTypedName",
														"src": "2844:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2856:6:7",
														"nodeType": "YulTypedName",
														"src": "2856:6:7",
														"type": ""
													}
												],
												"src": "2797:247:7"
											},
											{
												"body": {
													"nativeSrc": "3223:169:7",
													"nodeType": "YulBlock",
													"src": "3223:169:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3240:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3240:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3251:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3251:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3233:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3233:6:7"
																},
																"nativeSrc": "3233:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3233:21:7"
															},
															"nativeSrc": "3233:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "3233:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3274:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3274:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3285:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3285:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3270:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3270:3:7"
																		},
																		"nativeSrc": "3270:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3270:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3290:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3290:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3263:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3263:6:7"
																},
																"nativeSrc": "3263:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3263:30:7"
															},
															"nativeSrc": "3263:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "3263:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3313:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3313:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3324:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3324:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3309:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3309:3:7"
																		},
																		"nativeSrc": "3309:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3309:18:7"
																	},
																	{
																		"hexValue": "4d696e696d756d206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "3329:21:7",
																		"nodeType": "YulLiteral",
																		"src": "3329:21:7",
																		"type": "",
																		"value": "Minimum must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3302:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3302:6:7"
																},
																"nativeSrc": "3302:49:7",
																"nodeType": "YulFunctionCall",
																"src": "3302:49:7"
															},
															"nativeSrc": "3302:49:7",
															"nodeType": "YulExpressionStatement",
															"src": "3302:49:7"
														},
														{
															"nativeSrc": "3360:26:7",
															"nodeType": "YulAssignment",
															"src": "3360:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3372:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3372:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3383:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3383:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3368:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3368:3:7"
																},
																"nativeSrc": "3368:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3368:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3360:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3360:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_296c31b8d75dcbb151b5b7b7df75fae073a14e0dff11ea168e3e7c6fa83de361__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3049:343:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3200:9:7",
														"nodeType": "YulTypedName",
														"src": "3200:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3214:4:7",
														"nodeType": "YulTypedName",
														"src": "3214:4:7",
														"type": ""
													}
												],
												"src": "3049:343:7"
											},
											{
												"body": {
													"nativeSrc": "3526:119:7",
													"nodeType": "YulBlock",
													"src": "3526:119:7",
													"statements": [
														{
															"nativeSrc": "3536:26:7",
															"nodeType": "YulAssignment",
															"src": "3536:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3548:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3548:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3559:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3559:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3544:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3544:3:7"
																},
																"nativeSrc": "3544:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3544:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3536:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3536:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3578:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3578:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3589:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3589:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3571:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3571:6:7"
																},
																"nativeSrc": "3571:25:7",
																"nodeType": "YulFunctionCall",
																"src": "3571:25:7"
															},
															"nativeSrc": "3571:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "3571:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3616:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3616:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3627:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3627:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3612:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3612:3:7"
																		},
																		"nativeSrc": "3612:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3612:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3632:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3632:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3605:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3605:6:7"
																},
																"nativeSrc": "3605:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3605:34:7"
															},
															"nativeSrc": "3605:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3605:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3397:248:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3487:9:7",
														"nodeType": "YulTypedName",
														"src": "3487:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3498:6:7",
														"nodeType": "YulTypedName",
														"src": "3498:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3506:6:7",
														"nodeType": "YulTypedName",
														"src": "3506:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3517:4:7",
														"nodeType": "YulTypedName",
														"src": "3517:4:7",
														"type": ""
													}
												],
												"src": "3397:248:7"
											},
											{
												"body": {
													"nativeSrc": "3824:181:7",
													"nodeType": "YulBlock",
													"src": "3824:181:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3841:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3841:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3852:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3852:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3834:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3834:6:7"
																},
																"nativeSrc": "3834:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3834:21:7"
															},
															"nativeSrc": "3834:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "3834:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3875:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3875:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3886:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3886:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3871:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3871:3:7"
																		},
																		"nativeSrc": "3871:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3871:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3891:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3891:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3864:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3864:6:7"
																},
																"nativeSrc": "3864:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3864:30:7"
															},
															"nativeSrc": "3864:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "3864:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3914:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3914:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3925:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3925:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3910:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3910:3:7"
																		},
																		"nativeSrc": "3910:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3910:18:7"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "3930:33:7",
																		"nodeType": "YulLiteral",
																		"src": "3930:33:7",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3903:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3903:6:7"
																},
																"nativeSrc": "3903:61:7",
																"nodeType": "YulFunctionCall",
																"src": "3903:61:7"
															},
															"nativeSrc": "3903:61:7",
															"nodeType": "YulExpressionStatement",
															"src": "3903:61:7"
														},
														{
															"nativeSrc": "3973:26:7",
															"nodeType": "YulAssignment",
															"src": "3973:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3985:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3985:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3996:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3996:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3981:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3981:3:7"
																},
																"nativeSrc": "3981:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3981:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3973:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3973:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3650:355:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3801:9:7",
														"nodeType": "YulTypedName",
														"src": "3801:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3815:4:7",
														"nodeType": "YulTypedName",
														"src": "3815:4:7",
														"type": ""
													}
												],
												"src": "3650:355:7"
											},
											{
												"body": {
													"nativeSrc": "4184:166:7",
													"nodeType": "YulBlock",
													"src": "4184:166:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4201:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4201:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4212:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4212:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4194:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4194:6:7"
																},
																"nativeSrc": "4194:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4194:21:7"
															},
															"nativeSrc": "4194:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "4194:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4235:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4235:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4246:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4246:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4231:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4231:3:7"
																		},
																		"nativeSrc": "4231:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4231:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4251:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4251:2:7",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4224:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4224:6:7"
																},
																"nativeSrc": "4224:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4224:30:7"
															},
															"nativeSrc": "4224:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "4224:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4274:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4274:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4285:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4285:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4270:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4270:3:7"
																		},
																		"nativeSrc": "4270:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4270:18:7"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "4290:18:7",
																		"nodeType": "YulLiteral",
																		"src": "4290:18:7",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4263:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4263:6:7"
																},
																"nativeSrc": "4263:46:7",
																"nodeType": "YulFunctionCall",
																"src": "4263:46:7"
															},
															"nativeSrc": "4263:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "4263:46:7"
														},
														{
															"nativeSrc": "4318:26:7",
															"nodeType": "YulAssignment",
															"src": "4318:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4330:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4330:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4341:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4341:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4326:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4326:3:7"
																},
																"nativeSrc": "4326:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4326:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4318:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4318:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4010:340:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4161:9:7",
														"nodeType": "YulTypedName",
														"src": "4161:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4175:4:7",
														"nodeType": "YulTypedName",
														"src": "4175:4:7",
														"type": ""
													}
												],
												"src": "4010:340:7"
											},
											{
												"body": {
													"nativeSrc": "4529:168:7",
													"nodeType": "YulBlock",
													"src": "4529:168:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4546:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4546:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4557:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4557:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4539:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4539:6:7"
																},
																"nativeSrc": "4539:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4539:21:7"
															},
															"nativeSrc": "4539:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "4539:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4580:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4580:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4591:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4591:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4576:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4576:3:7"
																		},
																		"nativeSrc": "4576:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4576:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4596:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4596:2:7",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4569:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4569:6:7"
																},
																"nativeSrc": "4569:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4569:30:7"
															},
															"nativeSrc": "4569:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "4569:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4619:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4619:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4630:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4630:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4615:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4615:3:7"
																		},
																		"nativeSrc": "4615:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4615:18:7"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e732070726f7669646564",
																		"kind": "string",
																		"nativeSrc": "4635:20:7",
																		"nodeType": "YulLiteral",
																		"src": "4635:20:7",
																		"type": "",
																		"value": "No tokens provided"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4608:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4608:6:7"
																},
																"nativeSrc": "4608:48:7",
																"nodeType": "YulFunctionCall",
																"src": "4608:48:7"
															},
															"nativeSrc": "4608:48:7",
															"nodeType": "YulExpressionStatement",
															"src": "4608:48:7"
														},
														{
															"nativeSrc": "4665:26:7",
															"nodeType": "YulAssignment",
															"src": "4665:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4677:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4677:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4688:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4688:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4673:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4673:3:7"
																},
																"nativeSrc": "4673:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4673:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4665:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4665:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8b1731c71736a845ad3041fdec37ddb41deee5212938764b403c4acee99e6a45__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4355:342:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4506:9:7",
														"nodeType": "YulTypedName",
														"src": "4506:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4520:4:7",
														"nodeType": "YulTypedName",
														"src": "4520:4:7",
														"type": ""
													}
												],
												"src": "4355:342:7"
											},
											{
												"body": {
													"nativeSrc": "4876:180:7",
													"nodeType": "YulBlock",
													"src": "4876:180:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4893:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4893:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4904:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4904:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4886:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4886:6:7"
																},
																"nativeSrc": "4886:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4886:21:7"
															},
															"nativeSrc": "4886:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "4886:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4927:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4927:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4938:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4938:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4923:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4923:3:7"
																		},
																		"nativeSrc": "4923:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4923:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4943:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4943:2:7",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4916:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4916:6:7"
																},
																"nativeSrc": "4916:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4916:30:7"
															},
															"nativeSrc": "4916:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "4916:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4966:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4966:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4977:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4977:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4962:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4962:3:7"
																		},
																		"nativeSrc": "4962:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4962:18:7"
																	},
																	{
																		"hexValue": "4275726e2074686520726571756972656420746f6b656e20616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "4982:32:7",
																		"nodeType": "YulLiteral",
																		"src": "4982:32:7",
																		"type": "",
																		"value": "Burn the required token amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4955:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4955:6:7"
																},
																"nativeSrc": "4955:60:7",
																"nodeType": "YulFunctionCall",
																"src": "4955:60:7"
															},
															"nativeSrc": "4955:60:7",
															"nodeType": "YulExpressionStatement",
															"src": "4955:60:7"
														},
														{
															"nativeSrc": "5024:26:7",
															"nodeType": "YulAssignment",
															"src": "5024:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5036:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5036:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5047:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5047:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5032:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5032:3:7"
																},
																"nativeSrc": "5032:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5032:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5024:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5024:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24bddfde50391b9c9f52e9161fdb92836f1da21891ff53d457ef97ee9e32327d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4702:354:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4853:9:7",
														"nodeType": "YulTypedName",
														"src": "4853:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4867:4:7",
														"nodeType": "YulTypedName",
														"src": "4867:4:7",
														"type": ""
													}
												],
												"src": "4702:354:7"
											},
											{
												"body": {
													"nativeSrc": "5235:170:7",
													"nodeType": "YulBlock",
													"src": "5235:170:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5252:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5252:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5263:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5263:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5245:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5245:6:7"
																},
																"nativeSrc": "5245:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5245:21:7"
															},
															"nativeSrc": "5245:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "5245:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5286:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5286:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5297:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5297:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5282:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5282:3:7"
																		},
																		"nativeSrc": "5282:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5282:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5302:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5302:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5275:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5275:6:7"
																},
																"nativeSrc": "5275:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5275:30:7"
															},
															"nativeSrc": "5275:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "5275:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5325:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5325:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5336:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5336:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5321:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5321:3:7"
																		},
																		"nativeSrc": "5321:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5321:18:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e74207061796d656e74",
																		"kind": "string",
																		"nativeSrc": "5341:22:7",
																		"nodeType": "YulLiteral",
																		"src": "5341:22:7",
																		"type": "",
																		"value": "Insufficient payment"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5314:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5314:6:7"
																},
																"nativeSrc": "5314:50:7",
																"nodeType": "YulFunctionCall",
																"src": "5314:50:7"
															},
															"nativeSrc": "5314:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "5314:50:7"
														},
														{
															"nativeSrc": "5373:26:7",
															"nodeType": "YulAssignment",
															"src": "5373:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5385:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5385:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5396:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5396:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5381:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5381:3:7"
																},
																"nativeSrc": "5381:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5381:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5373:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5373:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5061:344:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5212:9:7",
														"nodeType": "YulTypedName",
														"src": "5212:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5226:4:7",
														"nodeType": "YulTypedName",
														"src": "5226:4:7",
														"type": ""
													}
												],
												"src": "5061:344:7"
											},
											{
												"body": {
													"nativeSrc": "5510:93:7",
													"nodeType": "YulBlock",
													"src": "5510:93:7",
													"statements": [
														{
															"nativeSrc": "5520:26:7",
															"nodeType": "YulAssignment",
															"src": "5520:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5532:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5532:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5543:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5543:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5528:3:7"
																},
																"nativeSrc": "5528:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5528:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5520:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5520:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5562:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5562:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5577:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5577:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5585:10:7",
																				"nodeType": "YulLiteral",
																				"src": "5585:10:7",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5573:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5573:3:7"
																		},
																		"nativeSrc": "5573:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5573:23:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5555:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5555:6:7"
																},
																"nativeSrc": "5555:42:7",
																"nodeType": "YulFunctionCall",
																"src": "5555:42:7"
															},
															"nativeSrc": "5555:42:7",
															"nodeType": "YulExpressionStatement",
															"src": "5555:42:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5410:193:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5479:9:7",
														"nodeType": "YulTypedName",
														"src": "5479:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5490:6:7",
														"nodeType": "YulTypedName",
														"src": "5490:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5501:4:7",
														"nodeType": "YulTypedName",
														"src": "5501:4:7",
														"type": ""
													}
												],
												"src": "5410:193:7"
											},
											{
												"body": {
													"nativeSrc": "5689:170:7",
													"nodeType": "YulBlock",
													"src": "5689:170:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5735:16:7",
																"nodeType": "YulBlock",
																"src": "5735:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5744:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5744:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5747:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5747:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5737:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5737:6:7"
																			},
																			"nativeSrc": "5737:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5737:12:7"
																		},
																		"nativeSrc": "5737:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5737:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5710:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5710:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5719:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5719:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5706:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5706:3:7"
																		},
																		"nativeSrc": "5706:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5706:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5731:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5731:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5702:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5702:3:7"
																},
																"nativeSrc": "5702:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5702:32:7"
															},
															"nativeSrc": "5699:52:7",
															"nodeType": "YulIf",
															"src": "5699:52:7"
														},
														{
															"nativeSrc": "5760:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5760:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5779:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5779:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5773:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5773:5:7"
																},
																"nativeSrc": "5773:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5773:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5764:5:7",
																	"nodeType": "YulTypedName",
																	"src": "5764:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5823:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5823:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "5798:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "5798:24:7"
																},
																"nativeSrc": "5798:31:7",
																"nodeType": "YulFunctionCall",
																"src": "5798:31:7"
															},
															"nativeSrc": "5798:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "5798:31:7"
														},
														{
															"nativeSrc": "5838:15:7",
															"nodeType": "YulAssignment",
															"src": "5838:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "5848:5:7",
																"nodeType": "YulIdentifier",
																"src": "5848:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5838:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5838:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "5608:251:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5655:9:7",
														"nodeType": "YulTypedName",
														"src": "5655:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5666:7:7",
														"nodeType": "YulTypedName",
														"src": "5666:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5678:6:7",
														"nodeType": "YulTypedName",
														"src": "5678:6:7",
														"type": ""
													}
												],
												"src": "5608:251:7"
											},
											{
												"body": {
													"nativeSrc": "6038:165:7",
													"nodeType": "YulBlock",
													"src": "6038:165:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6055:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6055:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6066:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6066:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6048:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6048:6:7"
																},
																"nativeSrc": "6048:21:7",
																"nodeType": "YulFunctionCall",
																"src": "6048:21:7"
															},
															"nativeSrc": "6048:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "6048:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6089:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6089:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6100:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6100:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6085:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6085:3:7"
																		},
																		"nativeSrc": "6085:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6085:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6105:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6105:2:7",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6078:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6078:6:7"
																},
																"nativeSrc": "6078:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6078:30:7"
															},
															"nativeSrc": "6078:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "6078:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6128:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6128:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6139:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6139:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6124:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6124:3:7"
																		},
																		"nativeSrc": "6124:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6124:18:7"
																	},
																	{
																		"hexValue": "4e6f7420746f6b656e206f776e6572",
																		"kind": "string",
																		"nativeSrc": "6144:17:7",
																		"nodeType": "YulLiteral",
																		"src": "6144:17:7",
																		"type": "",
																		"value": "Not token owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6117:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6117:6:7"
																},
																"nativeSrc": "6117:45:7",
																"nodeType": "YulFunctionCall",
																"src": "6117:45:7"
															},
															"nativeSrc": "6117:45:7",
															"nodeType": "YulExpressionStatement",
															"src": "6117:45:7"
														},
														{
															"nativeSrc": "6171:26:7",
															"nodeType": "YulAssignment",
															"src": "6171:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6183:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6183:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6194:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6194:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6179:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6179:3:7"
																},
																"nativeSrc": "6179:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6179:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6171:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6171:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5864:339:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6015:9:7",
														"nodeType": "YulTypedName",
														"src": "6015:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6029:4:7",
														"nodeType": "YulTypedName",
														"src": "6029:4:7",
														"type": ""
													}
												],
												"src": "5864:339:7"
											},
											{
												"body": {
													"nativeSrc": "6382:170:7",
													"nodeType": "YulBlock",
													"src": "6382:170:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6399:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6399:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6410:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6410:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6392:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6392:6:7"
																},
																"nativeSrc": "6392:21:7",
																"nodeType": "YulFunctionCall",
																"src": "6392:21:7"
															},
															"nativeSrc": "6392:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "6392:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6433:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6433:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6444:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6444:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6429:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6429:3:7"
																		},
																		"nativeSrc": "6429:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6429:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6449:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6449:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6422:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6422:6:7"
																},
																"nativeSrc": "6422:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6422:30:7"
															},
															"nativeSrc": "6422:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "6422:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6472:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6472:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6483:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6483:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6468:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6468:3:7"
																		},
																		"nativeSrc": "6468:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6468:18:7"
																	},
																	{
																		"hexValue": "546f6b656e20616c7265616479206275726e6564",
																		"kind": "string",
																		"nativeSrc": "6488:22:7",
																		"nodeType": "YulLiteral",
																		"src": "6488:22:7",
																		"type": "",
																		"value": "Token already burned"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6461:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6461:6:7"
																},
																"nativeSrc": "6461:50:7",
																"nodeType": "YulFunctionCall",
																"src": "6461:50:7"
															},
															"nativeSrc": "6461:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "6461:50:7"
														},
														{
															"nativeSrc": "6520:26:7",
															"nodeType": "YulAssignment",
															"src": "6520:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6532:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6532:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6543:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6543:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6528:3:7"
																},
																"nativeSrc": "6528:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6528:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6520:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6520:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8b2e460ec12bad3db599997f4ef354a4c31ee38cb51f196f6c072efc7afa3095__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6208:344:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6359:9:7",
														"nodeType": "YulTypedName",
														"src": "6359:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6373:4:7",
														"nodeType": "YulTypedName",
														"src": "6373:4:7",
														"type": ""
													}
												],
												"src": "6208:344:7"
											},
											{
												"body": {
													"nativeSrc": "6731:171:7",
													"nodeType": "YulBlock",
													"src": "6731:171:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6748:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6748:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6759:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6759:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6741:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6741:6:7"
																},
																"nativeSrc": "6741:21:7",
																"nodeType": "YulFunctionCall",
																"src": "6741:21:7"
															},
															"nativeSrc": "6741:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "6741:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6782:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6782:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6793:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6793:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6778:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6778:3:7"
																		},
																		"nativeSrc": "6778:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6778:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6798:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6798:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6771:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6771:6:7"
																},
																"nativeSrc": "6771:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6771:30:7"
															},
															"nativeSrc": "6771:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "6771:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6821:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6821:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6832:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6832:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6817:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6817:3:7"
																		},
																		"nativeSrc": "6817:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6817:18:7"
																	},
																	{
																		"hexValue": "546f6b656e20616c72656164792075706461746564",
																		"kind": "string",
																		"nativeSrc": "6837:23:7",
																		"nodeType": "YulLiteral",
																		"src": "6837:23:7",
																		"type": "",
																		"value": "Token already updated"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6810:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6810:6:7"
																},
																"nativeSrc": "6810:51:7",
																"nodeType": "YulFunctionCall",
																"src": "6810:51:7"
															},
															"nativeSrc": "6810:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "6810:51:7"
														},
														{
															"nativeSrc": "6870:26:7",
															"nodeType": "YulAssignment",
															"src": "6870:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6882:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6882:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6893:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6893:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6878:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6878:3:7"
																},
																"nativeSrc": "6878:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6878:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6870:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6870:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_abee60a9266ba180a9a15fddac68e515f5c78c8ee3804b19f9c01b0dfcbad70c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6557:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6708:9:7",
														"nodeType": "YulTypedName",
														"src": "6708:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6722:4:7",
														"nodeType": "YulTypedName",
														"src": "6722:4:7",
														"type": ""
													}
												],
												"src": "6557:345:7"
											},
											{
												"body": {
													"nativeSrc": "6939:95:7",
													"nodeType": "YulBlock",
													"src": "6939:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6956:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6956:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6963:3:7",
																				"nodeType": "YulLiteral",
																				"src": "6963:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6968:10:7",
																				"nodeType": "YulLiteral",
																				"src": "6968:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6959:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6959:3:7"
																		},
																		"nativeSrc": "6959:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6959:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6949:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6949:6:7"
																},
																"nativeSrc": "6949:31:7",
																"nodeType": "YulFunctionCall",
																"src": "6949:31:7"
															},
															"nativeSrc": "6949:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "6949:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6996:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6996:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6999:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6999:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6989:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6989:6:7"
																},
																"nativeSrc": "6989:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6989:15:7"
															},
															"nativeSrc": "6989:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6989:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7020:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7020:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7023:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7023:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7013:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7013:6:7"
																},
																"nativeSrc": "7013:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7013:15:7"
															},
															"nativeSrc": "7013:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7013:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "6907:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6907:127:7"
											},
											{
												"body": {
													"nativeSrc": "7213:223:7",
													"nodeType": "YulBlock",
													"src": "7213:223:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7230:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7230:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7241:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7241:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7223:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7223:6:7"
																},
																"nativeSrc": "7223:21:7",
																"nodeType": "YulFunctionCall",
																"src": "7223:21:7"
															},
															"nativeSrc": "7223:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "7223:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7264:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7264:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7275:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7275:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7260:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7260:3:7"
																		},
																		"nativeSrc": "7260:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7260:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7280:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7280:2:7",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7253:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7253:6:7"
																},
																"nativeSrc": "7253:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7253:30:7"
															},
															"nativeSrc": "7253:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "7253:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7303:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7303:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7314:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7314:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7299:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7299:3:7"
																		},
																		"nativeSrc": "7299:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7299:18:7"
																	},
																	{
																		"hexValue": "75706461746549642063616e6e6f7420626520616d6f6e6720746f6b656e4964",
																		"kind": "string",
																		"nativeSrc": "7319:34:7",
																		"nodeType": "YulLiteral",
																		"src": "7319:34:7",
																		"type": "",
																		"value": "updateId cannot be among tokenId"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7292:6:7"
																},
																"nativeSrc": "7292:62:7",
																"nodeType": "YulFunctionCall",
																"src": "7292:62:7"
															},
															"nativeSrc": "7292:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "7292:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7374:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7374:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7385:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7385:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7370:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7370:3:7"
																		},
																		"nativeSrc": "7370:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7370:18:7"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nativeSrc": "7390:3:7",
																		"nodeType": "YulLiteral",
																		"src": "7390:3:7",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7363:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7363:6:7"
																},
																"nativeSrc": "7363:31:7",
																"nodeType": "YulFunctionCall",
																"src": "7363:31:7"
															},
															"nativeSrc": "7363:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "7363:31:7"
														},
														{
															"nativeSrc": "7403:27:7",
															"nodeType": "YulAssignment",
															"src": "7403:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7415:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7415:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7426:3:7",
																		"nodeType": "YulLiteral",
																		"src": "7426:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7411:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7411:3:7"
																},
																"nativeSrc": "7411:19:7",
																"nodeType": "YulFunctionCall",
																"src": "7411:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7403:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7403:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f6f4cde9a6ae098de50dff215f37676e659bec035067467783e3012b7ecab905__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7039:397:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7190:9:7",
														"nodeType": "YulTypedName",
														"src": "7190:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7204:4:7",
														"nodeType": "YulTypedName",
														"src": "7204:4:7",
														"type": ""
													}
												],
												"src": "7039:397:7"
											},
											{
												"body": {
													"nativeSrc": "7473:95:7",
													"nodeType": "YulBlock",
													"src": "7473:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7490:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7490:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7497:3:7",
																				"nodeType": "YulLiteral",
																				"src": "7497:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7502:10:7",
																				"nodeType": "YulLiteral",
																				"src": "7502:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7493:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7493:3:7"
																		},
																		"nativeSrc": "7493:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7493:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7483:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7483:6:7"
																},
																"nativeSrc": "7483:31:7",
																"nodeType": "YulFunctionCall",
																"src": "7483:31:7"
															},
															"nativeSrc": "7483:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "7483:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7530:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7530:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7533:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7533:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7523:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7523:6:7"
																},
																"nativeSrc": "7523:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7523:15:7"
															},
															"nativeSrc": "7523:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7523:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7554:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7554:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7557:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7557:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7547:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7547:6:7"
																},
																"nativeSrc": "7547:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7547:15:7"
															},
															"nativeSrc": "7547:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7547:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7441:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7441:127:7"
											},
											{
												"body": {
													"nativeSrc": "7619:142:7",
													"nodeType": "YulBlock",
													"src": "7619:142:7",
													"statements": [
														{
															"nativeSrc": "7629:37:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7629:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7648:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7648:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7655:10:7",
																		"nodeType": "YulLiteral",
																		"src": "7655:10:7",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7644:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7644:3:7"
																},
																"nativeSrc": "7644:22:7",
																"nodeType": "YulFunctionCall",
																"src": "7644:22:7"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "7633:7:7",
																	"nodeType": "YulTypedName",
																	"src": "7633:7:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7702:22:7",
																"nodeType": "YulBlock",
																"src": "7702:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7704:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7704:16:7"
																			},
																			"nativeSrc": "7704:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7704:18:7"
																		},
																		"nativeSrc": "7704:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7704:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "7681:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "7681:7:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7690:10:7",
																		"nodeType": "YulLiteral",
																		"src": "7690:10:7",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7678:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7678:2:7"
																},
																"nativeSrc": "7678:23:7",
																"nodeType": "YulFunctionCall",
																"src": "7678:23:7"
															},
															"nativeSrc": "7675:49:7",
															"nodeType": "YulIf",
															"src": "7675:49:7"
														},
														{
															"nativeSrc": "7733:22:7",
															"nodeType": "YulAssignment",
															"src": "7733:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "7744:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "7744:7:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7753:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7753:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7740:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7740:3:7"
																},
																"nativeSrc": "7740:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7740:15:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7733:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7733:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint32",
												"nativeSrc": "7573:188:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7601:5:7",
														"nodeType": "YulTypedName",
														"src": "7601:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7611:3:7",
														"nodeType": "YulTypedName",
														"src": "7611:3:7",
														"type": ""
													}
												],
												"src": "7573:188:7"
											},
											{
												"body": {
													"nativeSrc": "7953:493:7",
													"nodeType": "YulBlock",
													"src": "7953:493:7",
													"statements": [
														{
															"nativeSrc": "7963:32:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7963:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7981:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7981:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7992:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7992:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7977:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7977:3:7"
																},
																"nativeSrc": "7977:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7977:18:7"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "7967:6:7",
																	"nodeType": "YulTypedName",
																	"src": "7967:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8011:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8011:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8022:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8022:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8004:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8004:6:7"
																},
																"nativeSrc": "8004:21:7",
																"nodeType": "YulFunctionCall",
																"src": "8004:21:7"
															},
															"nativeSrc": "8004:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "8004:21:7"
														},
														{
															"nativeSrc": "8034:17:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8034:17:7",
															"value": {
																"name": "tail_1",
																"nativeSrc": "8045:6:7",
																"nodeType": "YulIdentifier",
																"src": "8045:6:7"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "8038:3:7",
																	"nodeType": "YulTypedName",
																	"src": "8038:3:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "8067:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8067:6:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8075:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8075:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8060:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8060:6:7"
																},
																"nativeSrc": "8060:22:7",
																"nodeType": "YulFunctionCall",
																"src": "8060:22:7"
															},
															"nativeSrc": "8060:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "8060:22:7"
														},
														{
															"nativeSrc": "8091:25:7",
															"nodeType": "YulAssignment",
															"src": "8091:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8102:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8102:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8113:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8113:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8098:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8098:3:7"
																},
																"nativeSrc": "8098:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8098:18:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8091:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8091:3:7"
																}
															]
														},
														{
															"nativeSrc": "8125:20:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8125:20:7",
															"value": {
																"name": "value0",
																"nativeSrc": "8139:6:7",
																"nodeType": "YulIdentifier",
																"src": "8139:6:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "8129:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8129:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8154:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8154:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "8163:1:7",
																"nodeType": "YulLiteral",
																"src": "8163:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "8158:1:7",
																	"nodeType": "YulTypedName",
																	"src": "8158:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8222:153:7",
																"nodeType": "YulBlock",
																"src": "8222:153:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "8243:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8243:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nativeSrc": "8270:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8270:6:7"
																								}
																							],
																							"functionName": {
																								"name": "abi_decode_uint32",
																								"nativeSrc": "8252:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "8252:17:7"
																							},
																							"nativeSrc": "8252:25:7",
																							"nodeType": "YulFunctionCall",
																							"src": "8252:25:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8279:10:7",
																							"nodeType": "YulLiteral",
																							"src": "8279:10:7",
																							"type": "",
																							"value": "0xffffffff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8248:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8248:3:7"
																					},
																					"nativeSrc": "8248:42:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8248:42:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8236:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8236:6:7"
																			},
																			"nativeSrc": "8236:55:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8236:55:7"
																		},
																		"nativeSrc": "8236:55:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8236:55:7"
																	},
																	{
																		"nativeSrc": "8304:21:7",
																		"nodeType": "YulAssignment",
																		"src": "8304:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "8315:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8315:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8320:4:7",
																					"nodeType": "YulLiteral",
																					"src": "8320:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8311:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8311:3:7"
																			},
																			"nativeSrc": "8311:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8311:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "8304:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8304:3:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8338:27:7",
																		"nodeType": "YulAssignment",
																		"src": "8338:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "8352:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "8352:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8360:4:7",
																					"nodeType": "YulLiteral",
																					"src": "8360:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8348:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8348:3:7"
																			},
																			"nativeSrc": "8348:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8348:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "8338:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8338:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "8184:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8184:1:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8187:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8187:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8181:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8181:2:7"
																},
																"nativeSrc": "8181:13:7",
																"nodeType": "YulFunctionCall",
																"src": "8181:13:7"
															},
															"nativeSrc": "8173:202:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8195:18:7",
																"nodeType": "YulBlock",
																"src": "8195:18:7",
																"statements": [
																	{
																		"nativeSrc": "8197:14:7",
																		"nodeType": "YulAssignment",
																		"src": "8197:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "8206:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "8206:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8209:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8209:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8202:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8202:3:7"
																			},
																			"nativeSrc": "8202:9:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8202:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "8197:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "8197:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "8177:3:7",
																"nodeType": "YulBlock",
																"src": "8177:3:7",
																"statements": []
															},
															"src": "8173:202:7"
														},
														{
															"nativeSrc": "8384:11:7",
															"nodeType": "YulAssignment",
															"src": "8384:11:7",
															"value": {
																"name": "pos",
																"nativeSrc": "8392:3:7",
																"nodeType": "YulIdentifier",
																"src": "8392:3:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8384:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8384:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8415:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8415:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8426:4:7",
																				"nodeType": "YulLiteral",
																				"src": "8426:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8411:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8411:3:7"
																		},
																		"nativeSrc": "8411:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8411:20:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8433:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8433:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8404:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8404:6:7"
																},
																"nativeSrc": "8404:36:7",
																"nodeType": "YulFunctionCall",
																"src": "8404:36:7"
															},
															"nativeSrc": "8404:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "8404:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint32_$dyn_calldata_ptr_t_uint256__to_t_array$_t_uint32_$dyn_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "7766:680:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7906:9:7",
														"nodeType": "YulTypedName",
														"src": "7906:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7917:6:7",
														"nodeType": "YulTypedName",
														"src": "7917:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7925:6:7",
														"nodeType": "YulTypedName",
														"src": "7925:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7933:6:7",
														"nodeType": "YulTypedName",
														"src": "7933:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7944:4:7",
														"nodeType": "YulTypedName",
														"src": "7944:4:7",
														"type": ""
													}
												],
												"src": "7766:680:7"
											},
											{
												"body": {
													"nativeSrc": "8500:79:7",
													"nodeType": "YulBlock",
													"src": "8500:79:7",
													"statements": [
														{
															"nativeSrc": "8510:17:7",
															"nodeType": "YulAssignment",
															"src": "8510:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8522:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8522:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8525:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8525:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8518:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8518:3:7"
																},
																"nativeSrc": "8518:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8518:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8510:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8510:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8551:22:7",
																"nodeType": "YulBlock",
																"src": "8551:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8553:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8553:16:7"
																			},
																			"nativeSrc": "8553:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8553:18:7"
																		},
																		"nativeSrc": "8553:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8553:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8542:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8542:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8548:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8548:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8539:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8539:2:7"
																},
																"nativeSrc": "8539:11:7",
																"nodeType": "YulFunctionCall",
																"src": "8539:11:7"
															},
															"nativeSrc": "8536:37:7",
															"nodeType": "YulIf",
															"src": "8536:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8451:128:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8482:1:7",
														"nodeType": "YulTypedName",
														"src": "8482:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8485:1:7",
														"nodeType": "YulTypedName",
														"src": "8485:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8491:4:7",
														"nodeType": "YulTypedName",
														"src": "8491:4:7",
														"type": ""
													}
												],
												"src": "8451:128:7"
											},
											{
												"body": {
													"nativeSrc": "8775:14:7",
													"nodeType": "YulBlock",
													"src": "8775:14:7",
													"statements": [
														{
															"nativeSrc": "8777:10:7",
															"nodeType": "YulAssignment",
															"src": "8777:10:7",
															"value": {
																"name": "pos",
																"nativeSrc": "8784:3:7",
																"nodeType": "YulIdentifier",
																"src": "8784:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8777:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8777:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "8584:205:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8759:3:7",
														"nodeType": "YulTypedName",
														"src": "8759:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8767:3:7",
														"nodeType": "YulTypedName",
														"src": "8767:3:7",
														"type": ""
													}
												],
												"src": "8584:205:7"
											},
											{
												"body": {
													"nativeSrc": "8968:163:7",
													"nodeType": "YulBlock",
													"src": "8968:163:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8985:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8985:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8996:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8996:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8978:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8978:6:7"
																},
																"nativeSrc": "8978:21:7",
																"nodeType": "YulFunctionCall",
																"src": "8978:21:7"
															},
															"nativeSrc": "8978:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "8978:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9019:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9019:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9030:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9030:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9015:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9015:3:7"
																		},
																		"nativeSrc": "9015:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9015:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9035:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9035:2:7",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9008:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9008:6:7"
																},
																"nativeSrc": "9008:30:7",
																"nodeType": "YulFunctionCall",
																"src": "9008:30:7"
															},
															"nativeSrc": "9008:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "9008:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9058:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9058:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9069:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9069:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9054:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9054:3:7"
																		},
																		"nativeSrc": "9054:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9054:18:7"
																	},
																	{
																		"hexValue": "526566756e64206661696c6564",
																		"kind": "string",
																		"nativeSrc": "9074:15:7",
																		"nodeType": "YulLiteral",
																		"src": "9074:15:7",
																		"type": "",
																		"value": "Refund failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9047:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9047:6:7"
																},
																"nativeSrc": "9047:43:7",
																"nodeType": "YulFunctionCall",
																"src": "9047:43:7"
															},
															"nativeSrc": "9047:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "9047:43:7"
														},
														{
															"nativeSrc": "9099:26:7",
															"nodeType": "YulAssignment",
															"src": "9099:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9111:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9111:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9122:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9122:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9107:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9107:3:7"
																},
																"nativeSrc": "9107:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9107:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9099:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9099:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8794:337:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8945:9:7",
														"nodeType": "YulTypedName",
														"src": "8945:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8959:4:7",
														"nodeType": "YulTypedName",
														"src": "8959:4:7",
														"type": ""
													}
												],
												"src": "8794:337:7"
											},
											{
												"body": {
													"nativeSrc": "9310:170:7",
													"nodeType": "YulBlock",
													"src": "9310:170:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9327:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9327:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9338:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9338:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9320:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9320:6:7"
																},
																"nativeSrc": "9320:21:7",
																"nodeType": "YulFunctionCall",
																"src": "9320:21:7"
															},
															"nativeSrc": "9320:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "9320:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9361:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9361:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9372:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9372:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9357:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9357:3:7"
																		},
																		"nativeSrc": "9357:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9357:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9377:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9377:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9350:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9350:6:7"
																},
																"nativeSrc": "9350:30:7",
																"nodeType": "YulFunctionCall",
																"src": "9350:30:7"
															},
															"nativeSrc": "9350:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "9350:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9400:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9400:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9411:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9411:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9396:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9396:3:7"
																		},
																		"nativeSrc": "9396:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9396:18:7"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "9416:22:7",
																		"nodeType": "YulLiteral",
																		"src": "9416:22:7",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9389:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9389:6:7"
																},
																"nativeSrc": "9389:50:7",
																"nodeType": "YulFunctionCall",
																"src": "9389:50:7"
															},
															"nativeSrc": "9389:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "9389:50:7"
														},
														{
															"nativeSrc": "9448:26:7",
															"nodeType": "YulAssignment",
															"src": "9448:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9460:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9460:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9471:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9471:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9456:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9456:3:7"
																},
																"nativeSrc": "9456:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9456:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9448:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9448:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9136:344:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9287:9:7",
														"nodeType": "YulTypedName",
														"src": "9287:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9301:4:7",
														"nodeType": "YulTypedName",
														"src": "9301:4:7",
														"type": ""
													}
												],
												"src": "9136:344:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_399aaf7f4daf27dd91b93a997a9fe9880d262fa5c6e087f0fedfe596870eef95__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Direct ETH transfers not allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_uint32(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint32(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_array$_t_uint32_$dyn_calldata_ptrt_uint32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, shl(5, length)), 0x20), dataEnd) { revert(0, 0) }\n        value0 := add(_1, 0x20)\n        value1 := length\n        value2 := abi_decode_uint32(add(headStart, 0x20))\n    }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_296c31b8d75dcbb151b5b7b7df75fae073a14e0dff11ea168e3e7c6fa83de361__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Minimum must be > 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8b1731c71736a845ad3041fdec37ddb41deee5212938764b403c4acee99e6a45__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"No tokens provided\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_24bddfde50391b9c9f52e9161fdb92836f1da21891ff53d457ef97ee9e32327d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Burn the required token amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient payment\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Not token owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8b2e460ec12bad3db599997f4ef354a4c31ee38cb51f196f6c072efc7afa3095__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Token already burned\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_abee60a9266ba180a9a15fddac68e515f5c78c8ee3804b19f9c01b0dfcbad70c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Token already updated\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_f6f4cde9a6ae098de50dff215f37676e659bec035067467783e3012b7ecab905__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"updateId cannot be among tokenId\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint32(value) -> ret\n    {\n        let value_1 := and(value, 0xffffffff)\n        if eq(value_1, 0xffffffff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function abi_encode_tuple_t_array$_t_uint32_$dyn_calldata_ptr_t_uint256__to_t_array$_t_uint32_$dyn_memory_ptr_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 64)\n        mstore(headStart, 64)\n        let pos := tail_1\n        mstore(tail_1, value1)\n        pos := add(headStart, 96)\n        let srcPtr := value0\n        let i := 0\n        for { } lt(i, value1) { i := add(i, 1) }\n        {\n            mstore(pos, and(abi_decode_uint32(srcPtr), 0xffffffff))\n            pos := add(pos, 0x20)\n            srcPtr := add(srcPtr, 0x20)\n        }\n        tail := pos\n        mstore(add(headStart, 0x20), value2)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Refund failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"663": [
									{
										"length": 32,
										"start": 834
									},
									{
										"length": 32,
										"start": 2187
									},
									{
										"length": 32,
										"start": 3056
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x108 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F9FB98A GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xAA4B10D1 GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xAA4B10D1 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xC3D93ECD EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xD4E0ED2E EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0xD56D229D EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x364 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2AF JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x41989BEF GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0x41989BEF EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x486A7E6B EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x4BF2C7C9 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x576AEE51 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x25E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x1DEEDFB5 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x1DF8473D EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x24600FC3 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1C7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST CALLDATASIZE PUSH2 0x15A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44697265637420455448207472616E7366657273206E6F7420616C6C6F776564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x169 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0xF5D JUMP JUMPDEST PUSH2 0x383 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x19E PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0xF9D JUMP JUMPDEST PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x430 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x443 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB6 JUMP JUMPDEST PUSH2 0x453 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x208 SWAP1 PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x226 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0x1035 JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH8 0xDE0B6B3A7640000 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x19E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP SELFBALANCE PUSH2 0x250 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x505 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x516 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x250 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x19E PUSH2 0x30D CALLDATASIZE PUSH1 0x4 PUSH2 0xF9D JUMP JUMPDEST PUSH2 0x526 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x1035 JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C7 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x1060 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH2 0x38B PUSH2 0x5B8 JUMP JUMPDEST PUSH0 DUP2 PUSH2 0xFFFF AND GT PUSH2 0x3D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4D696E696D756D206D757374206265203E203 PUSH1 0x6C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP2 PUSH4 0xFFFFFFFF AND DUP1 PUSH0 SUB PUSH2 0x414 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7ED98ED PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH4 0xFFFFFFFF AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x438 PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x441 SELFBALANCE PUSH2 0x5E4 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x44B PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x441 PUSH2 0x690 JUMP JUMPDEST PUSH2 0x45B PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0x463 PUSH2 0x73B JUMP JUMPDEST PUSH2 0x46E DUP4 DUP4 DUP4 PUSH2 0x781 JUMP JUMPDEST PUSH2 0x479 DUP4 DUP4 DUP4 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0x481 PUSH2 0xD2E JUMP JUMPDEST PUSH2 0x48A PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x497 PUSH2 0x5B8 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 GT ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BE70877 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x78F1461296BAD7BD716A7673AA3E659CC091C348A7ED4CFEF7CE452C3052F2FB SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x50D PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x441 PUSH0 PUSH2 0xDCE JUMP JUMPDEST PUSH2 0x51E PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x441 PUSH2 0xE1D JUMP JUMPDEST PUSH0 DUP2 PUSH4 0xFFFFFFFF AND DUP1 PUSH0 SUB PUSH2 0x54E JUMPI PUSH1 0x40 MLOAD PUSH4 0x7ED98ED PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH4 0xFFFFFFFF AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x572 PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x57B DUP2 PUSH2 0x5E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x586 PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5AF JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x57B DUP2 PUSH2 0xDCE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x5EC PUSH2 0x6E2 JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x5F8 JUMPI POP SELFBALANCE DUP2 GT JUMPDEST ISZERO PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67E3990D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x63A DUP2 PUSH2 0x62B PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0xE5A JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xEAFF4B37086828766AD3268786972C0CD24259D4C87A80F9D3963A3C3D999B0D DUP3 PUSH1 0x40 MLOAD PUSH2 0x67F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x57B PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x698 PUSH2 0xEEC JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x734 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST DUP2 PUSH4 0xFFFFFFFF DUP2 AND PUSH0 SUB PUSH2 0x7CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BC81D1BDAD95B9CC81C1C9BDD9A591959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xFFFF AND PUSH4 0xFFFFFFFF DUP3 AND EQ PUSH2 0x827 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4275726E2074686520726571756972656420746F6B656E20616D6F756E740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x3 SLOAD CALLVALUE LT ISZERO PUSH2 0x870 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9CDD59999A58DA595B9D081C185E5B595B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8DC JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x900 SWAP2 SWAP1 PUSH2 0x107B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x948 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2737BA103A37B5B2B71037BBB732B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x9A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88185B1C9958591E48189D5C9B9959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B88185B1C9958591E481D5C19185D1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0xBC7 JUMPI PUSH0 DUP7 DUP7 DUP4 PUSH4 0xFFFFFFFF AND DUP2 DUP2 LT PUSH2 0xA30 JUMPI PUSH2 0xA30 PUSH2 0x1096 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA45 SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST SWAP1 POP DUP5 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND SUB PUSH2 0xAAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x75706461746549642063616E6E6F7420626520616D6F6E6720746F6B656E4964 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x151 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88185B1C9958591E48189D5C9B9959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB52 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB76 SWAP2 SWAP1 PUSH2 0x107B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2737BA103A37B5B2B71037BBB732B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xA03 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x0 SWAP1 JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND DUP5 GT ISZERO PUSH2 0xCD9 JUMPI PUSH0 DUP6 DUP6 DUP4 PUSH4 0xFFFFFFFF AND DUP2 DUP2 LT PUSH2 0xC38 JUMPI PUSH2 0xC38 PUSH2 0x1096 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xC4D SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x42966C68 SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCAF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCC1 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP DUP1 DUP1 PUSH2 0xCD1 SWAP1 PUSH2 0x10BE JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC11 JUMP JUMPDEST POP DUP2 PUSH4 0xFFFFFFFF AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x26CCC16F7FCB4F9C2582BCBA8E2AA8BFC16139AD280D11913CCFB99777825EE0 DUP7 DUP7 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH2 0xD20 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD CALLVALUE PUSH2 0xD3D SWAP2 SWAP1 PUSH2 0x1132 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x57B JUMPI PUSH1 0x40 MLOAD PUSH0 SWAP1 CALLER SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xD84 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xDCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1499599D5B990819985A5B1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xE25 PUSH2 0x73B JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x6C5 CALLER SWAP1 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0xE84 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCF479181 PUSH1 0xE0 SHL DUP2 MSTORE SELFBALANCE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x151 JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xECE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xEE6 JUMPI PUSH2 0xEE6 DUP2 PUSH2 0xF35 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xF44 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF6D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0xF7E JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xF98 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFAD JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xF7E DUP3 PUSH2 0xF85 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFC8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFDE JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0xFEE JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1004 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x1018 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 SWAP2 DUP3 ADD SWAP5 POP SWAP3 POP PUSH2 0x102C SWAP1 DUP6 ADD PUSH2 0xF85 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1045 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x57B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1070 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF7E DUP2 PUSH2 0x104C JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x108B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF7E DUP2 PUSH2 0x104C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND PUSH4 0xFFFFFFFF DUP2 SUB PUSH2 0x10D9 JUMPI PUSH2 0x10D9 PUSH2 0x10AA JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP5 PUSH1 0x60 DUP4 ADD DUP3 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x111F JUMPI PUSH4 0xFFFFFFFF PUSH2 0x110A DUP5 PUSH2 0xF85 JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x10F4 JUMP JUMPDEST POP PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1145 JUMPI PUSH2 0x1145 PUSH2 0x10AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF REVERT 0xD9 PUSH22 0xC57C432A97826F176D931698D65C25556E1A1A6BA659 LOG2 GASPRICE 0x4D TIMESTAMP PUSH22 0x8564736F6C634300081C003300000000000000000000 ",
							"sourceMap": "631:5001:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5579:42;;-1:-1:-1;;;5579:42:6;;216:2:7;5579:42:6;;;198:21:7;;;235:18;;;228:30;294:34;274:18;;;267:62;346:18;;5579:42:6;;;;;;;;631:5001;;;;3762:148;;;;;;;;;;-1:-1:-1;3762:148:6;;;;;:::i;:::-;;:::i;:::-;;4105:181;;;;;;;;;;-1:-1:-1;4105:181:6;;;;;:::i;:::-;;:::i;:::-;;;1174:14:7;;1167:22;1149:41;;1137:2;1122:18;4105:181:6;;;;;;;;4815:100;;;;;;;;;;;;;:::i;5110:67::-;;;;;;;;;;;;;:::i;1800:275::-;;;;;;:::i;:::-;;:::i;823:29::-;;;;;;;;;;-1:-1:-1;823:29:6;;;;;;;;;;;2067:6:7;2055:19;;;2037:38;;2025:2;2010:18;823:29:6;1893:188:7;4294:249:6;;;;;;;;;;-1:-1:-1;4294:249:6;;;;;:::i;:::-;;:::i;5401:95::-;;;;;;;;;;-1:-1:-1;1006:7:6;5401:95;;;2417:25:7;;;2405:2;2390:18;5401:95:6;2271:177:7;1615:84:1;;;;;;;;;;-1:-1:-1;1685:7:1;;;;1615:84;;5185:109:6;;;;;;;;;;-1:-1:-1;5265:21:6;5185:109;;2293:101:0;;;;;;;;;;;;;:::i;5039:63:6:-;;;;;;;;;;;;;:::i;1638:85:0:-;;;;;;;;;;-1:-1:-1;1684:7:0;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;2617:32:7;;;2599:51;;2587:2;2572:18;1638:85:0;2453:203:7;5302:87:6;;;;;;;;;;-1:-1:-1;5374:7:6;;5302:87;;3918:179;;;;;;;;;;-1:-1:-1;3918:179:6;;;;;:::i;:::-;;:::i;4923:108::-;;;;;;;;;;-1:-1:-1;4923:108:6;;;;;:::i;:::-;;:::i;739:36::-;;;;;;;;;;;;;;;2543:215:0;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;3762:148:6:-;1531:13:0;:11;:13::i;:::-;3847:1:6::1;3838:6;:10;;;3830:42;;;::::0;-1:-1:-1;;;3830:42:6;;3251:2:7;3830:42:6::1;::::0;::::1;3233:21:7::0;3290:2;3270:18;;;3263:30;-1:-1:-1;;;3309:18:7;;;3302:49;3368:18;;3830:42:6::1;3049:343:7::0;3830:42:6::1;3883:10;:19:::0;;-1:-1:-1;;3883:19:6::1;;::::0;;;::::1;::::0;;;::::1;::::0;;3762:148::o;4105:181::-;4230:4;4202:7;1508:111;;1562:7;1573:1;1562:12;1558:41;;1583:16;;-1:-1:-1;;;1583:16:6;;;;;;;;;;;1558:41;-1:-1:-1;;4260:18:6::1;;;::::0;;;:9:::1;:18;::::0;;;;;::::1;;::::0;4105:181::o;4815:100::-;1531:13:0;:11;:13::i;:::-;4870:37:6::1;4885:21;4870:14;:37::i;:::-;4815:100::o:0;5110:67::-;1531:13:0;:11;:13::i;:::-;5159:10:6::1;:8;:10::i;1800:275::-:0;2261:21:2;:19;:21::i;:::-;1239:19:1::1;:17;:19::i;:::-;1964:34:6::2;1979:8;;1989;1964:14;:34::i;:::-;2009:32;2022:8;;2032;2009:12;:32::i;:::-;2052:15;:13;:15::i;:::-;2303:20:2::0;1716:1;2809:22;;2629:209;2303:20;1800:275:6;;;:::o;4294:249::-;1531:13:0;:11;:13::i;:::-;1006:7:6::1;4365;:22;4361:54;;;4396:19;;-1:-1:-1::0;;;4396:19:6::1;;;;;;;;;;;4361:54;4453:7;::::0;;4471:17;;;;4504:31:::1;::::0;;3571:25:7;;;3627:2;3612:18;;3605:34;;;4504:31:6::1;::::0;3544:18:7;4504:31:6::1;;;;;;;4350:193;4294:249:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;5039:63:6:-:0;1531:13:0;:11;:13::i;:::-;5086:8:6::1;:6;:8::i;3918:179::-:0;4042:4;4014:7;1508:111;;1562:7;1573:1;1562:12;1558:41;;1583:16;;-1:-1:-1;;;1583:16:6;;;;;;;;;;;1558:41;-1:-1:-1;;4072:17:6::1;;;::::0;;;:8:::1;:17;::::0;;;;;::::1;;::::0;3918:179::o;4923:108::-;1531:13:0;:11;:13::i;:::-;5000:23:6::1;5015:7;5000:14;:23::i;:::-;4923:108:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2599:51:7::0;2572:18;;2672:31:0::1;2453:203:7::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;1796:162::-:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:4;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:4;1901:40:0;;;2599:51:7;2572:18;;1901:40:0;2453:203:7;4551:256:6;2261:21:2;:19;:21::i;:::-;4628:12:6;;;:47:::1;;;4654:21;4644:7;:31;4628:47;4624:79;;;4684:19;;-1:-1:-1::0;;;4684:19:6::1;;;;;;;;;;;4624:79;4716:35;4743:7;4724;1684::0::0;1710:6;-1:-1:-1;;;;;1710:6:0;;1638:85;4724:7:6::1;-1:-1:-1::0;;;;;4716:26:6::1;::::0;::::1;:35::i;:::-;1684:7:0::0;1710:6;-1:-1:-1;;;;;1710:6:0;-1:-1:-1;;;;;4767:32:6::1;;4791:7;4767:32;;;;2417:25:7::0;;2405:2;2390:18;;2271:177;4767:32:6::1;;;;;;;;2303:20:2::0;1716:1;2809:22;;2629:209;2433:117:1;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;2491:15:1::1;::::0;;2521:22:::1;735:10:4::0;2530:12:1::1;2521:22;::::0;-1:-1:-1;;;;;2617:32:7;;;2599:51;;2587:2;2572:18;2521:22:1::1;;;;;;;2433:117::o:0;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:2;;3852:2:7;2460:63:2;;;3834:21:7;3891:2;3871:18;;;3864:30;3930:33;3910:18;;;3903:61;3981:18;;2460:63:2;3650:355:7;2460:63:2;1759:1;2598:7;:18;2336:287::o;1767:106:1:-;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:1;;4212:2:7;1828:38:1;;;4194:21:7;4251:2;4231:18;;;4224:30;-1:-1:-1;;;4270:18:7;;;4263:46;4326:18;;1828:38:1;4010:340:7;2083:965:6;2203:8;2234:15;;;2176:17;2234:15;2230:49;;2251:28;;-1:-1:-1;;;2251:28:6;;4557:2:7;2251:28:6;;;4539:21:7;4596:2;4576:18;;;4569:30;-1:-1:-1;;;4615:18:7;;;4608:48;4673:18;;2251:28:6;4355:342:7;2230:49:6;2308:10;;;;2294:24;;;;2290:70;;2320:40;;-1:-1:-1;;;2320:40:6;;4904:2:7;2320:40:6;;;4886:21:7;4943:2;4923:18;;;4916:30;4982:32;4962:18;;;4955:60;5032:18;;2320:40:6;4702:354:7;2290:70:6;2389:7;;2377:9;:19;2373:55;;;2398:30;;-1:-1:-1;;;2398:30:6;;5263:2:7;2398:30:6;;;5245:21:7;5302:2;5282:18;;;5275:30;-1:-1:-1;;;5321:18:7;;;5314:50;5381:18;;2398:30:6;5061:344:7;2373:55:6;2508:21;;-1:-1:-1;;;2508:21:6;;5585:10:7;5573:23;;2508:21:6;;;5555:42:7;2479:11:6;;2533:10;;-1:-1:-1;;;;;2508:11:6;;;;;5528:18:7;;2508:21:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2508:35:6;;2504:66;;2545:25;;-1:-1:-1;;;2545:25:6;;6066:2:7;2545:25:6;;;6048:21:7;6105:2;6085:18;;;6078:30;-1:-1:-1;;;6124:18:7;;;6117:45;6179:18;;2545:25:6;5864:339:7;2504:66:6;2585:18;;;;;;;:8;:18;;;;;;;;2581:54;;;2605:30;;-1:-1:-1;;;2605:30:6;;6410:2:7;2605:30:6;;;6392:21:7;6449:2;6429:18;;;6422:30;-1:-1:-1;;;6468:18:7;;;6461:50;6528:18;;2605:30:6;6208:344:7;2581:54:6;2650:19;;;;;;;:9;:19;;;;;;;;2646:56;;;2671:31;;-1:-1:-1;;;2671:31:6;;6759:2:7;2671:31:6;;;6741:21:7;6798:2;6778:18;;;6771:30;-1:-1:-1;;;6817:18:7;;;6810:51;6878:18;;2671:31:6;6557:345:7;2646:56:6;2720:8;2715:326;2738:10;2734:14;;:1;:14;;;2715:326;;;2770:14;2787:8;;2796:1;2787:11;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;2770:28;;2828:8;2817:19;;:7;:19;;;2813:68;;2838:43;;-1:-1:-1;;;2838:43:6;;7241:2:7;2838:43:6;;;7223:21:7;7280:2;7260:18;;;7253:30;7319:34;7299:18;;;7292:62;-1:-1:-1;;;7370:18:7;;;7363:31;7411:19;;2838:43:6;7039:397:7;2813:68:6;2900:17;;;;;;;:8;:17;;;;;;;;2896:53;;;2919:30;;-1:-1:-1;;;2919:30:6;;6410:2:7;2919:30:6;;;6392:21:7;6449:2;6429:18;;;6422:30;-1:-1:-1;;;6468:18:7;;;6461:50;6528:18;;2919:30:6;6208:344:7;2896:53:6;2968:20;;-1:-1:-1;;;2968:20:6;;5585:10:7;5573:23;;2968:20:6;;;5555:42:7;2992:10:6;;-1:-1:-1;;;;;2968:11:6;;;;;5528:18:7;;2968:20:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2968:34:6;;2964:65;;3004:25;;-1:-1:-1;;;3004:25:6;;6066:2:7;3004:25:6;;;6048:21:7;6105:2;6085:18;;;6078:30;-1:-1:-1;;;6124:18:7;;;6117:45;6179:18;;3004:25:6;5864:339:7;2964:65:6;-1:-1:-1;2750:3:6;;2715:326;;;;2165:883;;2083:965;;;:::o;3056:435::-;3205:19;;;3142;3205;;;:9;:19;;;;;:26;;-1:-1:-1;;3205:26:6;3227:4;3205:26;;;3180:11;;3242:171;3261:19;;;;-1:-1:-1;3242:171:6;;;3302:14;3319:8;;3328:1;3319:11;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;3345:17;;;;;;;:8;:17;;;;;;;:24;;-1:-1:-1;;3345:24:6;3365:4;3345:24;;;3384:17;-1:-1:-1;;;3384:17:6;;;;;5555:42:7;;;;3345:17:6;;-1:-1:-1;;;;;;3384:8:6;;;;;5528:18:7;;3384:17:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3287:126;3282:3;;;;;:::i;:::-;;;;3242:171;;;;3474:8;3430:53;;3443:10;-1:-1:-1;;;;;3430:53:6;;3455:8;;3465:7;;3430:53;;;;;;;;:::i;:::-;;;;;;;;3131:360;3056:435;;;:::o;3499:255::-;3543:14;3572:7;;3560:9;:19;;;;:::i;:::-;3543:36;-1:-1:-1;3594:10:6;;3590:157;;3640:43;;3622:12;;3648:10;;3672:6;;3622:12;3640:43;3622:12;3640:43;3672:6;3648:10;3640:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3621:62;;;3703:7;3698:37;;3712:23;;-1:-1:-1;;;3712:23:6;;8996:2:7;3712:23:6;;;8978:21:7;9035:2;9015:18;;;9008:30;-1:-1:-1;;;9054:18:7;;;9047:43;9107:18;;3712:23:6;8794:337:7;3698:37:6;3606:141;3532:222;3499:255::o;2912:187:0:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;2186:115:1:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:1::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;735:10:4::0;;656:96;1290:365:3;1399:6;1375:21;:30;1371:125;;;1428:57;;-1:-1:-1;;;1428:57:3;;1455:21;1428:57;;;3571:25:7;3612:18;;;3605:34;;;3544:18;;1428:57:3;3397:248:7;1371:125:3;1507:12;1521:23;1548:9;-1:-1:-1;;;;;1548:14:3;1570:6;1548:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1506:75;;;;1596:7;1591:58;;1619:19;1627:10;1619:7;:19::i;:::-;1361:294;;1290:365;;:::o;1945:106:1:-;1685:7;;;;2003:41;;;;-1:-1:-1;;;2003:41:1;;9338:2:7;2003:41:1;;;9320:21:7;9377:2;9357:18;;;9350:30;-1:-1:-1;;;9396:18:7;;;9389:50;9456:18;;2003:41:1;9136:344:7;5559:434:3;5690:17;;:21;5686:301;;5894:10;5888:17;5881:4;5869:10;5865:21;5858:48;5686:301;5957:19;;-1:-1:-1;;;5957:19:3;;;;;;;;;;;375:272:7;433:6;486:2;474:9;465:7;461:23;457:32;454:52;;;502:1;499;492:12;454:52;541:9;528:23;591:6;584:5;580:18;573:5;570:29;560:57;;613:1;610;603:12;560:57;636:5;375:272;-1:-1:-1;;;375:272:7:o;652:163::-;719:20;;779:10;768:22;;758:33;;748:61;;805:1;802;795:12;748:61;652:163;;;:::o;820:184::-;878:6;931:2;919:9;910:7;906:23;902:32;899:52;;;947:1;944;937:12;899:52;970:28;988:9;970:28;:::i;1201:687::-;1294:6;1302;1310;1363:2;1351:9;1342:7;1338:23;1334:32;1331:52;;;1379:1;1376;1369:12;1331:52;1419:9;1406:23;1452:18;1444:6;1441:30;1438:50;;;1484:1;1481;1474:12;1438:50;1507:22;;1560:4;1552:13;;1548:27;-1:-1:-1;1538:55:7;;1589:1;1586;1579:12;1538:55;1629:2;1616:16;1655:18;1647:6;1644:30;1641:50;;;1687:1;1684;1677:12;1641:50;1742:7;1735:4;1725:6;1722:1;1718:14;1714:2;1710:23;1706:34;1703:47;1700:67;;;1763:1;1760;1753:12;1700:67;1794:4;1786:13;;;;-1:-1:-1;1818:6:7;-1:-1:-1;1843:39:7;;1861:20;;1843:39;:::i;:::-;1833:49;;1201:687;;;;;:::o;2086:180::-;2145:6;2198:2;2186:9;2177:7;2173:23;2169:32;2166:52;;;2214:1;2211;2204:12;2166:52;-1:-1:-1;2237:23:7;;2086:180;-1:-1:-1;2086:180:7:o;2661:131::-;-1:-1:-1;;;;;2736:31:7;;2726:42;;2716:70;;2782:1;2779;2772:12;2797:247;2856:6;2909:2;2897:9;2888:7;2884:23;2880:32;2877:52;;;2925:1;2922;2915:12;2877:52;2964:9;2951:23;2983:31;3008:5;2983:31;:::i;5608:251::-;5678:6;5731:2;5719:9;5710:7;5706:23;5702:32;5699:52;;;5747:1;5744;5737:12;5699:52;5779:9;5773:16;5798:31;5823:5;5798:31;:::i;6907:127::-;6968:10;6963:3;6959:20;6956:1;6949:31;6999:4;6996:1;6989:15;7023:4;7020:1;7013:15;7441:127;7502:10;7497:3;7493:20;7490:1;7483:31;7533:4;7530:1;7523:15;7557:4;7554:1;7547:15;7573:188;7611:3;7655:10;7648:5;7644:22;7690:10;7681:7;7678:23;7675:49;;7704:18;;:::i;:::-;7753:1;7740:15;;7573:188;-1:-1:-1;;7573:188:7:o;7766:680::-;7992:2;8004:21;;;7977:18;;8060:22;;;7944:4;8139:6;8113:2;8098:18;;7944:4;8173:202;8187:6;8184:1;8181:13;8173:202;;;8279:10;8252:25;8270:6;8252:25;:::i;:::-;8248:42;8236:55;;8320:4;8348:17;;;;8311:14;;;;8209:1;8202:9;8173:202;;;-1:-1:-1;8426:4:7;8411:20;;;;8404:36;;;;-1:-1:-1;8392:3:7;7766:680;-1:-1:-1;;;7766:680:7:o;8451:128::-;8518:9;;;8539:11;;;8536:37;;;8553:18;;:::i;:::-;8451:128;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "896200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"burnAmount()": "2357",
								"createPremium(uint32[],uint32)": "infinite",
								"getBurnFee()": "2313",
								"getContractBalance()": "216",
								"getMaxBurnFee()": "269",
								"isTokenBurned(uint32)": "2604",
								"isUpdatedToken(uint32)": "2606",
								"nftContract()": "infinite",
								"owner()": "2407",
								"pause()": "infinite",
								"paused()": "2403",
								"renounceOwnership()": "infinite",
								"setBurnAmount(uint16)": "26713",
								"setBurnFee(uint256)": "28028",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite",
								"withdrawFunds()": "infinite",
								"withdrawPartialFunds(uint256)": "infinite"
							},
							"internal": {
								"_processBurn(uint32[] calldata,uint32)": "infinite",
								"_refundExcess()": "infinite",
								"_validateInput(uint32[] calldata,uint32)": "infinite",
								"_withdrawFunds(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 631,
									"end": 5632,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 631,
									"end": 5632,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 631,
									"end": 5632,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 808,
									"end": 816,
									"name": "PUSH",
									"source": 6,
									"value": "5F5E100"
								},
								{
									"begin": 782,
									"end": 816,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 782,
									"end": 816,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 823,
									"end": 852,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 852,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 823,
									"end": 852,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 823,
									"end": 852,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 850,
									"end": 852,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 823,
									"end": 852,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 823,
									"end": 852,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 823,
									"end": 852,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1627,
									"end": 1792,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1627,
									"end": 1792,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1669,
									"end": 1679,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1669,
									"end": 1679,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 455,
									"end": 506,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 428,
									"end": 446,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 428,
									"end": 446,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1696,
									"end": 1722,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1696,
									"end": 1722,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1692,
									"end": 1747,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1692,
									"end": 1747,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1731,
									"end": 1747,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1731,
									"end": 1747,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "7ED98ED"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1731,
									"end": 1747,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1731,
									"end": 1747,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1731,
									"end": 1747,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1731,
									"end": 1747,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1731,
									"end": 1747,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1731,
									"end": 1747,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1731,
									"end": 1747,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1731,
									"end": 1747,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1731,
									"end": 1747,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1731,
									"end": 1747,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1731,
									"end": 1747,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1692,
									"end": 1747,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1692,
									"end": 1747,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1758,
									"end": 1784,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1758,
									"end": 1784,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1758,
									"end": 1784,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 631,
									"end": 5632,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 631,
									"end": 5632,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 309,
									"end": 512,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 309,
									"end": 512,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 631,
									"end": 5632,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 631,
									"end": 5632,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 631,
									"end": 5632,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 631,
									"end": 5632,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 631,
									"end": 5632,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 631,
									"end": 5632,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 631,
									"end": 5632,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 631,
									"end": 5632,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "663"
								},
								{
									"begin": 631,
									"end": 5632,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 631,
									"end": 5632,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 631,
									"end": 5632,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220affdd975c57c432a97826f176d931698d65c25556e1a1a6ba659a23a4d42758564736f6c634300081c0033",
									".code": [
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "6F9FB98A"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "AA4B10D1"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "AA4B10D1"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "C3D93ECD"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "D4E0ED2E"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "D56D229D"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "6F9FB98A"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "8456CB59"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "41989BEF"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "41989BEF"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "486A7E6B"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "4BF2C7C9"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "576AEE51"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "5C975ABB"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "1DEEDFB5"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "1DF8473D"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "24600FC3"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "3F4BA83A"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5621,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5579,
											"end": 5621,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5579,
											"end": 5621,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5621,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 216,
											"end": 218,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5579,
											"end": 5621,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5579,
											"end": 5621,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5621,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 198,
											"end": 219,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 198,
											"end": 219,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 198,
											"end": 219,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 235,
											"end": 253,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 235,
											"end": 253,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 228,
											"end": 258,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 294,
											"end": 328,
											"name": "PUSH",
											"source": 7,
											"value": "44697265637420455448207472616E7366657273206E6F7420616C6C6F776564"
										},
										{
											"begin": 274,
											"end": 292,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 274,
											"end": 292,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 274,
											"end": 292,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 267,
											"end": 329,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 346,
											"end": 364,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 346,
											"end": 364,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5579,
											"end": 5621,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5579,
											"end": 5621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5621,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5579,
											"end": 5621,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5621,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5621,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5621,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5621,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5621,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 5632,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3910,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3762,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3910,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3910,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3910,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3762,
											"end": 3910,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3910,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3910,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3910,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3910,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3762,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3762,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3762,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3762,
											"end": 3910,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3910,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3762,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3762,
											"end": 3910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3910,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3762,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3762,
											"end": 3910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3910,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3762,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3910,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 4105,
											"end": 4286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 4105,
											"end": 4286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1174,
											"end": 1188,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1188,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1167,
											"end": 1189,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1139,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1122,
											"end": 1140,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4815,
											"end": 4915,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4815,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4815,
											"end": 4915,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4815,
											"end": 4915,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4815,
											"end": 4915,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4815,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4815,
											"end": 4915,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4815,
											"end": 4915,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4815,
											"end": 4915,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4815,
											"end": 4915,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4815,
											"end": 4915,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4815,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4815,
											"end": 4915,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4815,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 4815,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4815,
											"end": 4915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5110,
											"end": 5177,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5110,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5110,
											"end": 5177,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5110,
											"end": 5177,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5110,
											"end": 5177,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5110,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 5110,
											"end": 5177,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5110,
											"end": 5177,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5110,
											"end": 5177,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5110,
											"end": 5177,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5110,
											"end": 5177,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 5110,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5110,
											"end": 5177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5110,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 5110,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 5110,
											"end": 5177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 2075,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1800,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1800,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1800,
											"end": 2075,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1800,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1800,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 2075,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1800,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1800,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 823,
											"end": 852,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 823,
											"end": 852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 823,
											"end": 852,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 823,
											"end": 852,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 823,
											"end": 852,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 823,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 823,
											"end": 852,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 823,
											"end": 852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 823,
											"end": 852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 823,
											"end": 852,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 823,
											"end": 852,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 823,
											"end": 852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 823,
											"end": 852,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 823,
											"end": 852,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 823,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 823,
											"end": 852,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 823,
											"end": 852,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 823,
											"end": 852,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 823,
											"end": 852,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 823,
											"end": 852,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 823,
											"end": 852,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 823,
											"end": 852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 823,
											"end": 852,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 823,
											"end": 852,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 2055,
											"end": 2074,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2074,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2074,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2037,
											"end": 2075,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2037,
											"end": 2075,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2025,
											"end": 2027,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2028,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 823,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1893,
											"end": 2081,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4543,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4294,
											"end": 4543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4294,
											"end": 4543,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4294,
											"end": 4543,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4294,
											"end": 4543,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4294,
											"end": 4543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4294,
											"end": 4543,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4294,
											"end": 4543,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4294,
											"end": 4543,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4294,
											"end": 4543,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4294,
											"end": 4543,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4294,
											"end": 4543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4294,
											"end": 4543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 4294,
											"end": 4543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 4294,
											"end": 4543,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4294,
											"end": 4543,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4294,
											"end": 4543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 4294,
											"end": 4543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4294,
											"end": 4543,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 4294,
											"end": 4543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4294,
											"end": 4543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 4294,
											"end": 4543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5401,
											"end": 5496,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 5401,
											"end": 5496,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5401,
											"end": 5496,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5401,
											"end": 5496,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5401,
											"end": 5496,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5401,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5401,
											"end": 5496,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5401,
											"end": 5496,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5401,
											"end": 5496,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5401,
											"end": 5496,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5401,
											"end": 5496,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5401,
											"end": 5496,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1006,
											"end": 1013,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5401,
											"end": 5496,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 5401,
											"end": 5496,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5401,
											"end": 5496,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5401,
											"end": 5496,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2417,
											"end": 2442,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2442,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2442,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2407,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5401,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2271,
											"end": 2448,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5185,
											"end": 5294,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 5185,
											"end": 5294,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5294,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5294,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5294,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5294,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5185,
											"end": 5294,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5294,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5185,
											"end": 5294,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5185,
											"end": 5294,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5294,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5185,
											"end": 5294,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5265,
											"end": 5286,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5294,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 5185,
											"end": 5294,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5039,
											"end": 5102,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 5039,
											"end": 5102,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5102,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5102,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5102,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 5039,
											"end": 5102,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5102,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5039,
											"end": 5102,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5039,
											"end": 5102,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5102,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 5039,
											"end": 5102,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5102,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 5039,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 5039,
											"end": 5102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2617,
											"end": 2649,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2617,
											"end": 2649,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2617,
											"end": 2649,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2650,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2650,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2587,
											"end": 2589,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2453,
											"end": 2656,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5302,
											"end": 5389,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 5302,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5389,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5389,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5302,
											"end": 5389,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5302,
											"end": 5389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5302,
											"end": 5389,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5389,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5302,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5374,
											"end": 5381,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5374,
											"end": 5381,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 5302,
											"end": 5389,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3918,
											"end": 4097,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 3918,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3918,
											"end": 4097,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3918,
											"end": 4097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3918,
											"end": 4097,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3918,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3918,
											"end": 4097,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3918,
											"end": 4097,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3918,
											"end": 4097,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3918,
											"end": 4097,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3918,
											"end": 4097,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3918,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3918,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 3918,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 3918,
											"end": 4097,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3918,
											"end": 4097,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3918,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3918,
											"end": 4097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3918,
											"end": 4097,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 3918,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3918,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3918,
											"end": 4097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5031,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 4923,
											"end": 5031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5031,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5031,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5031,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 4923,
											"end": 5031,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5031,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4923,
											"end": 5031,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4923,
											"end": 5031,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5031,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 4923,
											"end": 5031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4923,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 4923,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 4923,
											"end": 5031,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5031,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4923,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 4923,
											"end": 5031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5031,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 4923,
											"end": 5031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 4923,
											"end": 5031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 739,
											"end": 775,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 739,
											"end": 775,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 739,
											"end": 775,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 739,
											"end": 775,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 739,
											"end": 775,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 739,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 739,
											"end": 775,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 739,
											"end": 775,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 775,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 775,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 739,
											"end": 775,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 739,
											"end": 775,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 739,
											"end": 775,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 739,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 739,
											"end": 775,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "663"
										},
										{
											"begin": 739,
											"end": 775,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 739,
											"end": 775,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3910,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3762,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3838,
											"end": 3844,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3838,
											"end": 3848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 3838,
											"end": 3848,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3838,
											"end": 3848,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3830,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3830,
											"end": 3872,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3830,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3830,
											"end": 3872,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3830,
											"end": 3872,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3830,
											"end": 3872,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3251,
											"end": 3253,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3830,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3830,
											"end": 3872,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3830,
											"end": 3872,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3254,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3290,
											"end": 3292,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 3270,
											"end": 3288,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3270,
											"end": 3288,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3270,
											"end": 3288,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3263,
											"end": 3293,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D696E696D756D206D757374206265203E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3309,
											"end": 3327,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3309,
											"end": 3327,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3309,
											"end": 3327,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3302,
											"end": 3351,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3386,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3368,
											"end": 3386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3049,
											"end": 3392,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3872,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3830,
											"end": 3872,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3883,
											"end": 3902,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3902,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3883,
											"end": 3902,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 3883,
											"end": 3902,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3902,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3902,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3902,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3902,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3902,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3902,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3902,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3902,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3902,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 4105,
											"end": 4286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4234,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4209,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1508,
											"end": 1619,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1508,
											"end": 1619,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1562,
											"end": 1569,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1574,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1574,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1558,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1558,
											"end": 1599,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7ED98ED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1558,
											"end": 1599,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1558,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4260,
											"end": 4278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4260,
											"end": 4278,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4260,
											"end": 4278,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4278,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4278,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4269,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4260,
											"end": 4278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4260,
											"end": 4278,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4278,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4260,
											"end": 4278,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4278,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4278,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4260,
											"end": 4278,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4260,
											"end": 4278,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4815,
											"end": 4915,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4815,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4870,
											"end": 4907,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 4885,
											"end": 4906,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4870,
											"end": 4907,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4907,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 4870,
											"end": 4907,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4815,
											"end": 4915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5110,
											"end": 5177,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 5110,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 5159,
											"end": 5167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 5159,
											"end": 5169,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 2075,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1800,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 1998,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1979,
											"end": 1987,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 1987,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 1997,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1964,
											"end": 1978,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 1964,
											"end": 1998,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1964,
											"end": 1998,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1964,
											"end": 1998,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2009,
											"end": 2041,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 2022,
											"end": 2030,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2030,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2032,
											"end": 2040,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2009,
											"end": 2021,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2009,
											"end": 2041,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2009,
											"end": 2041,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 2009,
											"end": 2041,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2067,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2052,
											"end": 2065,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2052,
											"end": 2067,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2067,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2052,
											"end": 2067,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1800,
											"end": 2075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 2075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 2075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 2075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4294,
											"end": 4543,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 4294,
											"end": 4543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4365,
											"end": 4372,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4365,
											"end": 4387,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4361,
											"end": 4415,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4361,
											"end": 4415,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 4361,
											"end": 4415,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4396,
											"end": 4415,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BE70877"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4396,
											"end": 4415,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4415,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4396,
											"end": 4415,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4396,
											"end": 4415,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4415,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4415,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4415,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4415,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4415,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4361,
											"end": 4415,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 4361,
											"end": 4415,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4453,
											"end": 4460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4453,
											"end": 4460,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4453,
											"end": 4460,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4488,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4488,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4488,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4488,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4504,
											"end": 4535,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4535,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3596,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3596,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3596,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3627,
											"end": 3629,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3639,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3639,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3639,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "78F1461296BAD7BD716A7673AA3E659CC091C348A7ED4CFEF7CE452C3052F2FB"
										},
										{
											"begin": 4504,
											"end": 4535,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3562,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4504,
											"end": 4535,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4535,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4535,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4535,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4535,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4543,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4294,
											"end": 4543,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4294,
											"end": 4543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5039,
											"end": 5102,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 5039,
											"end": 5102,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5086,
											"end": 5094,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 5086,
											"end": 5092,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 5086,
											"end": 5094,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3918,
											"end": 4097,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3918,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4042,
											"end": 4046,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4014,
											"end": 4021,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1508,
											"end": 1619,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1508,
											"end": 1619,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1562,
											"end": 1569,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1574,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1574,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1558,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1558,
											"end": 1599,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7ED98ED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1558,
											"end": 1599,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1558,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4072,
											"end": 4089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4089,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4072,
											"end": 4089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4072,
											"end": 4089,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4072,
											"end": 4089,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4072,
											"end": 4080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4072,
											"end": 4089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4089,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4072,
											"end": 4089,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4072,
											"end": 4089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4072,
											"end": 4089,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4072,
											"end": 4089,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4072,
											"end": 4089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4072,
											"end": 4089,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4072,
											"end": 4089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3918,
											"end": 4097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5031,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 4923,
											"end": 5031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5000,
											"end": 5023,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 5015,
											"end": 5022,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5014,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 5000,
											"end": 5023,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5023,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 5000,
											"end": 5023,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2599,
											"end": 2650,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2572,
											"end": 2590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2572,
											"end": 2590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2453,
											"end": 2656,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2599,
											"end": 2650,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2572,
											"end": 2590,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2572,
											"end": 2590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2453,
											"end": 2656,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4551,
											"end": 4807,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4551,
											"end": 4807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4628,
											"end": 4640,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4628,
											"end": 4640,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4628,
											"end": 4640,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4628,
											"end": 4675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 4628,
											"end": 4675,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4628,
											"end": 4675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4654,
											"end": 4675,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4651,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4644,
											"end": 4675,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4628,
											"end": 4675,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 4628,
											"end": 4675,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4624,
											"end": 4703,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4624,
											"end": 4703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 4624,
											"end": 4703,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4684,
											"end": 4703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4684,
											"end": 4703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "67E3990D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4684,
											"end": 4703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4684,
											"end": 4703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4684,
											"end": 4703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4684,
											"end": 4703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4684,
											"end": 4703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4684,
											"end": 4703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4684,
											"end": 4703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4684,
											"end": 4703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4684,
											"end": 4703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4684,
											"end": 4703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4684,
											"end": 4703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4624,
											"end": 4703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 4624,
											"end": 4703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4716,
											"end": 4751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 4743,
											"end": 4750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4724,
											"end": 4731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4731,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 4724,
											"end": 4731,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4716,
											"end": 4742,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4716,
											"end": 4742,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4716,
											"end": 4742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 4716,
											"end": 4751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4716,
											"end": 4751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 4716,
											"end": 4751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4767,
											"end": 4799,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4767,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "EAFF4B37086828766AD3268786972C0CD24259D4C87A80F9D3963A3C3D999B0D"
										},
										{
											"begin": 4791,
											"end": 4798,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4767,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4767,
											"end": 4799,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4767,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 4767,
											"end": 4799,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2417,
											"end": 2442,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2442,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2407,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2408,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2448,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 4799,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 4767,
											"end": 4799,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4767,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4767,
											"end": 4799,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4767,
											"end": 4799,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4767,
											"end": 4799,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4767,
											"end": 4799,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4767,
											"end": 4799,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4767,
											"end": 4799,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2617,
											"end": 2649,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2617,
											"end": 2649,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2617,
											"end": 2649,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2650,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2650,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2587,
											"end": 2589,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3852,
											"end": 3854,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3834,
											"end": 3855,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3891,
											"end": 3893,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3864,
											"end": 3894,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3963,
											"name": "PUSH",
											"source": 7,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 3910,
											"end": 3928,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3910,
											"end": 3928,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3910,
											"end": 3928,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3903,
											"end": 3964,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 3999,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3981,
											"end": 3999,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3650,
											"end": 4005,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4214,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4194,
											"end": 4215,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4251,
											"end": 4253,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4224,
											"end": 4254,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4270,
											"end": 4288,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4270,
											"end": 4288,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4288,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4263,
											"end": 4309,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4326,
											"end": 4344,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4326,
											"end": 4344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4010,
											"end": 4350,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2083,
											"end": 3048,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 2083,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2203,
											"end": 2211,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2249,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2234,
											"end": 2249,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2249,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2176,
											"end": 2193,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2249,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2230,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2230,
											"end": 2279,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2251,
											"end": 2279,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2251,
											"end": 2279,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2251,
											"end": 2279,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2251,
											"end": 2279,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4557,
											"end": 4559,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2251,
											"end": 2279,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2251,
											"end": 2279,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2251,
											"end": 2279,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4539,
											"end": 4560,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4596,
											"end": 4598,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 4576,
											"end": 4594,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4576,
											"end": 4594,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4576,
											"end": 4594,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4569,
											"end": 4599,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81D1BDAD95B9CC81C1C9BDD9A591959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4615,
											"end": 4633,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4615,
											"end": 4633,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4615,
											"end": 4633,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4608,
											"end": 4656,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4673,
											"end": 4691,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4673,
											"end": 4691,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2251,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4355,
											"end": 4697,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2230,
											"end": 2279,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2230,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2318,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2308,
											"end": 2318,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2318,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 2308,
											"end": 2318,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2294,
											"end": 2318,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2294,
											"end": 2318,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2294,
											"end": 2318,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2294,
											"end": 2318,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2290,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2290,
											"end": 2360,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2360,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2360,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2320,
											"end": 2360,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2360,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4904,
											"end": 4906,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2320,
											"end": 2360,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2320,
											"end": 2360,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2360,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4886,
											"end": 4907,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4945,
											"name": "PUSH",
											"source": 7,
											"value": "1E"
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4946,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4982,
											"end": 5014,
											"name": "PUSH",
											"source": 7,
											"value": "4275726E2074686520726571756972656420746F6B656E20616D6F756E740000"
										},
										{
											"begin": 4962,
											"end": 4980,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4962,
											"end": 4980,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4962,
											"end": 4980,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4955,
											"end": 5015,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5032,
											"end": 5050,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5032,
											"end": 5050,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4702,
											"end": 5056,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2290,
											"end": 2360,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2290,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2389,
											"end": 2396,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2389,
											"end": 2396,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2386,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2396,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2428,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2373,
											"end": 2428,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2428,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2398,
											"end": 2428,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2398,
											"end": 2428,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2428,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5263,
											"end": 5265,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2398,
											"end": 2428,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2398,
											"end": 2428,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2428,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5245,
											"end": 5266,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5302,
											"end": 5304,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5305,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9CDD59999A58DA595B9D081C185E5B595B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5314,
											"end": 5364,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5381,
											"end": 5399,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5381,
											"end": 5399,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5061,
											"end": 5405,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2373,
											"end": 2428,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2373,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31A9108F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5585,
											"end": 5595,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5573,
											"end": 5596,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5573,
											"end": 5596,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5597,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2479,
											"end": 2490,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "663"
										},
										{
											"begin": 2479,
											"end": 2490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2533,
											"end": 2543,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2533,
											"end": 2543,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2508,
											"end": 2519,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2519,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2519,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2519,
											"name": "PUSH",
											"source": 6,
											"value": "6352211E"
										},
										{
											"begin": 2508,
											"end": 2519,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5546,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5528,
											"end": 5546,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2508,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 2508,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2508,
											"end": 2543,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2543,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 2504,
											"end": 2570,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2545,
											"end": 2570,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2570,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2545,
											"end": 2570,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2545,
											"end": 2570,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6066,
											"end": 6068,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2545,
											"end": 2570,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2545,
											"end": 2570,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2545,
											"end": 2570,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6069,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6107,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 6085,
											"end": 6103,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6085,
											"end": 6103,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6085,
											"end": 6103,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6078,
											"end": 6108,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA103A37B5B2B71037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6124,
											"end": 6142,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6124,
											"end": 6142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6124,
											"end": 6142,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6117,
											"end": 6162,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6179,
											"end": 6197,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6179,
											"end": 6197,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2545,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5864,
											"end": 6203,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2570,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 2504,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2585,
											"end": 2593,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2581,
											"end": 2635,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2581,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 2581,
											"end": 2635,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2635,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2605,
											"end": 2635,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2605,
											"end": 2635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2635,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6410,
											"end": 6412,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2605,
											"end": 2635,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2605,
											"end": 2635,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6392,
											"end": 6413,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6449,
											"end": 6451,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 6429,
											"end": 6447,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6429,
											"end": 6447,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6447,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6422,
											"end": 6452,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151BDAD95B88185B1C9958591E48189D5C9B9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6468,
											"end": 6486,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6468,
											"end": 6486,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6468,
											"end": 6486,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6461,
											"end": 6511,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6528,
											"end": 6546,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6528,
											"end": 6546,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2605,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 6208,
											"end": 6552,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2635,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 2581,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2669,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2650,
											"end": 2669,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2669,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2669,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2650,
											"end": 2669,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2669,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2669,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2659,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2650,
											"end": 2669,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2650,
											"end": 2669,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2669,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2650,
											"end": 2669,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2669,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2669,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2669,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2650,
											"end": 2669,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2702,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2702,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 2646,
											"end": 2702,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 2702,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2702,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2671,
											"end": 2702,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 2702,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6759,
											"end": 6761,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2702,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2671,
											"end": 2702,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 2702,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6741,
											"end": 6762,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6798,
											"end": 6800,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 6778,
											"end": 6796,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6778,
											"end": 6796,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6796,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6771,
											"end": 6801,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151BDAD95B88185B1C9958591E481D5C19185D1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6817,
											"end": 6835,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6817,
											"end": 6835,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6817,
											"end": 6835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6810,
											"end": 6861,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6878,
											"end": 6896,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6878,
											"end": 6896,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2671,
											"end": 2702,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 6557,
											"end": 6902,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2646,
											"end": 2702,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 2646,
											"end": 2702,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2720,
											"end": 2728,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2715,
											"end": 3041,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 2715,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2748,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2748,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2734,
											"end": 2748,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2748,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2734,
											"end": 2748,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2748,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2715,
											"end": 3041,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2715,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 2715,
											"end": 3041,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2784,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2787,
											"end": 2795,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2787,
											"end": 2795,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2797,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2787,
											"end": 2798,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2787,
											"end": 2798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2787,
											"end": 2798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2787,
											"end": 2798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2787,
											"end": 2798,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2787,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 2787,
											"end": 2798,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2787,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 2787,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 2787,
											"end": 2798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2787,
											"end": 2798,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 2787,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2787,
											"end": 2798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2787,
											"end": 2798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2787,
											"end": 2798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2787,
											"end": 2798,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2787,
											"end": 2798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2787,
											"end": 2798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2787,
											"end": 2798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2787,
											"end": 2798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2787,
											"end": 2798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2787,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 2787,
											"end": 2798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2787,
											"end": 2798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2787,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2787,
											"end": 2798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2787,
											"end": 2798,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 2787,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2828,
											"end": 2836,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2836,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2817,
											"end": 2836,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2824,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2836,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2817,
											"end": 2836,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2836,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2813,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 2813,
											"end": 2881,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2838,
											"end": 2881,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2838,
											"end": 2881,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2838,
											"end": 2881,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2838,
											"end": 2881,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7243,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2838,
											"end": 2881,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2838,
											"end": 2881,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2838,
											"end": 2881,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7223,
											"end": 7244,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7280,
											"end": 7282,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 7260,
											"end": 7278,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7260,
											"end": 7278,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7260,
											"end": 7278,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7253,
											"end": 7283,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7319,
											"end": 7353,
											"name": "PUSH",
											"source": 7,
											"value": "75706461746549642063616E6E6F7420626520616D6F6E6720746F6B656E4964"
										},
										{
											"begin": 7299,
											"end": 7317,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7299,
											"end": 7317,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7299,
											"end": 7317,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7292,
											"end": 7354,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7370,
											"end": 7388,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7370,
											"end": 7388,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7370,
											"end": 7388,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7363,
											"end": 7394,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7411,
											"end": 7430,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 7411,
											"end": 7430,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2838,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 7039,
											"end": 7436,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2813,
											"end": 2881,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 2813,
											"end": 2881,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 2917,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2900,
											"end": 2917,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 2917,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 2917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2917,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 2917,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 2917,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 2908,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2900,
											"end": 2917,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2900,
											"end": 2917,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 2917,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2900,
											"end": 2917,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 2917,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 2917,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 2917,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2900,
											"end": 2917,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2896,
											"end": 2949,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2896,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 2896,
											"end": 2949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2919,
											"end": 2949,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2919,
											"end": 2949,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2919,
											"end": 2949,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2919,
											"end": 2949,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6410,
											"end": 6412,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2919,
											"end": 2949,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2919,
											"end": 2949,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2919,
											"end": 2949,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6392,
											"end": 6413,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6449,
											"end": 6451,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 6429,
											"end": 6447,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6429,
											"end": 6447,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6447,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6422,
											"end": 6452,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151BDAD95B88185B1C9958591E48189D5C9B9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6468,
											"end": 6486,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6468,
											"end": 6486,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6468,
											"end": 6486,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6461,
											"end": 6511,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6528,
											"end": 6546,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6528,
											"end": 6546,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 6208,
											"end": 6552,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2949,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 2896,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31A9108F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5585,
											"end": 5595,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5573,
											"end": 5596,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5573,
											"end": 5596,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5597,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2992,
											"end": 3002,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2992,
											"end": 3002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2968,
											"end": 2979,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2979,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2979,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2979,
											"name": "PUSH",
											"source": 6,
											"value": "6352211E"
										},
										{
											"begin": 2968,
											"end": 2979,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5546,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5528,
											"end": 5546,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2968,
											"end": 2988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2968,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2968,
											"end": 3002,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 3002,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 2964,
											"end": 3029,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3029,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3029,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3004,
											"end": 3029,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3029,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6066,
											"end": 6068,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3029,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3029,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3029,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6069,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6107,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 6085,
											"end": 6103,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6085,
											"end": 6103,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6085,
											"end": 6103,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6078,
											"end": 6108,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA103A37B5B2B71037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6124,
											"end": 6142,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6124,
											"end": 6142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6124,
											"end": 6142,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6117,
											"end": 6162,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6179,
											"end": 6197,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6179,
											"end": 6197,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5864,
											"end": 6203,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 3029,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 2964,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2750,
											"end": 2753,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2750,
											"end": 2753,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2715,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 2715,
											"end": 3041,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2715,
											"end": 3041,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 2715,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2715,
											"end": 3041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 3048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 3048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2083,
											"end": 3048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2083,
											"end": 3048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2083,
											"end": 3048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2083,
											"end": 3048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3056,
											"end": 3491,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3056,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3224,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3205,
											"end": 3224,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3224,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3161,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3205,
											"end": 3224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3224,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3224,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3205,
											"end": 3224,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3224,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3224,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3205,
											"end": 3224,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3224,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3231,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3205,
											"end": 3231,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3205,
											"end": 3231,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3231,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3231,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3191,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "663"
										},
										{
											"begin": 3180,
											"end": 3191,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3413,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 3242,
											"end": 3413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3280,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3261,
											"end": 3280,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3280,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3280,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 3242,
											"end": 3413,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 3242,
											"end": 3413,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3316,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3319,
											"end": 3327,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3319,
											"end": 3327,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3328,
											"end": 3329,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3319,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3319,
											"end": 3330,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3319,
											"end": 3330,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3319,
											"end": 3330,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3319,
											"end": 3330,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3319,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 3319,
											"end": 3330,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3319,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 3319,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 3319,
											"end": 3330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3319,
											"end": 3330,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 3319,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3319,
											"end": 3330,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3319,
											"end": 3330,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3319,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3319,
											"end": 3330,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3319,
											"end": 3330,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3319,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3319,
											"end": 3330,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3319,
											"end": 3330,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3319,
											"end": 3330,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3319,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 3319,
											"end": 3330,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3319,
											"end": 3330,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3319,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3319,
											"end": 3330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3319,
											"end": 3330,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 3319,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3345,
											"end": 3362,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3345,
											"end": 3362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3345,
											"end": 3362,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3345,
											"end": 3362,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3345,
											"end": 3362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3345,
											"end": 3362,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3345,
											"end": 3353,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3345,
											"end": 3362,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3345,
											"end": 3362,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3345,
											"end": 3362,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3345,
											"end": 3362,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3345,
											"end": 3362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3345,
											"end": 3362,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3345,
											"end": 3362,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3345,
											"end": 3369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3345,
											"end": 3369,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3345,
											"end": 3369,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3345,
											"end": 3369,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3345,
											"end": 3369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3345,
											"end": 3369,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "852CD8D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5597,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5555,
											"end": 5597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5555,
											"end": 5597,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5555,
											"end": 5597,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3345,
											"end": 3362,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3345,
											"end": 3362,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3384,
											"end": 3392,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3392,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "42966C68"
										},
										{
											"begin": 3384,
											"end": 3392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5546,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5528,
											"end": 5546,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3287,
											"end": 3413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3282,
											"end": 3285,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3282,
											"end": 3285,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3282,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 3282,
											"end": 3285,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3282,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 3282,
											"end": 3285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3282,
											"end": 3285,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 3282,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3282,
											"end": 3285,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3282,
											"end": 3285,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3282,
											"end": 3285,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 3242,
											"end": 3413,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3413,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 3242,
											"end": 3413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3474,
											"end": 3482,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3453,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "PUSH",
											"source": 6,
											"value": "26CCC16F7FCB4F9C2582BCBA8E2AA8BFC16139AD280D11913CCFB99777825EE0"
										},
										{
											"begin": 3455,
											"end": 3463,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3463,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3472,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3465,
											"end": 3472,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 3430,
											"end": 3483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 3131,
											"end": 3491,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3056,
											"end": 3491,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3056,
											"end": 3491,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3056,
											"end": 3491,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3056,
											"end": 3491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3754,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3499,
											"end": 3754,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3543,
											"end": 3557,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3579,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3572,
											"end": 3579,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3560,
											"end": 3569,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3560,
											"end": 3579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 3560,
											"end": 3579,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3560,
											"end": 3579,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3560,
											"end": 3579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 3560,
											"end": 3579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3560,
											"end": 3579,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 3560,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3543,
											"end": 3579,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3594,
											"end": 3604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3604,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3590,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 3590,
											"end": 3747,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3622,
											"end": 3634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3648,
											"end": 3658,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3648,
											"end": 3658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3672,
											"end": 3678,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3672,
											"end": 3678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3672,
											"end": 3678,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3648,
											"end": 3658,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3703,
											"end": 3710,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 3698,
											"end": 3735,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3712,
											"end": 3735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3712,
											"end": 3735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3712,
											"end": 3735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3712,
											"end": 3735,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8996,
											"end": 8998,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3712,
											"end": 3735,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3712,
											"end": 3735,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3712,
											"end": 3735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8978,
											"end": 8999,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9035,
											"end": 9037,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 9015,
											"end": 9033,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9015,
											"end": 9033,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9015,
											"end": 9033,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9008,
											"end": 9038,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1499599D5B990819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9054,
											"end": 9072,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9054,
											"end": 9072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9054,
											"end": 9072,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9047,
											"end": 9090,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9107,
											"end": 9125,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9107,
											"end": 9125,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3712,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 8794,
											"end": 9131,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3698,
											"end": 3735,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 3698,
											"end": 3735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3754,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1290,
											"end": 1655,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 1290,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1399,
											"end": 1405,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1396,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1405,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1496,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 1371,
											"end": 1496,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CF479181"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1476,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3571,
											"end": 3596,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3639,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3639,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3639,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3544,
											"end": 3562,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3544,
											"end": 3562,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3397,
											"end": 3645,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1371,
											"end": 1496,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 1371,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1519,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1521,
											"end": 1544,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1557,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1506,
											"end": 1581,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1506,
											"end": 1581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1506,
											"end": 1581,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1506,
											"end": 1581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1596,
											"end": 1603,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1591,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 1591,
											"end": 1649,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1619,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 1627,
											"end": 1637,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1619,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 1619,
											"end": 1638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1619,
											"end": 1638,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 1619,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1361,
											"end": 1655,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1361,
											"end": 1655,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1290,
											"end": 1655,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1290,
											"end": 1655,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1290,
											"end": 1655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9338,
											"end": 9340,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9320,
											"end": 9341,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9377,
											"end": 9379,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 9357,
											"end": 9375,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9357,
											"end": 9375,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9357,
											"end": 9375,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9350,
											"end": 9380,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9396,
											"end": 9414,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9396,
											"end": 9414,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9396,
											"end": 9414,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9389,
											"end": 9439,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9456,
											"end": 9474,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9456,
											"end": 9474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 9136,
											"end": 9480,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5559,
											"end": 5993,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 5559,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5690,
											"end": 5707,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5690,
											"end": 5707,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5690,
											"end": 5711,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5686,
											"end": 5987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 5686,
											"end": 5987,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 5904,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5888,
											"end": 5905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5881,
											"end": 5885,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5869,
											"end": 5879,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5886,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5858,
											"end": 5906,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5686,
											"end": 5987,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 5686,
											"end": 5987,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D6BDA275"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5957,
											"end": 5976,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 375,
											"end": 647,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 375,
											"end": 647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 433,
											"end": 439,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 486,
											"end": 488,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 474,
											"end": 483,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 465,
											"end": 472,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 461,
											"end": 484,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 457,
											"end": 489,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 454,
											"end": 506,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 454,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 454,
											"end": 506,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 502,
											"end": 503,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 499,
											"end": 500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 504,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 454,
											"end": 506,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 454,
											"end": 506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 541,
											"end": 550,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 551,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 591,
											"end": 597,
											"name": "PUSH",
											"source": 7,
											"value": "FFFF"
										},
										{
											"begin": 584,
											"end": 589,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 580,
											"end": 598,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 573,
											"end": 578,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 570,
											"end": 599,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 560,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 560,
											"end": 617,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 613,
											"end": 614,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 610,
											"end": 611,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 615,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 560,
											"end": 617,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 560,
											"end": 617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 636,
											"end": 641,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 375,
											"end": 647,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 375,
											"end": 647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 652,
											"end": 815,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 652,
											"end": 815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 719,
											"end": 739,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 719,
											"end": 739,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 779,
											"end": 789,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 768,
											"end": 790,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 768,
											"end": 790,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 758,
											"end": 791,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 758,
											"end": 791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 748,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 748,
											"end": 809,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 805,
											"end": 806,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 803,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 807,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 748,
											"end": 809,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 748,
											"end": 809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 652,
											"end": 815,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 652,
											"end": 815,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 652,
											"end": 815,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 652,
											"end": 815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 820,
											"end": 1004,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 820,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 878,
											"end": 884,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 919,
											"end": 928,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 910,
											"end": 917,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 906,
											"end": 929,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 902,
											"end": 934,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 899,
											"end": 951,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 899,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 899,
											"end": 951,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 947,
											"end": 948,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 944,
											"end": 945,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 949,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 899,
											"end": 951,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 899,
											"end": 951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 988,
											"end": 997,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 970,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 970,
											"end": 998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1888,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1201,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1308,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1363,
											"end": 1365,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1351,
											"end": 1360,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1349,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1338,
											"end": 1361,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 1366,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1383,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 1331,
											"end": 1383,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1380,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1376,
											"end": 1377,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1369,
											"end": 1381,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1383,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 1331,
											"end": 1383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1428,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1406,
											"end": 1429,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1470,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1444,
											"end": 1450,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1471,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1484,
											"end": 1485,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1482,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1474,
											"end": 1486,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1507,
											"end": 1529,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1507,
											"end": 1529,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1564,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1575,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 1538,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 1538,
											"end": 1593,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1538,
											"end": 1593,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 1538,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1632,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1647,
											"end": 1653,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1644,
											"end": 1674,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1691,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 1641,
											"end": 1691,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1687,
											"end": 1688,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1684,
											"end": 1685,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1689,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1691,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 1641,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1742,
											"end": 1749,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1739,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1722,
											"end": 1723,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1718,
											"end": 1732,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1714,
											"end": 1716,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1733,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1740,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1750,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1767,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 1700,
											"end": 1767,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1763,
											"end": 1764,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1761,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1765,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1767,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 1700,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1786,
											"end": 1799,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1786,
											"end": 1799,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1786,
											"end": 1799,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1786,
											"end": 1799,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1843,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 1843,
											"end": 1882,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1861,
											"end": 1881,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1861,
											"end": 1881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1843,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 1843,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1843,
											"end": 1882,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 1843,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1833,
											"end": 1882,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1833,
											"end": 1882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1888,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1888,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1888,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1888,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1888,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2086,
											"end": 2266,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 2086,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2151,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2198,
											"end": 2200,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2186,
											"end": 2195,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2177,
											"end": 2184,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2173,
											"end": 2196,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2201,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2166,
											"end": 2218,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2166,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 2166,
											"end": 2218,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2214,
											"end": 2215,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2212,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2216,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2166,
											"end": 2218,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 2166,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2237,
											"end": 2260,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2237,
											"end": 2260,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2086,
											"end": 2266,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2086,
											"end": 2266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2661,
											"end": 2792,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 2661,
											"end": 2792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2736,
											"end": 2767,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2736,
											"end": 2767,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2726,
											"end": 2768,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2726,
											"end": 2768,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2716,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2716,
											"end": 2786,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2782,
											"end": 2783,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2772,
											"end": 2784,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2797,
											"end": 3044,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 2797,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2856,
											"end": 2862,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2909,
											"end": 2911,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 2895,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2880,
											"end": 2912,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2929,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 2877,
											"end": 2929,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 2926,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2923,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2915,
											"end": 2927,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2929,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 2877,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2973,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2951,
											"end": 2974,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2983,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 3008,
											"end": 3013,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2983,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 2983,
											"end": 3014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5608,
											"end": 5859,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 5608,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5678,
											"end": 5684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5731,
											"end": 5733,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5719,
											"end": 5728,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5710,
											"end": 5717,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5706,
											"end": 5729,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5702,
											"end": 5734,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5699,
											"end": 5751,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5699,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 5699,
											"end": 5751,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5747,
											"end": 5748,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5744,
											"end": 5745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5699,
											"end": 5751,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 5699,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5779,
											"end": 5788,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5773,
											"end": 5789,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5798,
											"end": 5829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 5823,
											"end": 5828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5798,
											"end": 5829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 5798,
											"end": 5829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6907,
											"end": 7034,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 6907,
											"end": 7034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 6978,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 6963,
											"end": 6966,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6959,
											"end": 6979,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6956,
											"end": 6957,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6949,
											"end": 6980,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6999,
											"end": 7003,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 6996,
											"end": 6997,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6989,
											"end": 7004,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7023,
											"end": 7027,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7020,
											"end": 7021,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7013,
											"end": 7028,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7441,
											"end": 7568,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 7441,
											"end": 7568,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7502,
											"end": 7512,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 7497,
											"end": 7500,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 7493,
											"end": 7513,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 7490,
											"end": 7491,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7483,
											"end": 7514,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7533,
											"end": 7537,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 7530,
											"end": 7531,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7523,
											"end": 7538,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7557,
											"end": 7561,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7554,
											"end": 7555,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7547,
											"end": 7562,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7573,
											"end": 7761,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 7573,
											"end": 7761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7611,
											"end": 7614,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7655,
											"end": 7665,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7648,
											"end": 7653,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7644,
											"end": 7666,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7690,
											"end": 7700,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7681,
											"end": 7688,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7678,
											"end": 7701,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7675,
											"end": 7724,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 7675,
											"end": 7724,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7704,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 7704,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 7704,
											"end": 7722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7704,
											"end": 7722,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 7704,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7753,
											"end": 7754,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7740,
											"end": 7755,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7740,
											"end": 7755,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7573,
											"end": 7761,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7573,
											"end": 7761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7766,
											"end": 8446,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 7766,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7992,
											"end": 7994,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8004,
											"end": 8025,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8004,
											"end": 8025,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8004,
											"end": 8025,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7977,
											"end": 7995,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7977,
											"end": 7995,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8060,
											"end": 8082,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8060,
											"end": 8082,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8060,
											"end": 8082,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7944,
											"end": 7948,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8139,
											"end": 8145,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8098,
											"end": 8116,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8116,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7944,
											"end": 7948,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8173,
											"end": 8375,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 8173,
											"end": 8375,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8187,
											"end": 8193,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8184,
											"end": 8185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8181,
											"end": 8194,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8173,
											"end": 8375,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8173,
											"end": 8375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 8173,
											"end": 8375,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8279,
											"end": 8289,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8252,
											"end": 8277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 8270,
											"end": 8276,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8252,
											"end": 8277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 8252,
											"end": 8277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8252,
											"end": 8277,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 8252,
											"end": 8277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8248,
											"end": 8290,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8236,
											"end": 8291,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8236,
											"end": 8291,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8320,
											"end": 8324,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8348,
											"end": 8365,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8348,
											"end": 8365,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8348,
											"end": 8365,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8348,
											"end": 8365,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8311,
											"end": 8325,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8311,
											"end": 8325,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8311,
											"end": 8325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8311,
											"end": 8325,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8209,
											"end": 8210,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8202,
											"end": 8211,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8173,
											"end": 8375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 8173,
											"end": 8375,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8173,
											"end": 8375,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 8173,
											"end": 8375,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8426,
											"end": 8430,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8411,
											"end": 8431,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8411,
											"end": 8431,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8411,
											"end": 8431,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8411,
											"end": 8431,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8404,
											"end": 8440,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8404,
											"end": 8440,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8404,
											"end": 8440,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8404,
											"end": 8440,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8392,
											"end": 8395,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7766,
											"end": 8446,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7766,
											"end": 8446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8451,
											"end": 8579,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 8451,
											"end": 8579,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8518,
											"end": 8527,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8518,
											"end": 8527,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8518,
											"end": 8527,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8539,
											"end": 8550,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8539,
											"end": 8550,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8539,
											"end": 8550,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8536,
											"end": 8573,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8536,
											"end": 8573,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 8536,
											"end": 8573,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 8553,
											"end": 8571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8451,
											"end": 8579,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8451,
											"end": 8579,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8451,
											"end": 8579,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8451,
											"end": 8579,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8451,
											"end": 8579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"BurnManger.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"burnAmount()": "486a7e6b",
							"createPremium(uint32[],uint32)": "41989bef",
							"getBurnFee()": "aa4b10d1",
							"getContractBalance()": "6f9fb98a",
							"getMaxBurnFee()": "576aee51",
							"isTokenBurned(uint32)": "c3d93ecd",
							"isUpdatedToken(uint32)": "1df8473d",
							"nftContract()": "d56d229d",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"setBurnAmount(uint16)": "1deedfb5",
							"setBurnFee(uint256)": "4bf2c7c9",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"withdrawFunds()": "24600fc3",
							"withdrawPartialFunds(uint256)": "d4e0ed2e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FeeExceedsMaximum\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FeeUnchanged\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientPayment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoFundsToWithdraw\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotTokenOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyBurned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawalFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"BurnFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32[]\",\"name\":\"tokenIds\",\"type\":\"uint32[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"updateId\",\"type\":\"uint32\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"burnAmount\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"tokenIds\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32\",\"name\":\"updateId\",\"type\":\"uint32\"}],\"name\":\"createPremium\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBurnFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxBurnFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"tokenId\",\"type\":\"uint32\"}],\"name\":\"isTokenBurned\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"tokenId\",\"type\":\"uint32\"}],\"name\":\"isUpdatedToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"amount\",\"type\":\"uint16\"}],\"name\":\"setBurnAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"setBurnFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawPartialFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Contract for managing NFT burns with payment system Uses OpenZeppelin standards for security and access control\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"BurnManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BurnManger.sol\":\"BurnManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"BurnManger.sol\":{\"keccak256\":\"0x1b3e4a9b713e285b3b751cc200137911565f7b7cce129dbb18afc48c84e323f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ca5e2136af1c0e8c19ac9680959507e8b0564ba97a5c6d483f42df976f1d01b\",\"dweb:/ipfs/QmRtZQQGZmEnCfDn7B4MKyqNX53ySQQUUWkZbUtrn69NMg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "BurnManger.sol:BurnManager",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 266,
								"contract": "BurnManger.sol:BurnManager",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 165,
								"contract": "BurnManger.sol:BurnManager",
								"label": "_paused",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 666,
								"contract": "BurnManger.sol:BurnManager",
								"label": "burnFee",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 669,
								"contract": "BurnManger.sol:BurnManager",
								"label": "burnAmount",
								"offset": 0,
								"slot": "4",
								"type": "t_uint16"
							},
							{
								"astId": 673,
								"contract": "BurnManger.sol:BurnManager",
								"label": "isBurned",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint32,t_bool)"
							},
							{
								"astId": 677,
								"contract": "BurnManger.sol:BurnManager",
								"label": "isUpdated",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint32,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_uint32,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint32",
								"label": "mapping(uint32 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(uint256)": "42966c68",
							"ownerOf(uint256)": "6352211e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BurnManger.sol\":\"IERC721Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"BurnManger.sol\":{\"keccak256\":\"0x1b3e4a9b713e285b3b751cc200137911565f7b7cce129dbb18afc48c84e323f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ca5e2136af1c0e8c19ac9680959507e8b0564ba97a5c6d483f42df976f1d01b\",\"dweb:/ipfs/QmRtZQQGZmEnCfDn7B4MKyqNX53ySQQUUWkZbUtrn69NMg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							610
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 611,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 610,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 610,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								610
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 592,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							610
						],
						"Pausable": [
							255
						]
					},
					"id": 256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 150,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 256,
							"sourceUnit": 611,
							"src": "130:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 152,
										"name": "Context",
										"nameLocations": [
											"632:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 610,
										"src": "632:7:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:1"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 151,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:1",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 255,
							"linearizedBaseContracts": [
								255,
								610
							],
							"name": "Pausable",
							"nameLocation": "620:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:1",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 158,
									"name": "Paused",
									"nameLocation": "730:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "737:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:1"
									},
									"src": "724:30:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:1",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 163,
									"name": "Unpaused",
									"nameLocation": "841:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "850:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:1"
									},
									"src": "835:32:1"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 255,
									"src": "873:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 164,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "986:32:1",
										"statements": [
											{
												"expression": {
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 169,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "996:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "996:15:1"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:1",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 174,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:1"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:1"
									},
									"scope": 255,
									"src": "972:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1229:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 177,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "1239:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:1"
											},
											{
												"id": 180,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:1"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:1",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 182,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:1"
									},
									"src": "1204:72:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1476:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 185,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "1486:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:1"
											},
											{
												"id": 188,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:1"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:1",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 190,
									"name": "whenPaused",
									"nameLocation": "1463:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:1"
									},
									"src": "1454:66:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "1668:31:1",
										"statements": [
											{
												"expression": {
													"id": 196,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 165,
													"src": "1685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 195,
												"id": 197,
												"nodeType": "Return",
												"src": "1678:14:1"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:1",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:1"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1662:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 193,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:1"
									},
									"scope": 255,
									"src": "1615:84:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "1818:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:1",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 204,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "1837:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:1"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:1",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:1"
									},
									"scope": 255,
									"src": "1767:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "1993:58:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 216,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 199,
																"src": "2011:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 215,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:1"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:1",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:1"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:1"
									},
									"scope": 255,
									"src": "1945:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2235:66:1",
										"statements": [
											{
												"expression": {
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 228,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2245:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 233,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "2281:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 232,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2274:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 236,
												"nodeType": "EmitStatement",
												"src": "2269:25:1"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:1",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 226,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 225,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 182,
												"src": "2221:13:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:1"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:1"
									},
									"scope": 255,
									"src": "2186:115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "2481:69:1",
										"statements": [
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 244,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2491:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 249,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "2530:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 248,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2521:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 252,
												"nodeType": "EmitStatement",
												"src": "2516:27:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:1",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 242,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 241,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 190,
												"src": "2470:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:1"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:1"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:1"
									},
									"scope": 255,
									"src": "2433:117:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 256,
							"src": "602:1950:1",
							"usedErrors": [],
							"usedEvents": [
								158,
								163
							]
						}
					],
					"src": "105:2448:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							320
						]
					},
					"id": 321,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 257,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 258,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 320,
							"linearizedBaseContracts": [
								320
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 261,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 320,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 259,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 260,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 264,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 320,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 262,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 263,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 266,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 320,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 265,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 269,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 270,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 274,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 320,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 277,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 280,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 281,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 285,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 289,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 290,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 288,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 295,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 296,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 320,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 304,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 320,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 314,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 315,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 313,
												"id": 317,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 320,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 321,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							580
						],
						"Errors": [
							632
						]
					},
					"id": 581,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 322,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 581,
							"sourceUnit": 633,
							"src": "127:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 323,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 632,
										"src": "135:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 325,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 580,
							"linearizedBaseContracts": [
								580
							],
							"name": "Address",
							"nameLocation": "241:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:3",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 330,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "358:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:3"
									},
									"src": "335:39:3"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "1361:294:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 340,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$580",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$580",
																		"typeString": "library Address"
																	}
																],
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 338,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 343,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "1399:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 357,
												"nodeType": "IfStatement",
												"src": "1371:125:3",
												"trueBody": {
													"id": 356,
													"nodeType": "Block",
													"src": "1407:89:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 350,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$580",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$580",
																						"typeString": "library Address"
																					}
																				],
																				"id": 349,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 348,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:3",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 353,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 335,
																		"src": "1478:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 345,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "1428:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$632_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:3",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 620,
																	"src": "1428:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 355,
															"nodeType": "RevertStatement",
															"src": "1421:64:3"
														}
													]
												}
											},
											{
												"assignments": [
													359,
													361
												],
												"declarations": [
													{
														"constant": false,
														"id": 359,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 377,
														"src": "1507:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 358,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 361,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "1534:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 377,
														"src": "1521:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 360,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1521:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 368,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1578:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 362,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "1548:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1558:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1548:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 364,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "1570:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1548:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:75:3"
											},
											{
												"condition": {
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1595:8:3",
													"subExpression": {
														"id": 369,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "1596:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 376,
												"nodeType": "IfStatement",
												"src": "1591:58:3",
												"trueBody": {
													"id": 375,
													"nodeType": "Block",
													"src": "1605:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 372,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 361,
																		"src": "1627:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 371,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "1619:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1619:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 374,
															"nodeType": "ExpressionStatement",
															"src": "1619:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1309:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1336:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:3"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:3"
									},
									"scope": 580,
									"src": "1290:365:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "2589:62:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 389,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "2628:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 390,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "2636:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2642:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 388,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "2606:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 387,
												"id": 393,
												"nodeType": "Return",
												"src": "2599:45:3"
											}
										]
									},
									"documentation": {
										"id": 379,
										"nodeType": "StructuredDocumentation",
										"src": "1661:834:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2509:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2530:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "2522:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2551:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "2538:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 382,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2538:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:35:3"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "2575:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 385,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2575:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:14:3"
									},
									"scope": 580,
									"src": "2500:151:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "3088:294:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 409,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3110:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$580",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$580",
																		"typeString": "library Address"
																	}
																],
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3102:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 407,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3102:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3102:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3116:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3102:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 412,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "3126:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3102:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 426,
												"nodeType": "IfStatement",
												"src": "3098:123:3",
												"trueBody": {
													"id": 425,
													"nodeType": "Block",
													"src": "3133:88:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 419,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3189:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$580",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$580",
																						"typeString": "library Address"
																					}
																				],
																				"id": 418,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3181:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 417,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3181:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3181:13:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3195:7:3",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3181:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 422,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "3204:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 414,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "3154:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$632_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3161:19:3",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 620,
																	"src": "3154:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3154:56:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 424,
															"nodeType": "RevertStatement",
															"src": "3147:63:3"
														}
													]
												}
											},
											{
												"assignments": [
													428,
													430
												],
												"declarations": [
													{
														"constant": false,
														"id": 428,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3236:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "3231:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 427,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3231:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3258:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "3245:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 429,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3245:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 437,
												"initialValue": {
													"arguments": [
														{
															"id": 435,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "3298:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 431,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "3272:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3279:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3272:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 433,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "3291:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3272:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3272:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3230:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "3347:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 440,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "3355:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 441,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "3364:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 438,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "3320:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3320:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 406,
												"id": 443,
												"nodeType": "Return",
												"src": "3313:62:3"
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "2657:313:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2984:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3014:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3006:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3035:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3022:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 399,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3022:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3049:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3041:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3005:50:3"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3074:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 404,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3074:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:14:3"
									},
									"scope": 580,
									"src": "2975:407:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "3621:154:3",
										"statements": [
											{
												"assignments": [
													456,
													458
												],
												"declarations": [
													{
														"constant": false,
														"id": 456,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3637:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 470,
														"src": "3632:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 455,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3632:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 458,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3659:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 470,
														"src": "3646:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 457,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3646:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 463,
												"initialValue": {
													"arguments": [
														{
															"id": 461,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "3691:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 459,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3673:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3680:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3673:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3673:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3631:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3740:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 466,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "3748:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 467,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "3757:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 464,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "3713:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3713:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 454,
												"id": 469,
												"nodeType": "Return",
												"src": "3706:62:3"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "3388:128:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3530:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3557:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3549:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3578:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3565:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3565:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:35:3"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3607:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 452,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3607:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3606:14:3"
									},
									"scope": 580,
									"src": "3521:254:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "4013:156:3",
										"statements": [
											{
												"assignments": [
													482,
													484
												],
												"declarations": [
													{
														"constant": false,
														"id": 482,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4029:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 496,
														"src": "4024:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 481,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4024:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 484,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4051:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 496,
														"src": "4038:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 483,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4038:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 489,
												"initialValue": {
													"arguments": [
														{
															"id": 487,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "4085:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 485,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "4065:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4072:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4065:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4065:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4023:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 491,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "4134:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 492,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "4142:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 493,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "4151:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 490,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "4107:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4107:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 480,
												"id": 495,
												"nodeType": "Return",
												"src": "4100:62:3"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "3781:130:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3925:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3954:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "3946:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3975:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "3962:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3962:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3945:35:3"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "3999:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 478,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3999:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:14:3"
									},
									"scope": 580,
									"src": "3916:253:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "4595:424:3",
										"statements": [
											{
												"condition": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4609:8:3",
													"subExpression": {
														"id": 509,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "4610:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 534,
													"nodeType": "Block",
													"src": "4669:344:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 516,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 504,
																			"src": "4857:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4868:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4857:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4878:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4857:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 520,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 500,
																				"src": "4883:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4890:4:3",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4883:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4895:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4883:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4905:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4883:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4857:49:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 531,
															"nodeType": "IfStatement",
															"src": "4853:119:3",
															"trueBody": {
																"id": 530,
																"nodeType": "Block",
																"src": "4908:64:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 527,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 500,
																					"src": "4950:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 526,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 330,
																				"src": "4933:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4933:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 529,
																		"nodeType": "RevertStatement",
																		"src": "4926:31:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 532,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 504,
																"src": "4992:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 508,
															"id": 533,
															"nodeType": "Return",
															"src": "4985:17:3"
														}
													]
												},
												"id": 535,
												"nodeType": "IfStatement",
												"src": "4605:408:3",
												"trueBody": {
													"id": 515,
													"nodeType": "Block",
													"src": "4619:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 512,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 504,
																		"src": "4641:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 511,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "4633:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4633:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 514,
															"nodeType": "ExpressionStatement",
															"src": "4633:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "4175:257:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4446:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4490:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "4482:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4511:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "4506:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 501,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4506:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4541:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "4528:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 503,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4528:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4472:85:3"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "4581:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 506,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4581:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4580:14:3"
									},
									"scope": 580,
									"src": "4437:582:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "5323:122:3",
										"statements": [
											{
												"condition": {
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5337:8:3",
													"subExpression": {
														"id": 547,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "5338:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 556,
													"nodeType": "Block",
													"src": "5397:42:3",
													"statements": [
														{
															"expression": {
																"id": 554,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 542,
																"src": "5418:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 546,
															"id": 555,
															"nodeType": "Return",
															"src": "5411:17:3"
														}
													]
												},
												"id": 557,
												"nodeType": "IfStatement",
												"src": "5333:106:3",
												"trueBody": {
													"id": 553,
													"nodeType": "Block",
													"src": "5347:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 550,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 542,
																		"src": "5369:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 549,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "5361:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5361:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 552,
															"nodeType": "ExpressionStatement",
															"src": "5361:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "5025:191:3",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5230:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5252:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "5247:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 539,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5247:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5274:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "5261:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 541,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5261:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:39:3"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "5309:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 544,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5309:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5308:14:3"
									},
									"scope": 580,
									"src": "5221:224:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "5614:379:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 565,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "5690:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5701:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5690:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 567,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5710:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5690:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "5936:51:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 571,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "5957:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$632_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5964:10:3",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 623,
																	"src": "5957:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5957:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 575,
															"nodeType": "RevertStatement",
															"src": "5950:26:3"
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "5686:301:3",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "5713:217:3",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5840:80:3",
																"nodeType": "YulBlock",
																"src": "5840:80:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "returndata",
																							"nativeSrc": "5869:10:3",
																							"nodeType": "YulIdentifier",
																							"src": "5869:10:3"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5881:4:3",
																							"nodeType": "YulLiteral",
																							"src": "5881:4:3",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5865:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "5865:3:3"
																					},
																					"nativeSrc": "5865:21:3",
																					"nodeType": "YulFunctionCall",
																					"src": "5865:21:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "returndata",
																							"nativeSrc": "5894:10:3",
																							"nodeType": "YulIdentifier",
																							"src": "5894:10:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "5888:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "5888:5:3"
																					},
																					"nativeSrc": "5888:17:3",
																					"nodeType": "YulFunctionCall",
																					"src": "5888:17:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5858:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "5858:6:3"
																			},
																			"nativeSrc": "5858:48:3",
																			"nodeType": "YulFunctionCall",
																			"src": "5858:48:3"
																		},
																		"nativeSrc": "5858:48:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "5858:48:3"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 562,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5869:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 562,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5894:10:3",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 569,
															"nodeType": "InlineAssembly",
															"src": "5815:105:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "5451:103:3",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5568:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5589:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "5576:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 561,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5576:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5575:25:3"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5614:0:3"
									},
									"scope": 580,
									"src": "5559:434:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 581,
							"src": "233:5762:3",
							"usedErrors": [
								330
							],
							"usedEvents": []
						}
					],
					"src": "101:5895:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							610
						]
					},
					"id": 611,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 582,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 583,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 610,
							"linearizedBaseContracts": [
								610
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 591,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 588,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 587,
												"id": 590,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 610,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 597,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 596,
												"id": 599,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 594,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 610,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 605,
												"id": 607,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 610,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 611,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							632
						]
					},
					"id": 633,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 612,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 613,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:5",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 632,
							"linearizedBaseContracts": [
								632
							],
							"name": "Errors",
							"nameLocation": "419:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:5",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 620,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "557:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "574:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:5"
									},
									"src": "531:59:5"
								},
								{
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:5",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 623,
									"name": "FailedCall",
									"nameLocation": "696:10:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:5"
									},
									"src": "690:19:5"
								},
								{
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:5",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 626,
									"name": "FailedDeployment",
									"nameLocation": "772:16:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:5"
									},
									"src": "766:25:5"
								},
								{
									"documentation": {
										"id": 627,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:5",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 631,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "884:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:5"
									},
									"src": "860:33:5"
								}
							],
							"scope": 633,
							"src": "411:484:5",
							"usedErrors": [
								620,
								623,
								626,
								631
							],
							"usedEvents": []
						}
					],
					"src": "100:796:5"
				},
				"id": 5
			},
			"BurnManger.sol": {
				"ast": {
					"absolutePath": "BurnManger.sol",
					"exportedSymbols": {
						"Address": [
							580
						],
						"BurnManager": [
							1198
						],
						"Context": [
							610
						],
						"Errors": [
							632
						],
						"IERC721Burnable": [
							651
						],
						"Ownable": [
							147
						],
						"Pausable": [
							255
						],
						"ReentrancyGuard": [
							320
						]
					},
					"id": 1199,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 634,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "63:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 635,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1199,
							"sourceUnit": 148,
							"src": "91:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 636,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1199,
							"sourceUnit": 321,
							"src": "145:62:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 637,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1199,
							"sourceUnit": 256,
							"src": "209:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 638,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1199,
							"sourceUnit": 581,
							"src": "266:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Burnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 651,
							"linearizedBaseContracts": [
								651
							],
							"name": "IERC721Burnable",
							"nameLocation": "331:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "42966c68",
									"id": 643,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "363:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "376:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "368:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:17:6"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "393:0:6"
									},
									"scope": 651,
									"src": "354:40:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6352211e",
									"id": 650,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "409:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "425:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "417:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "417:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:17:6"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "457:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "457:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "456:9:6"
									},
									"scope": 651,
									"src": "400:66:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1199,
							"src": "321:148:6",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 653,
										"name": "Ownable",
										"nameLocations": [
											"655:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "655:7:6"
									},
									"id": 654,
									"nodeType": "InheritanceSpecifier",
									"src": "655:7:6"
								},
								{
									"baseName": {
										"id": 655,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"664:15:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 320,
										"src": "664:15:6"
									},
									"id": 656,
									"nodeType": "InheritanceSpecifier",
									"src": "664:15:6"
								},
								{
									"baseName": {
										"id": 657,
										"name": "Pausable",
										"nameLocations": [
											"681:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 255,
										"src": "681:8:6"
									},
									"id": 658,
									"nodeType": "InheritanceSpecifier",
									"src": "681:8:6"
								}
							],
							"canonicalName": "BurnManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 652,
								"nodeType": "StructuredDocumentation",
								"src": "473:156:6",
								"text": " @title BurnManager\n @dev Contract for managing NFT burns with payment system\n Uses OpenZeppelin standards for security and access control"
							},
							"fullyImplemented": true,
							"id": 1198,
							"linearizedBaseContracts": [
								1198,
								255,
								320,
								147,
								610
							],
							"name": "BurnManager",
							"nameLocation": "640:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 661,
									"libraryName": {
										"id": 659,
										"name": "Address",
										"nameLocations": [
											"703:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 580,
										"src": "703:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "697:34:6",
									"typeName": {
										"id": 660,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "715:15:6",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "d56d229d",
									"id": 663,
									"mutability": "immutable",
									"name": "nftContract",
									"nameLocation": "764:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1198,
									"src": "739:36:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 662,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "739:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 666,
									"mutability": "mutable",
									"name": "burnFee",
									"nameLocation": "798:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1198,
									"src": "782:34:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 664,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "782:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e31",
										"id": 665,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "808:8:6",
										"subdenomination": "gwei",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000_by_1",
											"typeString": "int_const 100000000"
										},
										"value": "0.1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "486a7e6b",
									"id": 669,
									"mutability": "mutable",
									"name": "burnAmount",
									"nameLocation": "837:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1198,
									"src": "823:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 667,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "823:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 668,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "850:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 673,
									"mutability": "mutable",
									"name": "isBurned",
									"nameLocation": "897:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1198,
									"src": "865:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint32_$_t_bool_$",
										"typeString": "mapping(uint32 => bool)"
									},
									"typeName": {
										"id": 672,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 670,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "873:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										},
										"nodeType": "Mapping",
										"src": "865:23:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint32_$_t_bool_$",
											"typeString": "mapping(uint32 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 671,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "883:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 677,
									"mutability": "mutable",
									"name": "isUpdated",
									"nameLocation": "944:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1198,
									"src": "912:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint32_$_t_bool_$",
										"typeString": "mapping(uint32 => bool)"
									},
									"typeName": {
										"id": 676,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 674,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "920:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										},
										"nodeType": "Mapping",
										"src": "912:23:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint32_$_t_bool_$",
											"typeString": "mapping(uint32 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 675,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "930:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 680,
									"mutability": "constant",
									"name": "MAX_BURN_FEE",
									"nameLocation": "991:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1198,
									"src": "966:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 678,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "966:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 679,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1006:7:6",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "26ccc16f7fcb4f9c2582bcba8e2aa8bfc16139ad280d11913ccfb99777825ee0",
									"id": 691,
									"name": "TokensBurned",
									"nameLocation": "1028:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"indexed": true,
												"mutability": "mutable",
												"name": "burner",
												"nameLocation": "1057:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "1041:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "1074:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "1065:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 683,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1065:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 684,
													"nodeType": "ArrayTypeName",
													"src": "1065:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalFee",
												"nameLocation": "1092:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "1084:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1084:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"indexed": true,
												"mutability": "mutable",
												"name": "updateId",
												"nameLocation": "1117:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "1102:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 688,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1102:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1040:86:6"
									},
									"src": "1022:105:6"
								},
								{
									"anonymous": false,
									"eventSelector": "78f1461296bad7bd716a7673aa3e659cc091c348a7ed4cfef7ce452c3052f2fb",
									"id": 697,
									"name": "BurnFeeUpdated",
									"nameLocation": "1139:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldFee",
												"nameLocation": "1162:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "1154:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"indexed": false,
												"mutability": "mutable",
												"name": "newFee",
												"nameLocation": "1178:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "1170:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1170:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1153:32:6"
									},
									"src": "1133:53:6"
								},
								{
									"anonymous": false,
									"eventSelector": "eaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d",
									"id": 703,
									"name": "FundsWithdrawn",
									"nameLocation": "1198:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1229:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "1213:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1213:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1244:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "1236:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1236:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1212:39:6"
									},
									"src": "1192:60:6"
								},
								{
									"errorSelector": "3f6cc768",
									"id": 705,
									"name": "InvalidTokenId",
									"nameLocation": "1266:14:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1280:2:6"
									},
									"src": "1260:23:6"
								},
								{
									"errorSelector": "cd1c8867",
									"id": 707,
									"name": "InsufficientPayment",
									"nameLocation": "1295:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1314:2:6"
									},
									"src": "1289:28:6"
								},
								{
									"errorSelector": "8af5f396",
									"id": 709,
									"name": "TokenAlreadyBurned",
									"nameLocation": "1329:18:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1347:2:6"
									},
									"src": "1323:27:6"
								},
								{
									"errorSelector": "59dc379f",
									"id": 711,
									"name": "NotTokenOwner",
									"nameLocation": "1362:13:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:2:6"
									},
									"src": "1356:22:6"
								},
								{
									"errorSelector": "af9c21dc",
									"id": 713,
									"name": "FeeExceedsMaximum",
									"nameLocation": "1390:17:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1407:2:6"
									},
									"src": "1384:26:6"
								},
								{
									"errorSelector": "d2eea44f",
									"id": 715,
									"name": "FeeUnchanged",
									"nameLocation": "1422:12:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1434:2:6"
									},
									"src": "1416:21:6"
								},
								{
									"errorSelector": "67e3990d",
									"id": 717,
									"name": "NoFundsToWithdraw",
									"nameLocation": "1449:17:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1466:2:6"
									},
									"src": "1443:26:6"
								},
								{
									"errorSelector": "27fcd9d1",
									"id": 719,
									"name": "WithdrawalFailed",
									"nameLocation": "1481:16:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1497:2:6"
									},
									"src": "1475:25:6"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "1547:72:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 723,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "1562:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1573:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1562:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 729,
												"nodeType": "IfStatement",
												"src": "1558:41:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 726,
															"name": "InvalidTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "1583:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1583:16:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 728,
													"nodeType": "RevertStatement",
													"src": "1576:23:6"
												}
											},
											{
												"id": 730,
												"nodeType": "PlaceholderStatement",
												"src": "1610:1:6"
											}
										]
									},
									"id": 732,
									"name": "validTokenId",
									"nameLocation": "1517:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1538:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "1530:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1530:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1529:17:6"
									},
									"src": "1508:111:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "1681:111:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 741,
														"name": "_nftContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "1696:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1720:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1712:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 742,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1712:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 745,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1712:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1696:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 750,
												"nodeType": "IfStatement",
												"src": "1692:55:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 747,
															"name": "InvalidTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "1731:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1731:16:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 749,
													"nodeType": "RevertStatement",
													"src": "1724:23:6"
												}
											},
											{
												"expression": {
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 751,
														"name": "nftContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "1758:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 752,
														"name": "_nftContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "1772:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1758:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 754,
												"nodeType": "ExpressionStatement",
												"src": "1758:26:6"
											}
										]
									},
									"id": 756,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 737,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1669:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1673:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1669:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 739,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 736,
												"name": "Ownable",
												"nameLocations": [
													"1661:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1661:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1661:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "_nftContract",
												"nameLocation": "1647:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "1639:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1639:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1638:22:6"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1681:0:6"
									},
									"scope": 1198,
									"src": "1627:165:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 781,
										"nodeType": "Block",
										"src": "1953:122:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 769,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "1979:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
																"typeString": "uint32[] calldata"
															}
														},
														{
															"id": 770,
															"name": "updateId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "1989:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
																"typeString": "uint32[] calldata"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														],
														"id": 768,
														"name": "_validateInput",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "1964:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_uint32_$dyn_calldata_ptr_$_t_uint32_$returns$__$",
															"typeString": "function (uint32[] calldata,uint32) view"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1964:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "1964:34:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 774,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "2022:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
																"typeString": "uint32[] calldata"
															}
														},
														{
															"id": 775,
															"name": "updateId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "2032:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
																"typeString": "uint32[] calldata"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														],
														"id": 773,
														"name": "_processBurn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "2009:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint32_$dyn_calldata_ptr_$_t_uint32_$returns$__$",
															"typeString": "function (uint32[] calldata,uint32)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2009:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "2009:32:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 778,
														"name": "_refundExcess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "2052:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2052:15:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 780,
												"nodeType": "ExpressionStatement",
												"src": "2052:15:6"
											}
										]
									},
									"functionSelector": "41989bef",
									"id": 782,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 764,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 763,
												"name": "nonReentrant",
												"nameLocations": [
													"1912:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 285,
												"src": "1912:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1912:12:6"
										},
										{
											"id": 766,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 765,
												"name": "whenNotPaused",
												"nameLocations": [
													"1934:13:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 182,
												"src": "1934:13:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1934:13:6"
										}
									],
									"name": "createPremium",
									"nameLocation": "1809:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "1841:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "1823:26:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 757,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1823:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 758,
													"nodeType": "ArrayTypeName",
													"src": "1823:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "updateId",
												"nameLocation": "1858:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "1851:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 760,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1851:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1822:45:6"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1953:0:6"
									},
									"scope": 1198,
									"src": "1800:275:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "2165:883:6",
										"statements": [
											{
												"assignments": [
													791
												],
												"declarations": [
													{
														"constant": false,
														"id": 791,
														"mutability": "mutable",
														"name": "tokenCount",
														"nameLocation": "2183:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "2176:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 790,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "2176:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 797,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 794,
																"name": "tokenIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "2203:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
																	"typeString": "uint32[] calldata"
																}
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2212:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2203:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2196:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 792,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "2196:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2196:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2176:43:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 798,
														"name": "tokenCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "2234:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2248:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2234:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 805,
												"nodeType": "IfStatement",
												"src": "2230:49:6",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "4e6f20746f6b656e732070726f7669646564",
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2258:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_8b1731c71736a845ad3041fdec37ddb41deee5212938764b403c4acee99e6a45",
																	"typeString": "literal_string \"No tokens provided\""
																},
																"value": "No tokens provided"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_8b1731c71736a845ad3041fdec37ddb41deee5212938764b403c4acee99e6a45",
																	"typeString": "literal_string \"No tokens provided\""
																}
															],
															"id": 801,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "2251:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2251:28:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 804,
													"nodeType": "ExpressionStatement",
													"src": "2251:28:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 806,
														"name": "tokenCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "2294:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 807,
														"name": "burnAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "2308:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "2294:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "2290:70:6",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "4275726e2074686520726571756972656420746f6b656e20616d6f756e74",
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2327:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_24bddfde50391b9c9f52e9161fdb92836f1da21891ff53d457ef97ee9e32327d",
																	"typeString": "literal_string \"Burn the required token amount\""
																},
																"value": "Burn the required token amount"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_24bddfde50391b9c9f52e9161fdb92836f1da21891ff53d457ef97ee9e32327d",
																	"typeString": "literal_string \"Burn the required token amount\""
																}
															],
															"id": 809,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "2320:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 811,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2320:40:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 812,
													"nodeType": "ExpressionStatement",
													"src": "2320:40:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 814,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2377:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2381:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "2377:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 816,
														"name": "burnFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "2389:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2377:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 822,
												"nodeType": "IfStatement",
												"src": "2373:55:6",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "496e73756666696369656e74207061796d656e74",
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2405:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e",
																	"typeString": "literal_string \"Insufficient payment\""
																},
																"value": "Insufficient payment"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e",
																	"typeString": "literal_string \"Insufficient payment\""
																}
															],
															"id": 818,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "2398:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2398:30:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 821,
													"nodeType": "ExpressionStatement",
													"src": "2398:30:6"
												}
											},
											{
												"assignments": [
													825
												],
												"declarations": [
													{
														"constant": false,
														"id": 825,
														"mutability": "mutable",
														"name": "nft",
														"nameLocation": "2457:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "2441:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721Burnable_$651",
															"typeString": "contract IERC721Burnable"
														},
														"typeName": {
															"id": 824,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 823,
																"name": "IERC721Burnable",
																"nameLocations": [
																	"2441:15:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 651,
																"src": "2441:15:6"
															},
															"referencedDeclaration": 651,
															"src": "2441:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721Burnable_$651",
																"typeString": "contract IERC721Burnable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 829,
												"initialValue": {
													"arguments": [
														{
															"id": 827,
															"name": "nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "2479:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 826,
														"name": "IERC721Burnable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "2463:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC721Burnable_$651_$",
															"typeString": "type(contract IERC721Burnable)"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2463:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721Burnable_$651",
														"typeString": "contract IERC721Burnable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2441:50:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 832,
																"name": "updateId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "2520:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															],
															"expression": {
																"id": 830,
																"name": "nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 825,
																"src": "2508:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC721Burnable_$651",
																	"typeString": "contract IERC721Burnable"
																}
															},
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2512:7:6",
															"memberName": "ownerOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 650,
															"src": "2508:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view external returns (address)"
															}
														},
														"id": 833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2508:21:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 834,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2533:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2537:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2533:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2508:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 841,
												"nodeType": "IfStatement",
												"src": "2504:66:6",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "4e6f7420746f6b656e206f776e6572",
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2552:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9",
																	"typeString": "literal_string \"Not token owner\""
																},
																"value": "Not token owner"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9",
																	"typeString": "literal_string \"Not token owner\""
																}
															],
															"id": 837,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "2545:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 839,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2545:25:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 840,
													"nodeType": "ExpressionStatement",
													"src": "2545:25:6"
												}
											},
											{
												"condition": {
													"baseExpression": {
														"id": 842,
														"name": "isBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "2585:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint32_$_t_bool_$",
															"typeString": "mapping(uint32 => bool)"
														}
													},
													"id": 844,
													"indexExpression": {
														"id": 843,
														"name": "updateId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "2594:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2585:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 849,
												"nodeType": "IfStatement",
												"src": "2581:54:6",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "546f6b656e20616c7265616479206275726e6564",
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2612:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_8b2e460ec12bad3db599997f4ef354a4c31ee38cb51f196f6c072efc7afa3095",
																	"typeString": "literal_string \"Token already burned\""
																},
																"value": "Token already burned"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_8b2e460ec12bad3db599997f4ef354a4c31ee38cb51f196f6c072efc7afa3095",
																	"typeString": "literal_string \"Token already burned\""
																}
															],
															"id": 845,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "2605:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2605:30:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 848,
													"nodeType": "ExpressionStatement",
													"src": "2605:30:6"
												}
											},
											{
												"condition": {
													"baseExpression": {
														"id": 850,
														"name": "isUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "2650:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint32_$_t_bool_$",
															"typeString": "mapping(uint32 => bool)"
														}
													},
													"id": 852,
													"indexExpression": {
														"id": 851,
														"name": "updateId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "2660:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2650:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 857,
												"nodeType": "IfStatement",
												"src": "2646:56:6",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "546f6b656e20616c72656164792075706461746564",
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2678:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_abee60a9266ba180a9a15fddac68e515f5c78c8ee3804b19f9c01b0dfcbad70c",
																	"typeString": "literal_string \"Token already updated\""
																},
																"value": "Token already updated"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_abee60a9266ba180a9a15fddac68e515f5c78c8ee3804b19f9c01b0dfcbad70c",
																	"typeString": "literal_string \"Token already updated\""
																}
															],
															"id": 853,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "2671:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2671:31:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 856,
													"nodeType": "ExpressionStatement",
													"src": "2671:31:6"
												}
											},
											{
												"body": {
													"id": 902,
													"nodeType": "Block",
													"src": "2755:286:6",
													"statements": [
														{
															"assignments": [
																869
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 869,
																	"mutability": "mutable",
																	"name": "tokenId",
																	"nameLocation": "2777:7:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 902,
																	"src": "2770:14:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"typeName": {
																		"id": 868,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2770:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 873,
															"initialValue": {
																"baseExpression": {
																	"id": 870,
																	"name": "tokenIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "2787:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
																		"typeString": "uint32[] calldata"
																	}
																},
																"id": 872,
																"indexExpression": {
																	"id": 871,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 859,
																	"src": "2796:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2787:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2770:28:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 874,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 869,
																	"src": "2817:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 875,
																	"name": "updateId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "2828:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "2817:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 881,
															"nodeType": "IfStatement",
															"src": "2813:68:6",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "75706461746549642063616e6e6f7420626520616d6f6e6720746f6b656e496473",
																			"id": 878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2845:35:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_f6f4cde9a6ae098de50dff215f37676e659bec035067467783e3012b7ecab905",
																				"typeString": "literal_string \"updateId cannot be among tokenIds\""
																			},
																			"value": "updateId cannot be among tokenIds"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_f6f4cde9a6ae098de50dff215f37676e659bec035067467783e3012b7ecab905",
																				"typeString": "literal_string \"updateId cannot be among tokenIds\""
																			}
																		],
																		"id": 877,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "2838:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2838:43:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 880,
																"nodeType": "ExpressionStatement",
																"src": "2838:43:6"
															}
														},
														{
															"condition": {
																"baseExpression": {
																	"id": 882,
																	"name": "isBurned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 673,
																	"src": "2900:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_bool_$",
																		"typeString": "mapping(uint32 => bool)"
																	}
																},
																"id": 884,
																"indexExpression": {
																	"id": 883,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 869,
																	"src": "2909:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2900:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 889,
															"nodeType": "IfStatement",
															"src": "2896:53:6",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "546f6b656e20616c7265616479206275726e6564",
																			"id": 886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2926:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_8b2e460ec12bad3db599997f4ef354a4c31ee38cb51f196f6c072efc7afa3095",
																				"typeString": "literal_string \"Token already burned\""
																			},
																			"value": "Token already burned"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_8b2e460ec12bad3db599997f4ef354a4c31ee38cb51f196f6c072efc7afa3095",
																				"typeString": "literal_string \"Token already burned\""
																			}
																		],
																		"id": 885,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "2919:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2919:30:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 888,
																"nodeType": "ExpressionStatement",
																"src": "2919:30:6"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 892,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 869,
																			"src": "2980:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		],
																		"expression": {
																			"id": 890,
																			"name": "nft",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 825,
																			"src": "2968:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC721Burnable_$651",
																				"typeString": "contract IERC721Burnable"
																			}
																		},
																		"id": 891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2972:7:6",
																		"memberName": "ownerOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 650,
																		"src": "2968:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view external returns (address)"
																		}
																	},
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2968:20:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"expression": {
																		"id": 894,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2992:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2996:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2992:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2968:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 901,
															"nodeType": "IfStatement",
															"src": "2964:65:6",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "4e6f7420746f6b656e206f776e6572",
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3011:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9",
																				"typeString": "literal_string \"Not token owner\""
																			},
																			"value": "Not token owner"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9",
																				"typeString": "literal_string \"Not token owner\""
																			}
																		],
																		"id": 897,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "3004:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3004:25:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 900,
																"nodeType": "ExpressionStatement",
																"src": "3004:25:6"
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 862,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 859,
														"src": "2734:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 863,
														"name": "tokenCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "2738:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2734:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 903,
												"initializationExpression": {
													"assignments": [
														859
													],
													"declarations": [
														{
															"constant": false,
															"id": 859,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2727:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 903,
															"src": "2720:8:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"typeName": {
																"id": 858,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "2720:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 861,
													"initialValue": {
														"hexValue": "30",
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2731:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2720:12:6"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2750:3:6",
														"subExpression": {
															"id": 865,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "2750:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 867,
													"nodeType": "ExpressionStatement",
													"src": "2750:3:6"
												},
												"nodeType": "ForStatement",
												"src": "2715:326:6"
											}
										]
									},
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_validateInput",
									"nameLocation": "2092:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "2125:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "2107:26:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 783,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "2107:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 784,
													"nodeType": "ArrayTypeName",
													"src": "2107:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "updateId",
												"nameLocation": "2142:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "2135:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 786,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2135:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2106:45:6"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2165:0:6"
									},
									"scope": 1198,
									"src": "2083:965:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "3131:360:6",
										"statements": [
											{
												"assignments": [
													915
												],
												"declarations": [
													{
														"constant": false,
														"id": 915,
														"mutability": "mutable",
														"name": "nft",
														"nameLocation": "3158:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 965,
														"src": "3142:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721Burnable_$651",
															"typeString": "contract IERC721Burnable"
														},
														"typeName": {
															"id": 914,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 913,
																"name": "IERC721Burnable",
																"nameLocations": [
																	"3142:15:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 651,
																"src": "3142:15:6"
															},
															"referencedDeclaration": 651,
															"src": "3142:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721Burnable_$651",
																"typeString": "contract IERC721Burnable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 919,
												"initialValue": {
													"arguments": [
														{
															"id": 917,
															"name": "nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "3180:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 916,
														"name": "IERC721Burnable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "3164:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC721Burnable_$651_$",
															"typeString": "type(contract IERC721Burnable)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3164:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721Burnable_$651",
														"typeString": "contract IERC721Burnable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3142:50:6"
											},
											{
												"expression": {
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 920,
															"name": "isUpdated",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "3205:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint32_$_t_bool_$",
																"typeString": "mapping(uint32 => bool)"
															}
														},
														"id": 922,
														"indexExpression": {
															"id": 921,
															"name": "updateId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "3215:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3205:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 923,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3227:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3205:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 925,
												"nodeType": "ExpressionStatement",
												"src": "3205:26:6"
											},
											{
												"body": {
													"id": 955,
													"nodeType": "Block",
													"src": "3287:126:6",
													"statements": [
														{
															"assignments": [
																938
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 938,
																	"mutability": "mutable",
																	"name": "tokenId",
																	"nameLocation": "3309:7:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 955,
																	"src": "3302:14:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"typeName": {
																		"id": 937,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "3302:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 942,
															"initialValue": {
																"baseExpression": {
																	"id": 939,
																	"name": "tokenIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "3319:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
																		"typeString": "uint32[] calldata"
																	}
																},
																"id": 941,
																"indexExpression": {
																	"id": 940,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "3328:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3319:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3302:28:6"
														},
														{
															"expression": {
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 943,
																		"name": "isBurned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 673,
																		"src": "3345:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint32_$_t_bool_$",
																			"typeString": "mapping(uint32 => bool)"
																		}
																	},
																	"id": 945,
																	"indexExpression": {
																		"id": 944,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 938,
																		"src": "3354:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3345:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3365:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3345:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 948,
															"nodeType": "ExpressionStatement",
															"src": "3345:24:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 952,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 938,
																		"src": "3393:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	],
																	"expression": {
																		"id": 949,
																		"name": "nft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 915,
																		"src": "3384:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Burnable_$651",
																			"typeString": "contract IERC721Burnable"
																		}
																	},
																	"id": 951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3388:4:6",
																	"memberName": "burn",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 643,
																	"src": "3384:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) external"
																	}
																},
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3384:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 954,
															"nodeType": "ExpressionStatement",
															"src": "3384:17:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 930,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "3261:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 931,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "3265:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
																"typeString": "uint32[] calldata"
															}
														},
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3274:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3265:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3261:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 956,
												"initializationExpression": {
													"assignments": [
														927
													],
													"declarations": [
														{
															"constant": false,
															"id": 927,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3254:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 956,
															"src": "3247:8:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"typeName": {
																"id": 926,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "3247:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 929,
													"initialValue": {
														"hexValue": "30",
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3258:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3247:12:6"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3282:3:6",
														"subExpression": {
															"id": 934,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "3282:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 936,
													"nodeType": "ExpressionStatement",
													"src": "3282:3:6"
												},
												"nodeType": "ForStatement",
												"src": "3242:171:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 958,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3443:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3447:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3443:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 960,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "3455:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
																"typeString": "uint32[] calldata"
															}
														},
														{
															"id": 961,
															"name": "burnFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "3465:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 962,
															"name": "updateId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "3474:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
																"typeString": "uint32[] calldata"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														],
														"id": 957,
														"name": "TokensBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "3430:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_uint32_$dyn_memory_ptr_$_t_uint256_$_t_uint32_$returns$__$",
															"typeString": "function (address,uint32[] memory,uint256,uint32)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3430:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "EmitStatement",
												"src": "3425:58:6"
											}
										]
									},
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_processBurn",
									"nameLocation": "3065:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "3096:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "3078:26:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 906,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "3078:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 907,
													"nodeType": "ArrayTypeName",
													"src": "3078:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "updateId",
												"nameLocation": "3113:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "3106:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 909,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3106:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3077:45:6"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3131:0:6"
									},
									"scope": 1198,
									"src": "3056:435:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1001,
										"nodeType": "Block",
										"src": "3532:222:6",
										"statements": [
											{
												"assignments": [
													970
												],
												"declarations": [
													{
														"constant": false,
														"id": 970,
														"mutability": "mutable",
														"name": "excess",
														"nameLocation": "3551:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1001,
														"src": "3543:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 969,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3543:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 975,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 971,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3560:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 972,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3564:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "3560:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 973,
														"name": "burnFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "3572:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3560:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3543:36:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 976,
														"name": "excess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "3594:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 977,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3603:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3594:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1000,
												"nodeType": "IfStatement",
												"src": "3590:157:6",
												"trueBody": {
													"id": 999,
													"nodeType": "Block",
													"src": "3606:141:6",
													"statements": [
														{
															"assignments": [
																980,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 980,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "3627:7:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 999,
																	"src": "3622:12:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 979,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "3622:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 991,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3680:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 983,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "3648:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 984,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3652:6:6",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "3648:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 982,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3640:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_payable_$",
																					"typeString": "type(address payable)"
																				},
																				"typeName": {
																					"id": 981,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3640:8:6",
																					"stateMutability": "payable",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3640:19:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3660:4:6",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "3640:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 987,
																			"name": "excess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 970,
																			"src": "3672:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "3640:39:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3640:43:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3621:62:6"
														},
														{
															"condition": {
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "3702:8:6",
																"subExpression": {
																	"id": 992,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "3703:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 998,
															"nodeType": "IfStatement",
															"src": "3698:37:6",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "526566756e64206661696c6564",
																			"id": 995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3719:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e",
																				"typeString": "literal_string \"Refund failed\""
																			},
																			"value": "Refund failed"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e",
																				"typeString": "literal_string \"Refund failed\""
																			}
																		],
																		"id": 994,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "3712:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3712:23:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 997,
																"nodeType": "ExpressionStatement",
																"src": "3712:23:6"
															}
														}
													]
												}
											}
										]
									},
									"id": 1002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_refundExcess",
									"nameLocation": "3508:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3521:2:6"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3532:0:6"
									},
									"scope": 1198,
									"src": "3499:255:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "3819:91:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1010,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "3838:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3847:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3838:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e696d756d206d757374206265203e2030",
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3850:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_296c31b8d75dcbb151b5b7b7df75fae073a14e0dff11ea168e3e7c6fa83de361",
																"typeString": "literal_string \"Minimum must be > 0\""
															},
															"value": "Minimum must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_296c31b8d75dcbb151b5b7b7df75fae073a14e0dff11ea168e3e7c6fa83de361",
																"typeString": "literal_string \"Minimum must be > 0\""
															}
														],
														"id": 1009,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3830:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3830:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "3830:42:6"
											},
											{
												"expression": {
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1016,
														"name": "burnAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "3883:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1017,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "3896:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "3883:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "3883:19:6"
											}
										]
									},
									"functionSelector": "1deedfb5",
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1007,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1006,
												"name": "onlyOwner",
												"nameLocations": [
													"3809:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3809:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3809:9:6"
										}
									],
									"name": "setBurnAmount",
									"nameLocation": "3771:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3792:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "3785:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1003,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3785:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3784:15:6"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3819:0:6"
									},
									"scope": 1198,
									"src": "3762:148:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1035,
										"nodeType": "Block",
										"src": "4054:43:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1031,
														"name": "isBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "4072:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint32_$_t_bool_$",
															"typeString": "mapping(uint32 => bool)"
														}
													},
													"id": 1033,
													"indexExpression": {
														"id": 1032,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "4081:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4072:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1030,
												"id": 1034,
												"nodeType": "Return",
												"src": "4065:24:6"
											}
										]
									},
									"functionSelector": "c3d93ecd",
									"id": 1036,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1026,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1023,
													"src": "4014:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												}
											],
											"id": 1027,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1025,
												"name": "validTokenId",
												"nameLocations": [
													"4001:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 732,
												"src": "4001:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4001:21:6"
										}
									],
									"name": "isTokenBurned",
									"nameLocation": "3927:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3948:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "3941:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1022,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3941:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3940:16:6"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "4042:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1028,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4042:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4041:6:6"
									},
									"scope": 1198,
									"src": "3918:179:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "4242:44:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1046,
														"name": "isUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "4260:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint32_$_t_bool_$",
															"typeString": "mapping(uint32 => bool)"
														}
													},
													"id": 1048,
													"indexExpression": {
														"id": 1047,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "4270:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4260:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1045,
												"id": 1049,
												"nodeType": "Return",
												"src": "4253:25:6"
											}
										]
									},
									"functionSelector": "1df8473d",
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1041,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1038,
													"src": "4202:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												}
											],
											"id": 1042,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1040,
												"name": "validTokenId",
												"nameLocations": [
													"4189:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 732,
												"src": "4189:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4189:21:6"
										}
									],
									"name": "isUpdatedToken",
									"nameLocation": "4114:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4136:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "4129:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1037,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4129:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4128:16:6"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "4230:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1043,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4230:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4229:6:6"
									},
									"scope": 1198,
									"src": "4105:181:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "4350:193:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1058,
														"name": "_newFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "4365:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1059,
														"name": "MAX_BURN_FEE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "4375:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4365:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1064,
												"nodeType": "IfStatement",
												"src": "4361:54:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1061,
															"name": "FeeExceedsMaximum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "4396:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1062,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4396:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1063,
													"nodeType": "RevertStatement",
													"src": "4389:26:6"
												}
											},
											{
												"assignments": [
													1066
												],
												"declarations": [
													{
														"constant": false,
														"id": 1066,
														"mutability": "mutable",
														"name": "oldFee",
														"nameLocation": "4444:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1078,
														"src": "4436:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1065,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4436:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1068,
												"initialValue": {
													"id": 1067,
													"name": "burnFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 666,
													"src": "4453:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4436:24:6"
											},
											{
												"expression": {
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1069,
														"name": "burnFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "4471:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1070,
														"name": "_newFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "4481:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4471:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "4471:17:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1074,
															"name": "oldFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "4519:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1075,
															"name": "_newFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "4527:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1073,
														"name": "BurnFeeUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "4504:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1077,
												"nodeType": "EmitStatement",
												"src": "4499:36:6"
											}
										]
									},
									"functionSelector": "4bf2c7c9",
									"id": 1079,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1056,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1055,
												"name": "onlyOwner",
												"nameLocations": [
													"4340:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4340:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4340:9:6"
										}
									],
									"name": "setBurnFee",
									"nameLocation": "4303:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "_newFee",
												"nameLocation": "4322:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "4314:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4314:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4313:17:6"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4350:0:6"
									},
									"scope": 1198,
									"src": "4294:249:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1116,
										"nodeType": "Block",
										"src": "4613:194:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1086,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "4628:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4639:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4628:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1089,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "4644:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1092,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4662:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_BurnManager_$1198",
																			"typeString": "contract BurnManager"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_BurnManager_$1198",
																			"typeString": "contract BurnManager"
																		}
																	],
																	"id": 1091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4654:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1090,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4654:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4668:7:6",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "4654:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4644:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4628:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1100,
												"nodeType": "IfStatement",
												"src": "4624:79:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1097,
															"name": "NoFundsToWithdraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "4684:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4684:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1099,
													"nodeType": "RevertStatement",
													"src": "4677:26:6"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1107,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "4743:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1103,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "4724:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4724:7:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4716:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1101,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4716:8:6",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4716:16:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4733:9:6",
														"memberName": "sendValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 378,
														"src": "4716:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$attached_to$_t_address_payable_$",
															"typeString": "function (address payable,uint256)"
														}
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4716:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "4716:35:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1111,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "4782:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4782:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1113,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "4791:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1110,
														"name": "FundsWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "4767:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4767:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1115,
												"nodeType": "EmitStatement",
												"src": "4762:37:6"
											}
										]
									},
									"id": 1117,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1084,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1083,
												"name": "nonReentrant",
												"nameLocations": [
													"4600:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 285,
												"src": "4600:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4600:12:6"
										}
									],
									"name": "_withdrawFunds",
									"nameLocation": "4560:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4583:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "4575:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4575:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:17:6"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4613:0:6"
									},
									"scope": 1198,
									"src": "4551:256:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "4859:56:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1125,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4893:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_BurnManager_$1198",
																			"typeString": "contract BurnManager"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_BurnManager_$1198",
																			"typeString": "contract BurnManager"
																		}
																	],
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4885:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1123,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4885:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4885:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4899:7:6",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "4885:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1122,
														"name": "_withdrawFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "4870:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "4870:37:6"
											}
										]
									},
									"functionSelector": "24600fc3",
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1120,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1119,
												"name": "onlyOwner",
												"nameLocations": [
													"4849:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4849:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4849:9:6"
										}
									],
									"name": "withdrawFunds",
									"nameLocation": "4824:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4837:2:6"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4859:0:6"
									},
									"scope": 1198,
									"src": "4815:100:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "4989:42:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1139,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "5015:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1138,
														"name": "_withdrawFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "5000:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5000:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "5000:23:6"
											}
										]
									},
									"functionSelector": "d4e0ed2e",
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1136,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1135,
												"name": "onlyOwner",
												"nameLocations": [
													"4979:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4979:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4979:9:6"
										}
									],
									"name": "withdrawPartialFunds",
									"nameLocation": "4932:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4961:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "4953:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4953:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4952:17:6"
									},
									"returnParameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4989:0:6"
									},
									"scope": 1198,
									"src": "4923:108:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "5075:27:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1148,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 238,
														"src": "5086:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5086:8:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1150,
												"nodeType": "ExpressionStatement",
												"src": "5086:8:6"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1146,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1145,
												"name": "onlyOwner",
												"nameLocations": [
													"5065:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5065:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "5065:9:6"
										}
									],
									"name": "pause",
									"nameLocation": "5048:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5053:2:6"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5075:0:6"
									},
									"scope": 1198,
									"src": "5039:63:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1160,
										"nodeType": "Block",
										"src": "5148:29:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1157,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "5159:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5159:10:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "5159:10:6"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1161,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1155,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1154,
												"name": "onlyOwner",
												"nameLocations": [
													"5138:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5138:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "5138:9:6"
										}
									],
									"name": "unpause",
									"nameLocation": "5119:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5126:2:6"
									},
									"returnParameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5148:0:6"
									},
									"scope": 1198,
									"src": "5110:67:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1172,
										"nodeType": "Block",
										"src": "5247:47:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1168,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5273:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_BurnManager_$1198",
																	"typeString": "contract BurnManager"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_BurnManager_$1198",
																	"typeString": "contract BurnManager"
																}
															],
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5265:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1166,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5265:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5265:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5279:7:6",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "5265:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1165,
												"id": 1171,
												"nodeType": "Return",
												"src": "5258:28:6"
											}
										]
									},
									"functionSelector": "6f9fb98a",
									"id": 1173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getContractBalance",
									"nameLocation": "5194:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5212:2:6"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "5238:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5238:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5237:9:6"
									},
									"scope": 1198,
									"src": "5185:109:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1180,
										"nodeType": "Block",
										"src": "5356:33:6",
										"statements": [
											{
												"expression": {
													"id": 1178,
													"name": "burnFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 666,
													"src": "5374:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1177,
												"id": 1179,
												"nodeType": "Return",
												"src": "5367:14:6"
											}
										]
									},
									"functionSelector": "aa4b10d1",
									"id": 1181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBurnFee",
									"nameLocation": "5311:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5321:2:6"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "5347:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5347:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5346:9:6"
									},
									"scope": 1198,
									"src": "5302:87:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1188,
										"nodeType": "Block",
										"src": "5458:38:6",
										"statements": [
											{
												"expression": {
													"id": 1186,
													"name": "MAX_BURN_FEE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 680,
													"src": "5476:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1185,
												"id": 1187,
												"nodeType": "Return",
												"src": "5469:19:6"
											}
										]
									},
									"functionSelector": "576aee51",
									"id": 1189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMaxBurnFee",
									"nameLocation": "5410:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5423:2:6"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "5449:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5449:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5448:9:6"
									},
									"scope": 1198,
									"src": "5401:95:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1196,
										"nodeType": "Block",
										"src": "5568:61:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "44697265637420455448207472616e7366657273206e6f7420616c6c6f776564",
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5586:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_399aaf7f4daf27dd91b93a997a9fe9880d262fa5c6e087f0fedfe596870eef95",
																"typeString": "literal_string \"Direct ETH transfers not allowed\""
															},
															"value": "Direct ETH transfers not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_399aaf7f4daf27dd91b93a997a9fe9880d262fa5c6e087f0fedfe596870eef95",
																"typeString": "literal_string \"Direct ETH transfers not allowed\""
															}
														],
														"id": 1192,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "5579:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5579:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "5579:42:6"
											}
										]
									},
									"id": 1197,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5548:2:6"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5568:0:6"
									},
									"scope": 1198,
									"src": "5541:88:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1199,
							"src": "631:5001:6",
							"usedErrors": [
								13,
								18,
								620,
								623,
								705,
								707,
								709,
								711,
								713,
								715,
								717,
								719
							],
							"usedEvents": [
								24,
								158,
								163,
								691,
								697,
								703
							]
						}
					],
					"src": "63:5569:6"
				},
				"id": 6
			}
		}
	}
}